{"id":232,"name":"intersectionBy","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/array.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/array.ts","line":575,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/array.ts#L575"}],"signatures":[{"id":233,"name":"intersectionBy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"intersectionBy"}]},{"tag":"@description","content":[{"kind":"text","text":"在应用转换函数后返回两个数组中存在的元素。Returns elements that exist in both arrays after applying a transformation function"}]},{"tag":"@returns","content":[{"kind":"text","text":"包含arr1中具有与arr2匹配的转换值的元素的数组。Array containing elements from arr1 that have matching transformed values in arr2"}]},{"tag":"@throws","content":[{"kind":"text","text":"当arr1或arr2不是数组，或fn不是函数时抛出错误。When arr1 or arr2 is not an array, or fn is not a function"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic usage\nintersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor); // -> [2.1]\nintersectionBy(['apple', 'BANANA'], ['banana', 'cherry'], s => s.toLowerCase()); // -> ['BANANA']\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Object comparison\nconst users1 = [{ id: 1, name: 'John' }, { id: 2, name: 'Jane' }];\nconst users2 = [{ id: 1, name: 'Johnny' }, { id: 3, name: 'Bob' }];\nintersectionBy(users1, users2, u => u.id); // -> [{ id: 1, name: 'John' }]\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Edge cases\nintersectionBy([], [1, 2], x => x); // -> []\nintersectionBy([1, 2], [], x => x); // -> []\n```"}]}]},"parameters":[{"id":234,"name":"arr1","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"第一个数组。First array"}]},"type":{"type":"reference","id":300,"name":"AnyArr"},"text":{"comment":"<p>第一个数组。First array</p>\n"}},{"id":235,"name":"arr2","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"第二个数组。Second array"}]},"type":{"type":"reference","id":300,"name":"AnyArr"},"text":{"comment":"<p>第二个数组。Second array</p>\n"}},{"id":236,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"在比较前转换值的函数。Function to transform values before comparison"}]},"type":{"type":"reflection","declaration":{"id":237,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/array.ts","line":575,"character":63,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/array.ts#L575"}],"signatures":[{"id":238,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":239,"name":"v","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"unknown"}}]}},"text":{"comment":"<p>在比较前转换值的函数。Function to transform values before comparison</p>\n"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}},"is":{"declaration":false},"location":{"query":"Array.Function.intersectionBy","hash":"intersectionBy"},"text":{"comment":"<h5>Function:</h5><p>intersectionBy</p>\n<h5>Description:</h5><p>在应用转换函数后返回两个数组中存在的元素。Returns elements that exist in both arrays after applying a transformation function</p>\n<h5>Returns:</h5><p>包含arr1中具有与arr2匹配的转换值的元素的数组。Array containing elements from arr1 that have matching transformed values in arr2</p>\n<h5>Throws:</h5><p>当arr1或arr2不是数组，或fn不是函数时抛出错误。When arr1 or arr2 is not an array, or fn is not a function</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic usage</span>\n<span class=\"pl-en\">intersectionBy</span>([<span class=\"pl-c1\">2.1</span>, <span class=\"pl-c1\">1.2</span>], [<span class=\"pl-c1\">2.3</span>, <span class=\"pl-c1\">3.4</span>], <span class=\"pl-c1\">Math</span>.<span class=\"pl-c1\">floor</span>); <span class=\"pl-c\">// -> [2.1]</span>\n<span class=\"pl-en\">intersectionBy</span>([<span class=\"pl-s\"><span class=\"pl-pds\">'</span>apple<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>BANANA<span class=\"pl-pds\">'</span></span>], [<span class=\"pl-s\"><span class=\"pl-pds\">'</span>banana<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>cherry<span class=\"pl-pds\">'</span></span>], <span class=\"pl-v\">s</span> <span class=\"pl-k\">=></span> <span class=\"pl-smi\">s</span>.<span class=\"pl-c1\">toLowerCase</span>()); <span class=\"pl-c\">// -> ['BANANA']</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Object comparison</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">users1</span> <span class=\"pl-k\">=</span> [{ id: <span class=\"pl-c1\">1</span>, name: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>John<span class=\"pl-pds\">'</span></span> }, { id: <span class=\"pl-c1\">2</span>, name: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Jane<span class=\"pl-pds\">'</span></span> }];\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">users2</span> <span class=\"pl-k\">=</span> [{ id: <span class=\"pl-c1\">1</span>, name: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Johnny<span class=\"pl-pds\">'</span></span> }, { id: <span class=\"pl-c1\">3</span>, name: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Bob<span class=\"pl-pds\">'</span></span> }];\n<span class=\"pl-en\">intersectionBy</span>(<span class=\"pl-smi\">users1</span>, <span class=\"pl-smi\">users2</span>, <span class=\"pl-v\">u</span> <span class=\"pl-k\">=></span> <span class=\"pl-smi\">u</span>.<span class=\"pl-c1\">id</span>); <span class=\"pl-c\">// -> [{ id: 1, name: 'John' }]</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Edge cases</span>\n<span class=\"pl-en\">intersectionBy</span>([], [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>], <span class=\"pl-v\">x</span> <span class=\"pl-k\">=></span> <span class=\"pl-smi\">x</span>); <span class=\"pl-c\">// -> []</span>\n<span class=\"pl-en\">intersectionBy</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>], [], <span class=\"pl-v\">x</span> <span class=\"pl-k\">=></span> <span class=\"pl-smi\">x</span>); <span class=\"pl-c\">// -> []</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/array.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/array.ts","line":575,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/array.ts#L575"}],"parentId":232}],"is":{"declaration":true},"location":{"query":"Array.Function.intersectionBy","hash":""},"text":{},"parentId":154}
