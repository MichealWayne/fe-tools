{"id":1497,"name":"allLoadavg","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/node-utils/src/system/os.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/system/os.ts","line":388,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/system/os.ts#L388"}],"signatures":[{"id":1498,"name":"allLoadavg","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"allLoadavg"}]},{"tag":"@description","content":[{"kind":"text","text":"获取所有1、5和15分钟的负载平均值作为格式化字符串。Gets all load average values for 1, 5, and 15 minutes as a formatted string for comprehensive system load monitoring."}]},{"tag":"@returns","content":[{"kind":"text","text":"逗号分隔的负载平均值：\"1分钟,5分钟,15分钟\"。Comma-separated load averages: \"1min,5min,15min\""}]},{"tag":"@example","content":[{"kind":"text","text":"// System load monitoring\nconst loadAvg = allLoadavg();\nconsole.log("},{"kind":"code","text":"`Load averages: ${loadAvg}`"},{"kind":"text","text":");\n// Output: \"0.5234,0.4123,0.3456\""}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Parse and analyze load averages\nconst [load1, load5, load15] = allLoadavg().split(',').map(Number);\nif (load1 > cpuCount()) {\n  console.warn('System under high load');\n}\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"loadavg","target":1499},{"kind":"text","text":" - Get specific time period load average"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"https://nodejs.org/api/os.html#os_os_loadavg","target":"https://nodejs.org/api/os.html#os_os_loadavg"},{"kind":"text","text":" - Node.js os.loadavg() documentation"},{"kind":"text","text":"\n"}]}]},"type":{"type":"intrinsic","name":"string"},"is":{"declaration":false},"location":{"query":"NodeUtils.Function.allLoadavg","hash":"allLoadavg"},"text":{"comment":"<h5>Function:</h5><p>allLoadavg</p>\n<h5>Description:</h5><p>获取所有1、5和15分钟的负载平均值作为格式化字符串。Gets all load average values for 1, 5, and 15 minutes as a formatted string for comprehensive system load monitoring.</p>\n<h5>Returns:</h5><p>逗号分隔的负载平均值：&quot;1分钟,5分钟,15分钟&quot;。Comma-separated load averages: &quot;1min,5min,15min&quot;</p>\n<h5>Example:</h5><p>// System load monitoring\nconst loadAvg = allLoadavg();\nconsole.log(<code>Load averages: ${loadAvg}</code>);\n// Output: &quot;0.5234,0.4123,0.3456&quot;</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Parse and analyze load averages</span>\n<span class=\"pl-k\">const</span> [<span class=\"pl-c1\">load1</span>, <span class=\"pl-c1\">load5</span>, <span class=\"pl-c1\">load15</span>] <span class=\"pl-k\">=</span> <span class=\"pl-en\">allLoadavg</span>().<span class=\"pl-c1\">split</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>,<span class=\"pl-pds\">'</span></span>).<span class=\"pl-en\">map</span>(<span class=\"pl-c1\">Number</span>);\n<span class=\"pl-k\">if</span> (<span class=\"pl-smi\">load1</span> <span class=\"pl-k\">></span> <span class=\"pl-en\">cpuCount</span>()) {\n  <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">warn</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>System under high load<span class=\"pl-pds\">'</span></span>);\n}\n</code></pre>\n<h5>Since:</h5><p>1.0.0</p>\n<h5>See:</h5><ul>\n<li><a href=\"1499\">loadavg</a> - Get specific time period load average</li>\n<li><a href=\"https://nodejs.org/api/os.html#os_os_loadavg\">https://nodejs.org/api/os.html#os_os_loadavg</a> - Node.js os.loadavg() documentation</li>\n</ul>\n"},"sources":[{"fileName":"packages/node-utils/src/system/os.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/system/os.ts","line":388,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/system/os.ts#L388"}],"parentId":1497}],"is":{"declaration":true},"location":{"query":"NodeUtils.Function.allLoadavg","hash":""},"text":{},"parentId":743}
