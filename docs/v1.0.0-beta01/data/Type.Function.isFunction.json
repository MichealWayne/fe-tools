{"id":726,"name":"isFunction","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/type.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/type.ts","line":254,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/type.ts#L254"}],"signatures":[{"id":727,"name":"isFunction","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"isFunction"}]},{"tag":"@description","content":[{"kind":"text","text":"检查值是否为函数。Checks if a value is a function"}]},{"tag":"@returns","content":[{"kind":"text","text":"如果值为函数则返回true，否则返回false。True if the value is a function, false otherwise"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Regular functions\nisFunction(function() {}); // -> true\nisFunction(() => {}); // -> true\nisFunction(async function() {}); // -> true\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Built-in functions\nisFunction(console.log); // -> true\nisFunction(Math.max); // -> true\nisFunction(Array.isArray); // -> true\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Constructor functions\nisFunction(Date); // -> true\nisFunction(Array); // -> true\nisFunction(Object); // -> true\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Not functions\nisFunction([1, 2, 3]); // -> false\nisFunction({ a: 1 }); // -> false\nisFunction('function'); // -> false\nisFunction(null); // -> false\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Class constructors\nclass MyClass {}\nisFunction(MyClass); // -> true (classes are functions)\n```"}]}]},"parameters":[{"id":728,"name":"val","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"要检查的值。Value to check"}]},"type":{"type":"intrinsic","name":"unknown"},"text":{"comment":"<p>要检查的值。Value to check</p>\n"}}],"type":{"type":"predicate","name":"val","asserts":false,"targetType":{"type":"reference","name":"Function","qualifiedName":"Function","package":"typescript"}},"is":{"declaration":false},"location":{"query":"Type.Function.isFunction","hash":"isFunction"},"text":{"comment":"<h5>Function:</h5><p>isFunction</p>\n<h5>Description:</h5><p>检查值是否为函数。Checks if a value is a function</p>\n<h5>Returns:</h5><p>如果值为函数则返回true，否则返回false。True if the value is a function, false otherwise</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Regular functions</span>\n<span class=\"pl-en\">isFunction</span>(<span class=\"pl-k\">function</span>() {}); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">isFunction</span>(() <span class=\"pl-k\">=></span> {}); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">isFunction</span>(<span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span>() {}); <span class=\"pl-c\">// -> true</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Built-in functions</span>\n<span class=\"pl-en\">isFunction</span>(<span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">isFunction</span>(<span class=\"pl-c1\">Math</span>.<span class=\"pl-c1\">max</span>); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">isFunction</span>(<span class=\"pl-c1\">Array</span>.<span class=\"pl-smi\">isArray</span>); <span class=\"pl-c\">// -> true</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Constructor functions</span>\n<span class=\"pl-en\">isFunction</span>(<span class=\"pl-c1\">Date</span>); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">isFunction</span>(<span class=\"pl-c1\">Array</span>); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">isFunction</span>(<span class=\"pl-c1\">Object</span>); <span class=\"pl-c\">// -> true</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Not functions</span>\n<span class=\"pl-en\">isFunction</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>]); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isFunction</span>({ a: <span class=\"pl-c1\">1</span> }); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isFunction</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>function<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isFunction</span>(<span class=\"pl-c1\">null</span>); <span class=\"pl-c\">// -> false</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Class constructors</span>\n<span class=\"pl-k\">class</span> <span class=\"pl-en\">MyClass</span> {}\n<span class=\"pl-en\">isFunction</span>(<span class=\"pl-smi\">MyClass</span>); <span class=\"pl-c\">// -> true (classes are functions)</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/type.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/type.ts","line":254,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/type.ts#L254"}],"parentId":726}],"is":{"declaration":true},"location":{"query":"Type.Function.isFunction","hash":""},"text":{},"parentId":710}
