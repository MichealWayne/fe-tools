{"id":473,"name":"promisify","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"utils/src/function.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/function.ts","line":270,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/4dbe144/utils/packages/utils/src/function.ts#L270"}],"signatures":[{"id":474,"name":"promisify","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"promisify"}]},{"tag":"@description","content":[{"kind":"text","text":"函数执行promise化"}]},{"tag":"@returns","content":[{"kind":"text","text":"返回一个promise函数"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nimport fs from 'fs';\r\nconst readFileAsync = promisify(fs.readFile);\r\n\nasync function main() {\r\n const data = await readFileAsync('file.txt', 'utf8');\r\n console.log(data);\r\n}\r\nmain();\n```"}]}]},"typeParameter":[{"id":475,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}},{"id":476,"name":"R","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":477,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要promise化的函数"}]},"type":{"type":"reflection","declaration":{"id":478,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"utils/src/function.ts","line":271,"character":6,"url":"https://github.com/MichealWayne/fe-tools/blob/4dbe144/utils/packages/utils/src/function.ts#L271"}],"signatures":[{"id":479,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":480,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"args","isOptional":false,"element":{"type":"reference","id":475,"name":"T"}},{"type":"named-tuple-member","name":"errHandler","isOptional":true,"element":{"type":"reflection","declaration":{"id":481,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"utils/src/function.ts","line":271,"character":39,"url":"https://github.com/MichealWayne/fe-tools/blob/4dbe144/utils/packages/utils/src/function.ts#L271"}],"signatures":[{"id":482,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":483,"name":"err","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Error","qualifiedName":"Error","package":"typescript"}]}},{"id":484,"name":"result","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":476,"name":"R"}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}},"text":{"comment":"<p>要promise化的函数</p>\n"}}],"type":{"type":"reflection","declaration":{"id":485,"name":"promisify","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"utils/src/function.ts","line":272,"character":3,"url":"https://github.com/MichealWayne/fe-tools/blob/4dbe144/utils/packages/utils/src/function.ts#L272"}],"signatures":[{"id":486,"name":"promisify","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":487,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","id":475,"name":"T"},"text":{}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":476,"name":"R"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"is":{"declaration":false},"location":{"query":"Function.Function.promisify","hash":"promisify.__type"},"text":{},"parentId":473}],"location":{"query":"Function.Function.promisify","hash":"promisify"}}},"is":{"declaration":false},"location":{"query":"Function.Function.promisify","hash":"promisify"},"text":{"comment":"<h5>Function:</h5><p>promisify</p>\n<h5>Description:</h5><p>函数执行promise化</p>\n<h5>Returns:</h5><p>返回一个promise函数</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-k\">import</span> <span class=\"pl-smi\">fs</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>fs<span class=\"pl-pds\">'</span></span>;\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">readFileAsync</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">promisify</span>(<span class=\"pl-smi\">fs</span>.<span class=\"pl-smi\">readFile</span>);\n\n<span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-en\">main</span>() {\n <span class=\"pl-k\">const</span> <span class=\"pl-c1\">data</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">readFileAsync</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>file.txt<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>utf8<span class=\"pl-pds\">'</span></span>);\n <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-smi\">data</span>);\n}\n<span class=\"pl-en\">main</span>();\n</code></pre>\n"},"sources":[{"fileName":"utils/src/function.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/function.ts","line":270,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/4dbe144/utils/packages/utils/src/function.ts#L270"}],"parentId":473}],"is":{"declaration":true},"location":{"query":"Function.Function.promisify","hash":""},"text":{},"parentId":391}
