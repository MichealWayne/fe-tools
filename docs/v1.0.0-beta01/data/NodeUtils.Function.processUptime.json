{"id":1479,"name":"processUptime","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/node-utils/src/system/os.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/system/os.ts","line":115,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/system/os.ts#L115"}],"signatures":[{"id":1480,"name":"processUptime","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"processUptime"}]},{"tag":"@description","content":[{"kind":"text","text":"获取Node.js进程从启动以来的运行时间（秒）。Gets the Node.js process uptime in seconds since the process started for application monitoring."}]},{"tag":"@returns","content":[{"kind":"text","text":"进程运行时间（秒）。Process uptime in seconds"}]},{"tag":"@example","content":[{"kind":"text","text":"// Log application runtime\nconst runtime = processUptime();\nconsole.log("},{"kind":"code","text":"`Application has been running for ${runtime.toFixed(2)} seconds`"},{"kind":"text","text":");"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Performance monitoring and restart logic\nif (processUptime() > 86400) { // 24 hours\n  console.log('Process has been running for over 24 hours, consider restart');\n}\n```"}]},{"tag":"@example","content":[{"kind":"text","text":"// Calculate startup time\nsetTimeout(() => {\n  console.log("},{"kind":"code","text":"`Application startup took ${processUptime()} seconds`"},{"kind":"text","text":");\n}, 0);"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]},{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"https://nodejs.org/api/process.html#process_process_uptime","target":"https://nodejs.org/api/process.html#process_process_uptime"},{"kind":"text","text":" - Node.js process.uptime() documentation"}]}]},"type":{"type":"intrinsic","name":"number"},"is":{"declaration":false},"location":{"query":"NodeUtils.Function.processUptime","hash":"processUptime"},"text":{"comment":"<h5>Function:</h5><p>processUptime</p>\n<h5>Description:</h5><p>获取Node.js进程从启动以来的运行时间（秒）。Gets the Node.js process uptime in seconds since the process started for application monitoring.</p>\n<h5>Returns:</h5><p>进程运行时间（秒）。Process uptime in seconds</p>\n<h5>Example:</h5><p>// Log application runtime\nconst runtime = processUptime();\nconsole.log(<code>Application has been running for ${runtime.toFixed(2)} seconds</code>);</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Performance monitoring and restart logic</span>\n<span class=\"pl-k\">if</span> (<span class=\"pl-en\">processUptime</span>() <span class=\"pl-k\">></span> <span class=\"pl-c1\">86400</span>) { <span class=\"pl-c\">// 24 hours</span>\n  <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Process has been running for over 24 hours, consider restart<span class=\"pl-pds\">'</span></span>);\n}\n</code></pre>\n<h5>Example:</h5><p>// Calculate startup time\nsetTimeout(() =&gt; {\n  console.log(<code>Application startup took ${processUptime()} seconds</code>);\n}, 0);</p>\n<h5>Since:</h5><p>1.0.0</p>\n<h5>See:</h5><p><a href=\"https://nodejs.org/api/process.html#process_process_uptime\">https://nodejs.org/api/process.html#process_process_uptime</a> - Node.js process.uptime() documentation</p>\n"},"sources":[{"fileName":"packages/node-utils/src/system/os.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/system/os.ts","line":115,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/system/os.ts#L115"}],"parentId":1479}],"is":{"declaration":true},"location":{"query":"NodeUtils.Function.processUptime","hash":""},"text":{},"parentId":743}
