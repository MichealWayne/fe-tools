{"id":720,"name":"isNumber","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/type.ts","fullFileName":"/Users/wayne/Desktop/study/my-blog/fe-tools/utils/packages/utils/src/type.ts","line":87,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/52f1cbe5/utils/packages/utils/src/type.ts#L87"}],"signatures":[{"id":721,"name":"isNumber","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"isNumber"}]},{"tag":"@description","content":[{"kind":"text","text":"**isNumber(val)** if the variable value is Number"}]},{"tag":"@returns","content":[]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst test1 = 1,\r\n    test2 = new Number(1),\r\n    test3 = Number(1),\r\n    test4 = Infinity,\r\n    test5 = NaN;\r\nisNumber(test1);  // true\r\nisNumber(test2);  // false\r\nisNumber(test3);  // true\r\nisNumber(test4);  // false\r\nisNumber(test5);  // false\n```"}]}]},"parameters":[{"id":722,"name":"val","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"unknown"},"text":{}}],"type":{"type":"predicate","name":"val","asserts":false,"targetType":{"type":"intrinsic","name":"number"}},"is":{"declaration":false},"location":{"query":"Type.Function.isNumber","hash":"isNumber"},"text":{"comment":"<h5>Function:</h5><p>isNumber</p>\n<h5>Description:</h5><p><strong>isNumber(val)</strong> if the variable value is Number</p>\n<h5>Returns:</h5><h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-k\">const</span> <span class=\"pl-c1\">test1</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>,\n    <span class=\"pl-c1\">test2</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-c1\">Number</span>(<span class=\"pl-c1\">1</span>),\n    <span class=\"pl-c1\">test3</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Number</span>(<span class=\"pl-c1\">1</span>),\n    <span class=\"pl-c1\">test4</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Infinity</span>,\n    <span class=\"pl-c1\">test5</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">NaN</span>;\n<span class=\"pl-en\">isNumber</span>(<span class=\"pl-smi\">test1</span>);  <span class=\"pl-c\">// true</span>\n<span class=\"pl-en\">isNumber</span>(<span class=\"pl-smi\">test2</span>);  <span class=\"pl-c\">// false</span>\n<span class=\"pl-en\">isNumber</span>(<span class=\"pl-smi\">test3</span>);  <span class=\"pl-c\">// true</span>\n<span class=\"pl-en\">isNumber</span>(<span class=\"pl-smi\">test4</span>);  <span class=\"pl-c\">// false</span>\n<span class=\"pl-en\">isNumber</span>(<span class=\"pl-smi\">test5</span>);  <span class=\"pl-c\">// false</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/type.ts","fullFileName":"/Users/wayne/Desktop/study/my-blog/fe-tools/utils/packages/utils/src/type.ts","line":87,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/52f1cbe5/utils/packages/utils/src/type.ts#L87"}],"parentId":720}],"is":{"declaration":true},"location":{"query":"Type.Function.isNumber","hash":""},"text":{},"parentId":710}
