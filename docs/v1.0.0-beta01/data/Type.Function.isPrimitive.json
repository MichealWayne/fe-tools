{"id":716,"name":"isPrimitive","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"utils/src/type.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/type.ts","line":133,"character":13,"url":"https://github.com/MichealWayne/fe-tools/blob/9facee2/utils/packages/utils/src/type.ts#L133"}],"signatures":[{"id":717,"name":"isPrimitive","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"isPrimitive"}]},{"tag":"@description","content":[{"kind":"text","text":"**isPrimitive(val)** if the variable value is isPromise.(https://github.com/then/is-promise)"}]},{"tag":"@returns","content":[]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nconst test1 = new Promise(resolve => resolve(1))),\r\n    test2 = { then: () => '', catch: () => '', };\r\nisPrimitive(test1);  // true\r\nisPrimitive(test2);  // true\n```"}]}]},"typeParameter":[{"id":718,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":719,"name":"val","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"variable value"}]},"type":{"type":"intrinsic","name":"unknown"},"text":{"comment":"<p>variable value</p>\n"}}],"type":{"type":"predicate","name":"val","asserts":false,"targetType":{"type":"reference","typeArguments":[{"type":"reference","id":718,"name":"T"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}},"is":{"declaration":false},"location":{"query":"Type.Function.isPrimitive","hash":"isPrimitive"},"text":{"comment":"<h5>Function:</h5><p>isPrimitive</p>\n<h5>Description:</h5><p><strong>isPrimitive(val)</strong> if the variable value is isPromise.(<a href=\"https://github.com/then/is-promise\">https://github.com/then/is-promise</a>)</p>\n<h5>Returns:</h5><h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-k\">const</span> <span class=\"pl-c1\">test1</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-c1\">Promise</span>(<span class=\"pl-v\">resolve</span> <span class=\"pl-k\">=></span> <span class=\"pl-en\">resolve</span>(<span class=\"pl-c1\">1</span>))),\n    <span class=\"pl-c1\">test2</span> <span class=\"pl-k\">=</span> { <span class=\"pl-en\">then</span>: () <span class=\"pl-k\">=></span> <span class=\"pl-s\"><span class=\"pl-pds\">''</span></span>, <span class=\"pl-en\">catch</span>: () <span class=\"pl-k\">=></span> <span class=\"pl-s\"><span class=\"pl-pds\">''</span></span>, };\n<span class=\"pl-en\">isPrimitive</span>(<span class=\"pl-smi\">test1</span>);  <span class=\"pl-c\">// true</span>\n<span class=\"pl-en\">isPrimitive</span>(<span class=\"pl-smi\">test2</span>);  <span class=\"pl-c\">// true</span>\n</code></pre>\n"},"sources":[{"fileName":"utils/src/type.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/type.ts","line":133,"character":27,"url":"https://github.com/MichealWayne/fe-tools/blob/9facee2/utils/packages/utils/src/type.ts#L133"}],"parentId":716}],"is":{"declaration":true},"location":{"query":"Type.Function.isPrimitive","hash":""},"text":{},"parentId":690}
