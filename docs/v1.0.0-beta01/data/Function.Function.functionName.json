{"id":466,"name":"functionName","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/function.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/function.ts","line":538,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/function.ts#L538"}],"signatures":[{"id":467,"name":"functionName","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"functionName"}]},{"tag":"@description","content":[{"kind":"text","text":"记录并返回函数的名称（用于调试）。Logs and returns the name of a function (useful for debugging)"}]},{"tag":"@returns","content":[{"kind":"text","text":"函数的名称，如果是匿名函数则为空字符串。The function's name or empty string if anonymous"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Named function\nfunction add(a: number, b: number) {\n  return a + b;\n}\n\nfunctionName(add); // -> Logs: \"add [Function: add]\", Returns: \"add\"\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Anonymous function\nconst anonymous = function() { return 42; };\nfunctionName(anonymous); // -> Logs: \"\" [Function: anonymous], Returns: \"\"\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Arrow function\nconst arrow = () => 'hello';\nfunctionName(arrow); // -> Logs: \"arrow [Function: arrow]\", Returns: \"arrow\"\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Built-in functions\nfunctionName(Math.max); // -> Logs: \"max [Function: max]\", Returns: \"max\"\nfunctionName(console.log); // -> Logs: \"log [Function: log]\", Returns: \"log\"\n```"}]}]},"typeParameter":[{"id":471,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reflection","declaration":{"id":468,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/function.ts","line":538,"character":39,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/function.ts#L538"}],"signatures":[{"id":469,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":470,"name":"ks","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"type":{"type":"intrinsic","name":"unknown"}}]}}}],"parameters":[{"id":472,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要获取名称的函数。Function to get the name of"}]},"type":{"type":"reference","id":471,"name":"T"},"text":{"comment":"<p>要获取名称的函数。Function to get the name of</p>\n"}}],"type":{"type":"intrinsic","name":"string"},"is":{"declaration":false},"location":{"query":"Function.Function.functionName","hash":"functionName"},"text":{"comment":"<h5>Function:</h5><p>functionName</p>\n<h5>Description:</h5><p>记录并返回函数的名称（用于调试）。Logs and returns the name of a function (useful for debugging)</p>\n<h5>Returns:</h5><p>函数的名称，如果是匿名函数则为空字符串。The function&#39;s name or empty string if anonymous</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Named function</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">add</span>(<span class=\"pl-v\">a</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">number</span>, <span class=\"pl-v\">b</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">number</span>) {\n  <span class=\"pl-k\">return</span> <span class=\"pl-smi\">a</span> <span class=\"pl-k\">+</span> <span class=\"pl-smi\">b</span>;\n}\n\n<span class=\"pl-en\">functionName</span>(<span class=\"pl-smi\">add</span>); <span class=\"pl-c\">// -> Logs: \"add [Function: add]\", Returns: \"add\"</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Anonymous function</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">anonymous</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">function</span>() { <span class=\"pl-k\">return</span> <span class=\"pl-c1\">42</span>; };\n<span class=\"pl-en\">functionName</span>(<span class=\"pl-smi\">anonymous</span>); <span class=\"pl-c\">// -> Logs: \"\" [Function: anonymous], Returns: \"\"</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Arrow function</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">arrow</span> <span class=\"pl-k\">=</span> () <span class=\"pl-k\">=></span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>hello<span class=\"pl-pds\">'</span></span>;\n<span class=\"pl-en\">functionName</span>(<span class=\"pl-smi\">arrow</span>); <span class=\"pl-c\">// -> Logs: \"arrow [Function: arrow]\", Returns: \"arrow\"</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Built-in functions</span>\n<span class=\"pl-en\">functionName</span>(<span class=\"pl-c1\">Math</span>.<span class=\"pl-c1\">max</span>); <span class=\"pl-c\">// -> Logs: \"max [Function: max]\", Returns: \"max\"</span>\n<span class=\"pl-en\">functionName</span>(<span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>); <span class=\"pl-c\">// -> Logs: \"log [Function: log]\", Returns: \"log\"</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/function.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/function.ts","line":538,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/function.ts#L538"}],"parentId":466}],"is":{"declaration":true},"location":{"query":"Function.Function.functionName","hash":""},"text":{},"parentId":391}
