{"id":962,"name":"isBrowser","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/web-utils/src/platform.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/web-utils/src/platform.ts","line":62,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/web-utils/src/platform.ts#L62"}],"signatures":[{"id":963,"name":"isBrowser","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"isBrowser"}]},{"tag":"@description","content":[{"kind":"text","text":"检测代码是否在浏览器环境中运行（相对于Node.js/服务器端）。Detects if the code is running in a browser environment (vs Node.js/server-side)"}]},{"tag":"@returns","content":[{"kind":"text","text":"如果在浏览器中运行则为true，如果在Node.js或其他非浏览器环境中则为false。True if running in browser, false if in Node.js or other non-browser environment"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Conditional code execution based on environment\r\nif (isBrowser()) {\r\n  // Browser-specific code\r\n  document.addEventListener('DOMContentLoaded', initializeApp);\r\n  localStorage.setItem('app_version', '1.0.0');\r\n} else {\r\n  // Node.js/server-side code\r\n  const fs = require('fs');\r\n  console.log('Running in Node.js environment');\r\n}\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Universal/isomorphic code pattern\r\nfunction getStorageValue(key, defaultValue) {\r\n  if (isBrowser()) {\r\n    return localStorage.getItem(key) || defaultValue;\r\n  } else {\r\n    // Server-side fallback or different storage mechanism\r\n    return process.env[key] || defaultValue;\r\n  }\r\n}\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Feature detection with environment check\r\nfunction initializeAnalytics() {\r\n  if (!isBrowser()) {\r\n    console.log('Analytics not available in server environment');\r\n    return;\r\n  }\r\n\r\n  // Browser-only analytics initialization\r\n  if (window.gtag) {\r\n    gtag('config', 'GA_MEASUREMENT_ID');\r\n  }\r\n}\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"isPC","target":964},{"kind":"text","text":" - Detect PC vs mobile environment"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"getSystemOS","target":968},{"kind":"text","text":" - Get operating system information"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"https://developer.mozilla.org/en-US/docs/Web/API/Window","target":"https://developer.mozilla.org/en-US/docs/Web/API/Window"},{"kind":"text","text":" - Browser Window object"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"https://nodejs.org/api/globals.html","target":"https://nodejs.org/api/globals.html"},{"kind":"text","text":" - Node.js global objects"},{"kind":"text","text":"\n"}]}]},"type":{"type":"intrinsic","name":"boolean"},"is":{"declaration":false},"location":{"query":"Platform.Function.isBrowser","hash":"isBrowser"},"text":{"comment":"<h5>Function:</h5><p>isBrowser</p>\n<h5>Description:</h5><p>检测代码是否在浏览器环境中运行（相对于Node.js/服务器端）。Detects if the code is running in a browser environment (vs Node.js/server-side)</p>\n<h5>Returns:</h5><p>如果在浏览器中运行则为true，如果在Node.js或其他非浏览器环境中则为false。True if running in browser, false if in Node.js or other non-browser environment</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Conditional code execution based on environment</span>\n<span class=\"pl-k\">if</span> (<span class=\"pl-en\">isBrowser</span>()) {\n  <span class=\"pl-c\">// Browser-specific code</span>\n  <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">addEventListener</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>DOMContentLoaded<span class=\"pl-pds\">'</span></span>, <span class=\"pl-smi\">initializeApp</span>);\n  <span class=\"pl-smi\">localStorage</span>.<span class=\"pl-c1\">setItem</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>app_version<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1.0.0<span class=\"pl-pds\">'</span></span>);\n} <span class=\"pl-k\">else</span> {\n  <span class=\"pl-c\">// Node.js/server-side code</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">fs</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">require</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>fs<span class=\"pl-pds\">'</span></span>);\n  <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Running in Node.js environment<span class=\"pl-pds\">'</span></span>);\n}\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Universal/isomorphic code pattern</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">getStorageValue</span>(<span class=\"pl-v\">key</span>, <span class=\"pl-v\">defaultValue</span>) {\n  <span class=\"pl-k\">if</span> (<span class=\"pl-en\">isBrowser</span>()) {\n    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">localStorage</span>.<span class=\"pl-c1\">getItem</span>(<span class=\"pl-smi\">key</span>) <span class=\"pl-k\">||</span> <span class=\"pl-smi\">defaultValue</span>;\n  } <span class=\"pl-k\">else</span> {\n    <span class=\"pl-c\">// Server-side fallback or different storage mechanism</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">process</span>.<span class=\"pl-c1\">env</span>[<span class=\"pl-smi\">key</span>] <span class=\"pl-k\">||</span> <span class=\"pl-smi\">defaultValue</span>;\n  }\n}\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Feature detection with environment check</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">initializeAnalytics</span>() {\n  <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span><span class=\"pl-en\">isBrowser</span>()) {\n    <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Analytics not available in server environment<span class=\"pl-pds\">'</span></span>);\n    <span class=\"pl-k\">return</span>;\n  }\n\n  <span class=\"pl-c\">// Browser-only analytics initialization</span>\n  <span class=\"pl-k\">if</span> (<span class=\"pl-c1\">window</span>.<span class=\"pl-smi\">gtag</span>) {\n    <span class=\"pl-en\">gtag</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>config<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>GA_MEASUREMENT_ID<span class=\"pl-pds\">'</span></span>);\n  }\n}\n</code></pre>\n<h5>Since:</h5><p>1.0.0</p>\n<h5>See:</h5><ul>\n<li><a href=\"964\">isPC</a> - Detect PC vs mobile environment</li>\n<li><a href=\"968\">getSystemOS</a> - Get operating system information</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window\">https://developer.mozilla.org/en-US/docs/Web/API/Window</a> - Browser Window object</li>\n<li><a href=\"https://nodejs.org/api/globals.html\">https://nodejs.org/api/globals.html</a> - Node.js global objects</li>\n</ul>\n"},"sources":[{"fileName":"packages/web-utils/src/platform.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/web-utils/src/platform.ts","line":62,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/web-utils/src/platform.ts#L62"}],"parentId":962}],"is":{"declaration":true},"location":{"query":"Platform.Function.isBrowser","hash":""},"text":{},"parentId":961}
