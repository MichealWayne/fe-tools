{"id":1408,"name":"readFileSync","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/node-utils/src/fs/fsFuncs.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/fs/fsFuncs.ts","line":320,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/fs/fsFuncs.ts#L320"}],"signatures":[{"id":1409,"name":"readFileSync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"readFileSync"}]},{"tag":"@description","content":[{"kind":"text","text":"同步读取文件内容为UTF-8字符串。Synchronously reads file content as UTF-8 string with automatic existence checking and error handling."}]},{"tag":"@returns","content":[{"kind":"text","text":"文件内容字符串，如果文件不存在则返回空字符串。The file content as string, or empty string if file doesn't exist"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Read configuration file\nconst config = readFileSync('./config.txt');\nif (config) {\n  console.log('Config loaded:', config);\n} else {\n  console.log('Config file not found');\n}\n```"}]},{"tag":"@example","content":[{"kind":"text","text":"// Read and process text file\nconst content = readFileSync('./data.csv');\nconst lines = content.split('\\n').filter(line => line.trim());\nconsole.log("},{"kind":"code","text":"`Found ${lines.length} data rows`"},{"kind":"text","text":");"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Safe file reading with existence check\nif (fsExistsSync('./readme.md')) {\n  const readme = readFileSync('./readme.md');\n  console.log(readme.substring(0, 100)); // First 100 characters\n}\n```"}]}]},"parameters":[{"id":1410,"name":"filePath","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要读取的文件路径。The file path to read from"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>要读取的文件路径。The file path to read from</p>\n"}}],"type":{"type":"intrinsic","name":"string"},"is":{"declaration":false},"location":{"query":"NodeUtils.Function.readFileSync","hash":"readFileSync"},"text":{"comment":"<h5>Function:</h5><p>readFileSync</p>\n<h5>Description:</h5><p>同步读取文件内容为UTF-8字符串。Synchronously reads file content as UTF-8 string with automatic existence checking and error handling.</p>\n<h5>Returns:</h5><p>文件内容字符串，如果文件不存在则返回空字符串。The file content as string, or empty string if file doesn&#39;t exist</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Read configuration file</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">config</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">readFileSync</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>./config.txt<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-k\">if</span> (<span class=\"pl-smi\">config</span>) {\n  <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Config loaded:<span class=\"pl-pds\">'</span></span>, <span class=\"pl-smi\">config</span>);\n} <span class=\"pl-k\">else</span> {\n  <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Config file not found<span class=\"pl-pds\">'</span></span>);\n}\n</code></pre>\n<h5>Example:</h5><p>// Read and process text file\nconst content = readFileSync(&#39;./data.csv&#39;);\nconst lines = content.split(&#39;\\n&#39;).filter(line =&gt; line.trim());\nconsole.log(<code>Found ${lines.length} data rows</code>);</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Safe file reading with existence check</span>\n<span class=\"pl-k\">if</span> (<span class=\"pl-en\">fsExistsSync</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>./readme.md<span class=\"pl-pds\">'</span></span>)) {\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">readme</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">readFileSync</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>./readme.md<span class=\"pl-pds\">'</span></span>);\n  <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-smi\">readme</span>.<span class=\"pl-c1\">substring</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">100</span>)); <span class=\"pl-c\">// First 100 characters</span>\n}\n</code></pre>\n"},"sources":[{"fileName":"packages/node-utils/src/fs/fsFuncs.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/fs/fsFuncs.ts","line":320,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/fs/fsFuncs.ts#L320"}],"parentId":1408}],"is":{"declaration":true},"location":{"query":"NodeUtils.Function.readFileSync","hash":""},"text":{},"parentId":743}
