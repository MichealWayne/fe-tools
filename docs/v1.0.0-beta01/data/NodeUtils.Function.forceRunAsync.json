{"id":1428,"name":"forceRunAsync","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/node-utils/src/process/run.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/process/run.ts","line":190,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/process/run.ts#L190"}],"signatures":[{"id":1429,"name":"forceRunAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"forceRunAsync"}]},{"tag":"@description","content":[{"kind":"text","text":"在特定忽略模式下异步执行命令，带有错误抑制。Executes a command asynchronously with error suppression for graceful handling of optional operations."}]},{"tag":"@returns","content":[{"kind":"text","text":"解析为结果或void（如果错误被忽略）的Promise。Promise resolving to result or void if error is ignored"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Execute with graceful error handling\nawait forceRunAsync('optional-tool', ['--check']);\n// Will not throw if command fails, but logs error\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Conditional command execution\ntry {\n  await forceRunAsync('git', ['status'], {\n    cwd: './maybe-git-repo'\n  });\n  console.log('Git repository detected');\n} catch (error) {\n  console.log('Not a git repository, continuing...');\n}\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Build pipeline with optional steps\nawait forceRunAsync('npm', ['run', 'lint']);     // Optional linting\nawait forceRunAsync('npm', ['run', 'test']);     // Optional testing\nawait runAsync('npm', ['run', 'build']);         // Required build step\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"runAsync","target":1423},{"kind":"text","text":" - Standard async execution with error handling"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"IGNORE","target":1444},{"kind":"text","text":" - Special error message for ignored failures"},{"kind":"text","text":"\n"}]}]},"parameters":[{"id":1430,"name":"cmd","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要执行的命令或文件URL。Command to execute or file URL"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"URL","qualifiedName":"URL","package":"@types/node"}]},"text":{"comment":"<p>要执行的命令或文件URL。Command to execute or file URL</p>\n"}},{"id":1431,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"命令参数数组。Array of command arguments"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"defaultValue":"[]","text":{"comment":"<p>命令参数数组。Array of command arguments</p>\n"}},{"id":1432,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"执行选项。Execution options"}]},"type":{"type":"reference","id":1445,"name":"RunOptions"},"defaultValue":"{}","text":{"comment":"<p>执行选项。Execution options</p>\n"}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","id":1462,"name":"RunResult"},{"type":"intrinsic","name":"void"}]}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"is":{"declaration":false},"location":{"query":"NodeUtils.Function.forceRunAsync","hash":"forceRunAsync"},"text":{"comment":"<h5>Function:</h5><p>forceRunAsync</p>\n<h5>Description:</h5><p>在特定忽略模式下异步执行命令，带有错误抑制。Executes a command asynchronously with error suppression for graceful handling of optional operations.</p>\n<h5>Returns:</h5><p>解析为结果或void（如果错误被忽略）的Promise。Promise resolving to result or void if error is ignored</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Execute with graceful error handling</span>\n<span class=\"pl-k\">await</span> <span class=\"pl-en\">forceRunAsync</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>optional-tool<span class=\"pl-pds\">'</span></span>, [<span class=\"pl-s\"><span class=\"pl-pds\">'</span>--check<span class=\"pl-pds\">'</span></span>]);\n<span class=\"pl-c\">// Will not throw if command fails, but logs error</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Conditional command execution</span>\n<span class=\"pl-k\">try</span> {\n  <span class=\"pl-k\">await</span> <span class=\"pl-en\">forceRunAsync</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>git<span class=\"pl-pds\">'</span></span>, [<span class=\"pl-s\"><span class=\"pl-pds\">'</span>status<span class=\"pl-pds\">'</span></span>], {\n    cwd: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>./maybe-git-repo<span class=\"pl-pds\">'</span></span>\n  });\n  <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Git repository detected<span class=\"pl-pds\">'</span></span>);\n} <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">error</span>) {\n  <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Not a git repository, continuing...<span class=\"pl-pds\">'</span></span>);\n}\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Build pipeline with optional steps</span>\n<span class=\"pl-k\">await</span> <span class=\"pl-en\">forceRunAsync</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>npm<span class=\"pl-pds\">'</span></span>, [<span class=\"pl-s\"><span class=\"pl-pds\">'</span>run<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>lint<span class=\"pl-pds\">'</span></span>]);     <span class=\"pl-c\">// Optional linting</span>\n<span class=\"pl-k\">await</span> <span class=\"pl-en\">forceRunAsync</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>npm<span class=\"pl-pds\">'</span></span>, [<span class=\"pl-s\"><span class=\"pl-pds\">'</span>run<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>test<span class=\"pl-pds\">'</span></span>]);     <span class=\"pl-c\">// Optional testing</span>\n<span class=\"pl-k\">await</span> <span class=\"pl-en\">runAsync</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>npm<span class=\"pl-pds\">'</span></span>, [<span class=\"pl-s\"><span class=\"pl-pds\">'</span>run<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>build<span class=\"pl-pds\">'</span></span>]);         <span class=\"pl-c\">// Required build step</span>\n</code></pre>\n<h5>Since:</h5><p>1.0.0</p>\n<h5>See:</h5><ul>\n<li><a href=\"1423\">runAsync</a> - Standard async execution with error handling</li>\n<li><a href=\"1444\">IGNORE</a> - Special error message for ignored failures</li>\n</ul>\n"},"sources":[{"fileName":"packages/node-utils/src/process/run.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/process/run.ts","line":190,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/process/run.ts#L190"}],"parentId":1428}],"is":{"declaration":true},"location":{"query":"NodeUtils.Function.forceRunAsync","hash":""},"text":{},"parentId":743}
