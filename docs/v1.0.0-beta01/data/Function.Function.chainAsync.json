{"id":440,"name":"chainAsync","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/function.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/function.ts","line":346,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/function.ts#L346"}],"signatures":[{"id":441,"name":"chainAsync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"chainAsync"}]},{"tag":"@description","content":[{"kind":"text","text":"在链中执行函数，每个函数调用下一个函数。Executes functions in a chain where each function calls the next one"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic chain execution\nchainAsync([\n  next => {\n    console.log('Step 1');\n    setTimeout(next, 1000);\n  },\n  next => {\n    console.log('Step 2');\n    next();\n  },\n  next => {\n    console.log('Step 3 (final)');\n  }\n]);\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Middleware pattern\nconst middleware = [\n  (next) => {\n    console.log('Authentication check');\n    // Simulate async auth\n    setTimeout(() => {\n      console.log('User authenticated');\n      next();\n    }, 100);\n  },\n  (next) => {\n    console.log('Authorization check');\n    next();\n  },\n  (next) => {\n    console.log('Request processed');\n  }\n];\n\nchainAsync(middleware);\n```"}]}]},"parameters":[{"id":442,"name":"fns","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"接受 'next' 回调作为第一个参数的函数数组。Array of functions that accept a 'next' callback as their first parameter"}]},"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":443,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/function.ts","line":346,"character":38,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/function.ts#L346"}],"signatures":[{"id":444,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":445,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"type":{"type":"intrinsic","name":"unknown"}}]}}},"text":{"comment":"<p>接受 &#39;next&#39; 回调作为第一个参数的函数数组。Array of functions that accept a &#39;next&#39; callback as their first parameter</p>\n"}}],"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"Function.Function.chainAsync","hash":"chainAsync"},"text":{"comment":"<h5>Function:</h5><p>chainAsync</p>\n<h5>Description:</h5><p>在链中执行函数，每个函数调用下一个函数。Executes functions in a chain where each function calls the next one</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic chain execution</span>\n<span class=\"pl-en\">chainAsync</span>([\n  <span class=\"pl-v\">next</span> <span class=\"pl-k\">=></span> {\n    <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Step 1<span class=\"pl-pds\">'</span></span>);\n    <span class=\"pl-c1\">setTimeout</span>(<span class=\"pl-smi\">next</span>, <span class=\"pl-c1\">1000</span>);\n  },\n  <span class=\"pl-v\">next</span> <span class=\"pl-k\">=></span> {\n    <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Step 2<span class=\"pl-pds\">'</span></span>);\n    <span class=\"pl-en\">next</span>();\n  },\n  <span class=\"pl-v\">next</span> <span class=\"pl-k\">=></span> {\n    <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Step 3 (final)<span class=\"pl-pds\">'</span></span>);\n  }\n]);\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Middleware pattern</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">middleware</span> <span class=\"pl-k\">=</span> [\n  (<span class=\"pl-v\">next</span>) <span class=\"pl-k\">=></span> {\n    <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Authentication check<span class=\"pl-pds\">'</span></span>);\n    <span class=\"pl-c\">// Simulate async auth</span>\n    <span class=\"pl-c1\">setTimeout</span>(() <span class=\"pl-k\">=></span> {\n      <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>User authenticated<span class=\"pl-pds\">'</span></span>);\n      <span class=\"pl-en\">next</span>();\n    }, <span class=\"pl-c1\">100</span>);\n  },\n  (<span class=\"pl-v\">next</span>) <span class=\"pl-k\">=></span> {\n    <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Authorization check<span class=\"pl-pds\">'</span></span>);\n    <span class=\"pl-en\">next</span>();\n  },\n  (<span class=\"pl-v\">next</span>) <span class=\"pl-k\">=></span> {\n    <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Request processed<span class=\"pl-pds\">'</span></span>);\n  }\n];\n\n<span class=\"pl-en\">chainAsync</span>(<span class=\"pl-smi\">middleware</span>);\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/function.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/function.ts","line":346,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/function.ts#L346"}],"parentId":440}],"is":{"declaration":true},"location":{"query":"Function.Function.chainAsync","hash":""},"text":{},"parentId":391}
