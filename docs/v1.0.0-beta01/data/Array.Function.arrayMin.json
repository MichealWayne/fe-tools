{"id":158,"name":"arrayMin","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/array.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/array.ts","line":52,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/array.ts#L52"}],"signatures":[{"id":159,"name":"arrayMin","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"arrayMin"}]},{"tag":"@description","content":[{"kind":"text","text":"查找数字数组中的最小值。Finds the minimum value in a numeric array"}]},{"tag":"@returns","content":[{"kind":"text","text":"数组中的最小值。对于空数组返回Infinity，如果数组包含非数字值则返回NaN。The minimum value in the array. Returns Infinity for empty arrays, NaN if array contains non-numeric values"}]},{"tag":"@throws","content":[{"kind":"text","text":"当arr不是数组时抛出错误。When arr is not an array"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic usage\narrayMin([1, 2, 3, 0, -1, -5]); // -> -5\narrayMin([1, 2, 3]); // -> 1\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Edge cases\narrayMin([]); // -> Infinity\narrayMin([1, 2, NaN]); // -> NaN\narrayMin([-5, -10, -1]); // -> -10\n```"}]}]},"parameters":[{"id":160,"name":"arr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要查找最小值的数字数组。Array of numbers to find minimum from"}]},"type":{"type":"reference","id":299,"name":"NumberArr"},"text":{"comment":"<p>要查找最小值的数字数组。Array of numbers to find minimum from</p>\n"}}],"type":{"type":"intrinsic","name":"number"},"is":{"declaration":false},"location":{"query":"Array.Function.arrayMin","hash":"arrayMin"},"text":{"comment":"<h5>Function:</h5><p>arrayMin</p>\n<h5>Description:</h5><p>查找数字数组中的最小值。Finds the minimum value in a numeric array</p>\n<h5>Returns:</h5><p>数组中的最小值。对于空数组返回Infinity，如果数组包含非数字值则返回NaN。The minimum value in the array. Returns Infinity for empty arrays, NaN if array contains non-numeric values</p>\n<h5>Throws:</h5><p>当arr不是数组时抛出错误。When arr is not an array</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic usage</span>\n<span class=\"pl-en\">arrayMin</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span>]); <span class=\"pl-c\">// -> -5</span>\n<span class=\"pl-en\">arrayMin</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>]); <span class=\"pl-c\">// -> 1</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Edge cases</span>\n<span class=\"pl-en\">arrayMin</span>([]); <span class=\"pl-c\">// -> Infinity</span>\n<span class=\"pl-en\">arrayMin</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">NaN</span>]); <span class=\"pl-c\">// -> NaN</span>\n<span class=\"pl-en\">arrayMin</span>([<span class=\"pl-k\">-</span><span class=\"pl-c1\">5</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">10</span>, <span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>]); <span class=\"pl-c\">// -> -10</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/array.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/array.ts","line":52,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/array.ts#L52"}],"parentId":158}],"is":{"declaration":true},"location":{"query":"Array.Function.arrayMin","hash":""},"text":{},"parentId":154}
