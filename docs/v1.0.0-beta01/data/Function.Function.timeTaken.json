{"id":414,"name":"timeTaken","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/function.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/function.ts","line":202,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/function.ts#L202"}],"signatures":[{"id":415,"name":"timeTaken","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"timeTaken"}]},{"tag":"@description","content":[{"kind":"text","text":"测量并记录函数的执行时间。Measures and logs the execution time of a function"}]},{"tag":"@returns","content":[{"kind":"text","text":"函数执行的结果。The result of the function execution"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Measuring a simple function\nfunction slowCalculation(n) {\n  let result = 0;\n  for (let i = 0; i < n; i++) {\n    result += Math.sqrt(i);\n  }\n  return result;\n}\n\nconst result = timeTaken(slowCalculation, 1000000);\n// Console output: timeTaken: 45.123ms\n// Returns: calculated result\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Measuring async functions\nasync function fetchData(url) {\n  const response = await fetch(url);\n  return response.json();\n}\n\nawait timeTaken(fetchData, 'https://api.example.com/data');\n// Console output: timeTaken: 234.567ms\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Measuring multiple operations\nconst operations = [\n  () => timeTaken(Array.from, { length: 10000 }, (_, i) => i * 2),\n  () => timeTaken(JSON.stringify, { large: 'object' }),\n  () => timeTaken(Math.random)\n];\n```"}]}]},"parameters":[{"id":416,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要测量的函数。Function to measure"}]},"type":{"type":"reflection","declaration":{"id":417,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/function.ts","line":202,"character":30,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/function.ts#L202"}],"signatures":[{"id":418,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":419,"name":"ks","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"type":{"type":"intrinsic","name":"unknown"}}]}},"text":{"comment":"<p>要测量的函数。Function to measure</p>\n"}},{"id":420,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"传递给函数的参数。Arguments to pass to the function"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}},"text":{"comment":"<p>传递给函数的参数。Arguments to pass to the function</p>\n"}}],"type":{"type":"intrinsic","name":"unknown"},"is":{"declaration":false},"location":{"query":"Function.Function.timeTaken","hash":"timeTaken"},"text":{"comment":"<h5>Function:</h5><p>timeTaken</p>\n<h5>Description:</h5><p>测量并记录函数的执行时间。Measures and logs the execution time of a function</p>\n<h5>Returns:</h5><p>函数执行的结果。The result of the function execution</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Measuring a simple function</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">slowCalculation</span>(<span class=\"pl-v\">n</span>) {\n  <span class=\"pl-k\">let</span> <span class=\"pl-smi\">result</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>;\n  <span class=\"pl-k\">for</span> (<span class=\"pl-k\">let</span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>; <span class=\"pl-smi\">i</span> <span class=\"pl-k\">&#x3C;</span> <span class=\"pl-smi\">n</span>; <span class=\"pl-smi\">i</span><span class=\"pl-k\">++</span>) {\n    <span class=\"pl-smi\">result</span> <span class=\"pl-k\">+=</span> <span class=\"pl-c1\">Math</span>.<span class=\"pl-c1\">sqrt</span>(<span class=\"pl-smi\">i</span>);\n  }\n  <span class=\"pl-k\">return</span> <span class=\"pl-smi\">result</span>;\n}\n\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">result</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">timeTaken</span>(<span class=\"pl-smi\">slowCalculation</span>, <span class=\"pl-c1\">1000000</span>);\n<span class=\"pl-c\">// Console output: timeTaken: 45.123ms</span>\n<span class=\"pl-c\">// Returns: calculated result</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Measuring async functions</span>\n<span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-en\">fetchData</span>(<span class=\"pl-v\">url</span>) {\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">response</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">fetch</span>(<span class=\"pl-smi\">url</span>);\n  <span class=\"pl-k\">return</span> <span class=\"pl-smi\">response</span>.<span class=\"pl-en\">json</span>();\n}\n\n<span class=\"pl-k\">await</span> <span class=\"pl-en\">timeTaken</span>(<span class=\"pl-smi\">fetchData</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>https://api.example.com/data<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-c\">// Console output: timeTaken: 234.567ms</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Measuring multiple operations</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">operations</span> <span class=\"pl-k\">=</span> [\n  () <span class=\"pl-k\">=></span> <span class=\"pl-en\">timeTaken</span>(<span class=\"pl-c1\">Array</span>.<span class=\"pl-smi\">from</span>, { length: <span class=\"pl-c1\">10000</span> }, (<span class=\"pl-v\">_</span>, <span class=\"pl-v\">i</span>) <span class=\"pl-k\">=></span> <span class=\"pl-smi\">i</span> <span class=\"pl-k\">*</span> <span class=\"pl-c1\">2</span>),\n  () <span class=\"pl-k\">=></span> <span class=\"pl-en\">timeTaken</span>(<span class=\"pl-c1\">JSON</span>.<span class=\"pl-c1\">stringify</span>, { large: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>object<span class=\"pl-pds\">'</span></span> }),\n  () <span class=\"pl-k\">=></span> <span class=\"pl-en\">timeTaken</span>(<span class=\"pl-c1\">Math</span>.<span class=\"pl-c1\">random</span>)\n];\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/function.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/function.ts","line":202,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/function.ts#L202"}],"parentId":414}],"is":{"declaration":true},"location":{"query":"Function.Function.timeTaken","hash":""},"text":{},"parentId":391}
