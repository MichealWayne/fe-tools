{"id":1506,"name":"cpuFree","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/node-utils/src/system/os.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/system/os.ts","line":516,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/system/os.ts#L516"}],"signatures":[{"id":1507,"name":"cpuFree","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"cpuFree"}]},{"tag":"@description","content":[{"kind":"text","text":"获取CPU空闲百分比（十进制0-1）。Gets CPU free percentage as a decimal value between 0 and 1 for capacity monitoring."}]},{"tag":"@example","content":[{"kind":"text","text":"// Monitor available CPU capacity\ncpuFree((freePercent) => {\n  console.log("},{"kind":"code","text":"`Available CPU: ${(freePercent * 100).toFixed(1)}%`"},{"kind":"text","text":");\n\n  if (freePercent < 0.2) {\n    console.warn('CPU capacity low - consider load balancing');\n  }\n});"}]},{"tag":"@example","content":[{"kind":"text","text":"// Adaptive processing based on CPU availability\ncpuFree((available) => {\n  const maxConcurrency = Math.floor(available * 10);\n  console.log("},{"kind":"code","text":"`Setting concurrency to ${maxConcurrency} based on CPU availability`"},{"kind":"text","text":");\n});"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"getCPUUsage","target":1502},{"kind":"text","text":" - Base CPU monitoring function"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"cpuUsage","target":1509},{"kind":"text","text":" - Get CPU usage percentage"},{"kind":"text","text":"\n"}]}]},"parameters":[{"id":1508,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"接收CPU空闲百分比（0-1）的回调函数。Callback function receiving free CPU percentage (0-1)"}]},"type":{"type":"reference","name":"AnyCallbackFunc"},"text":{"comment":"<p>接收CPU空闲百分比（0-1）的回调函数。Callback function receiving free CPU percentage (0-1)</p>\n"}}],"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"NodeUtils.Function.cpuFree","hash":"cpuFree"},"text":{"comment":"<h5>Function:</h5><p>cpuFree</p>\n<h5>Description:</h5><p>获取CPU空闲百分比（十进制0-1）。Gets CPU free percentage as a decimal value between 0 and 1 for capacity monitoring.</p>\n<h5>Example:</h5><p>// Monitor available CPU capacity\ncpuFree((freePercent) =&gt; {\n  console.log(<code>Available CPU: ${(freePercent * 100).toFixed(1)}%</code>);</p>\n<p>  if (freePercent &lt; 0.2) {\n    console.warn(&#39;CPU capacity low - consider load balancing&#39;);\n  }\n});</p>\n<h5>Example:</h5><p>// Adaptive processing based on CPU availability\ncpuFree((available) =&gt; {\n  const maxConcurrency = Math.floor(available * 10);\n  console.log(<code>Setting concurrency to ${maxConcurrency} based on CPU availability</code>);\n});</p>\n<h5>Since:</h5><p>1.0.0</p>\n<h5>See:</h5><ul>\n<li><a href=\"1502\">getCPUUsage</a> - Base CPU monitoring function</li>\n<li><a href=\"1509\">cpuUsage</a> - Get CPU usage percentage</li>\n</ul>\n"},"sources":[{"fileName":"packages/node-utils/src/system/os.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/system/os.ts","line":516,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/system/os.ts#L516"}],"parentId":1506}],"is":{"declaration":true},"location":{"query":"NodeUtils.Function.cpuFree","hash":""},"text":{},"parentId":743}
