{"id":1526,"name":"getTimeStr","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/node-utils/src/common/index.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/common/index.ts","line":44,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/common/index.ts#L44"}],"signatures":[{"id":1527,"name":"getTimeStr","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"getTimeStr"}]},{"tag":"@description","content":[{"kind":"text","text":"格式化日期为可读字符串，格式为YYYY/MM/DD HH:MM:SS。Formats a date as a readable string in YYYY/MM/DD HH:MM:SS format for consistent timestamp display."}]},{"tag":"@returns","content":[{"kind":"text","text":"格式化的时间字符串。Formatted time string in YYYY/MM/DD HH:MM:SS format"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Get current time formatted\nconst now = getTimeStr();\nconsole.log(now); // '2024/03/15 14:30:25'\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Format specific date\nconst specificTime = getTimeStr('2024-01-01T12:00:00Z');\nconsole.log(specificTime); // '2024/01/01 12:00:00'\n```"}]},{"tag":"@example","content":[{"kind":"text","text":"// Use in logging with timestamps\nfunction logWithTimestamp(message) {\n  console.log("},{"kind":"code","text":"`[${getTimeStr()}] ${message}`"},{"kind":"text","text":");\n}\nlogWithTimestamp('Server started'); // '[2024/03/15 14:30:25] Server started'"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Format various date inputs\nconsole.log(getTimeStr('March 15, 2024 2:30 PM')); // '2024/03/15 14:30:00'\nconsole.log(getTimeStr(Date.now()));               // Current time formatted\nconsole.log(getTimeStr(new Date()));              // Current time formatted\n```"}]}]},"parameters":[{"id":1528,"name":"timeStr","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"可选的时间字符串，省略时使用当前时间。Optional time string to parse; uses current time if omitted"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>可选的时间字符串，省略时使用当前时间。Optional time string to parse; uses current time if omitted</p>\n"}}],"type":{"type":"intrinsic","name":"string"},"is":{"declaration":false},"location":{"query":"NodeUtils.Function.getTimeStr","hash":"getTimeStr"},"text":{"comment":"<h5>Function:</h5><p>getTimeStr</p>\n<h5>Description:</h5><p>格式化日期为可读字符串，格式为YYYY/MM/DD HH:MM:SS。Formats a date as a readable string in YYYY/MM/DD HH:MM:SS format for consistent timestamp display.</p>\n<h5>Returns:</h5><p>格式化的时间字符串。Formatted time string in YYYY/MM/DD HH:MM:SS format</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Get current time formatted</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">now</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getTimeStr</span>();\n<span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-smi\">now</span>); <span class=\"pl-c\">// '2024/03/15 14:30:25'</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Format specific date</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">specificTime</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getTimeStr</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>2024-01-01T12:00:00Z<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-smi\">specificTime</span>); <span class=\"pl-c\">// '2024/01/01 12:00:00'</span>\n</code></pre>\n<h5>Example:</h5><p>// Use in logging with timestamps\nfunction logWithTimestamp(message) {\n  console.log(<code>[${getTimeStr()}] ${message}</code>);\n}\nlogWithTimestamp(&#39;Server started&#39;); // &#39;[2024/03/15 14:30:25] Server started&#39;</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Format various date inputs</span>\n<span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-en\">getTimeStr</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>March 15, 2024 2:30 PM<span class=\"pl-pds\">'</span></span>)); <span class=\"pl-c\">// '2024/03/15 14:30:00'</span>\n<span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-en\">getTimeStr</span>(<span class=\"pl-c1\">Date</span>.<span class=\"pl-en\">now</span>()));               <span class=\"pl-c\">// Current time formatted</span>\n<span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-en\">getTimeStr</span>(<span class=\"pl-k\">new</span> <span class=\"pl-c1\">Date</span>()));              <span class=\"pl-c\">// Current time formatted</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/node-utils/src/common/index.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/common/index.ts","line":44,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/common/index.ts#L44"}],"parentId":1526}],"is":{"declaration":true},"location":{"query":"NodeUtils.Function.getTimeStr","hash":""},"text":{},"parentId":743}
