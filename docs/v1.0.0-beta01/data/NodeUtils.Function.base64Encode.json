{"id":1517,"name":"base64Encode","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/node-utils/src/common/base64.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/common/base64.ts","line":42,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/common/base64.ts#L42"}],"signatures":[{"id":1518,"name":"base64Encode","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"base64Encode"}]},{"tag":"@description","content":[{"kind":"text","text":"将UTF-8字符串编码为Base64格式。Encodes a UTF-8 string to Base64 format using Node.js Buffer for secure data transmission and storage."}]},{"tag":"@returns","content":[{"kind":"text","text":"Base64编码后的字符串。Base64 encoded string"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic string encoding\nconst encoded = base64Encode('hello world');\nconsole.log(encoded); // 'aGVsbG8gd29ybGQ='\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Encode JSON data for API transmission\nconst data = { user: 'john', token: 'abc123' };\nconst encoded = base64Encode(JSON.stringify(data));\nconsole.log(encoded); // Base64 representation of JSON\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Encode special characters and Unicode\nconst unicode = base64Encode('Hello 世界! 🌍');\nconsole.log(unicode); // Properly encoded Unicode string\n```"}]},{"tag":"@example","content":[{"kind":"text","text":"// Encode for URL-safe transmission\nconst credentials = base64Encode('username:password');\nconst authHeader = "},{"kind":"code","text":"`Basic ${credentials}`"},{"kind":"text","text":";"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"base64Decode","target":1520},{"kind":"text","text":" - Decode Base64 strings"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"isBase64Str","target":1523},{"kind":"text","text":" - Validate Base64 format"},{"kind":"text","text":"\n"}]}]},"parameters":[{"id":1519,"name":"str","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要编码的字符串。The string to encode (supports UTF-8 and Unicode characters)"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>要编码的字符串。The string to encode (supports UTF-8 and Unicode characters)</p>\n"}}],"type":{"type":"intrinsic","name":"string"},"is":{"declaration":false},"location":{"query":"NodeUtils.Function.base64Encode","hash":"base64Encode"},"text":{"comment":"<h5>Function:</h5><p>base64Encode</p>\n<h5>Description:</h5><p>将UTF-8字符串编码为Base64格式。Encodes a UTF-8 string to Base64 format using Node.js Buffer for secure data transmission and storage.</p>\n<h5>Returns:</h5><p>Base64编码后的字符串。Base64 encoded string</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic string encoding</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">encoded</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">base64Encode</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>hello world<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-smi\">encoded</span>); <span class=\"pl-c\">// 'aGVsbG8gd29ybGQ='</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Encode JSON data for API transmission</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">data</span> <span class=\"pl-k\">=</span> { user: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>john<span class=\"pl-pds\">'</span></span>, token: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>abc123<span class=\"pl-pds\">'</span></span> };\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">encoded</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">base64Encode</span>(<span class=\"pl-c1\">JSON</span>.<span class=\"pl-c1\">stringify</span>(<span class=\"pl-smi\">data</span>));\n<span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-smi\">encoded</span>); <span class=\"pl-c\">// Base64 representation of JSON</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Encode special characters and Unicode</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">unicode</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">base64Encode</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Hello 世界! 🌍<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-smi\">unicode</span>); <span class=\"pl-c\">// Properly encoded Unicode string</span>\n</code></pre>\n<h5>Example:</h5><p>// Encode for URL-safe transmission\nconst credentials = base64Encode(&#39;username:password&#39;);\nconst authHeader = <code>Basic ${credentials}</code>;</p>\n<h5>See:</h5><ul>\n<li><a href=\"1520\">base64Decode</a> - Decode Base64 strings</li>\n<li><a href=\"1523\">isBase64Str</a> - Validate Base64 format</li>\n</ul>\n"},"sources":[{"fileName":"packages/node-utils/src/common/base64.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/common/base64.ts","line":42,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/common/base64.ts#L42"}],"parentId":1517}],"is":{"declaration":true},"location":{"query":"NodeUtils.Function.base64Encode","hash":""},"text":{},"parentId":743}
