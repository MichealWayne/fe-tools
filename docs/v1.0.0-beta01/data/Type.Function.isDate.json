{"id":740,"name":"isDate","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/type.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/type.ts","line":335,"character":13,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/type.ts#L335"}],"signatures":[{"id":741,"name":"isDate","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"isDate"}]},{"tag":"@description","content":[{"kind":"text","text":"检查值是否为Date对象。Checks if a value is a Date object"}]},{"tag":"@returns","content":[{"kind":"text","text":"如果值为Date对象则返回true，否则返回false。True if the value is a Date object, false otherwise"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Valid Date objects\nisDate(new Date()); // -> true\nisDate(new Date('2022-03-14')); // -> true\nisDate(new Date(1647312000000)); // -> true\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Invalid Date objects (still Date instances)\nisDate(new Date('invalid')); // -> true (but date.getTime() would be NaN)\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Not Date objects\nisDate('2022-03-14'); // -> false (string)\nisDate(1647312000000); // -> false (timestamp number)\nisDate({ year: 2022, month: 3, day: 14 }); // -> false (plain object)\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Edge cases\nisDate(null); // -> false\nisDate(undefined); // -> false\nisDate(Date.now()); // -> false (returns number, not Date)\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Checking for valid dates\nfunction isValidDate(value) {\n  return isDate(value) && !isNaN(value.getTime());\n}\nisValidDate(new Date()); // -> true\nisValidDate(new Date('invalid')); // -> false\n```"}]}]},"parameters":[{"id":742,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要检查的值。Value to check"}]},"type":{"type":"intrinsic","name":"unknown"},"text":{"comment":"<p>要检查的值。Value to check</p>\n"}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","name":"Date","qualifiedName":"Date","package":"typescript"}},"is":{"declaration":false},"location":{"query":"Type.Function.isDate","hash":"isDate"},"text":{"comment":"<h5>Function:</h5><p>isDate</p>\n<h5>Description:</h5><p>检查值是否为Date对象。Checks if a value is a Date object</p>\n<h5>Returns:</h5><p>如果值为Date对象则返回true，否则返回false。True if the value is a Date object, false otherwise</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Valid Date objects</span>\n<span class=\"pl-en\">isDate</span>(<span class=\"pl-k\">new</span> <span class=\"pl-c1\">Date</span>()); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">isDate</span>(<span class=\"pl-k\">new</span> <span class=\"pl-c1\">Date</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>2022-03-14<span class=\"pl-pds\">'</span></span>)); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">isDate</span>(<span class=\"pl-k\">new</span> <span class=\"pl-c1\">Date</span>(<span class=\"pl-c1\">1647312000000</span>)); <span class=\"pl-c\">// -> true</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Invalid Date objects (still Date instances)</span>\n<span class=\"pl-en\">isDate</span>(<span class=\"pl-k\">new</span> <span class=\"pl-c1\">Date</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>invalid<span class=\"pl-pds\">'</span></span>)); <span class=\"pl-c\">// -> true (but date.getTime() would be NaN)</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Not Date objects</span>\n<span class=\"pl-en\">isDate</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>2022-03-14<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> false (string)</span>\n<span class=\"pl-en\">isDate</span>(<span class=\"pl-c1\">1647312000000</span>); <span class=\"pl-c\">// -> false (timestamp number)</span>\n<span class=\"pl-en\">isDate</span>({ year: <span class=\"pl-c1\">2022</span>, month: <span class=\"pl-c1\">3</span>, day: <span class=\"pl-c1\">14</span> }); <span class=\"pl-c\">// -> false (plain object)</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Edge cases</span>\n<span class=\"pl-en\">isDate</span>(<span class=\"pl-c1\">null</span>); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isDate</span>(<span class=\"pl-c1\">undefined</span>); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isDate</span>(<span class=\"pl-c1\">Date</span>.<span class=\"pl-en\">now</span>()); <span class=\"pl-c\">// -> false (returns number, not Date)</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Checking for valid dates</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">isValidDate</span>(<span class=\"pl-v\">value</span>) {\n  <span class=\"pl-k\">return</span> <span class=\"pl-en\">isDate</span>(<span class=\"pl-smi\">value</span>) <span class=\"pl-k\">&#x26;&#x26;</span> <span class=\"pl-k\">!</span><span class=\"pl-c1\">isNaN</span>(<span class=\"pl-smi\">value</span>.<span class=\"pl-c1\">getTime</span>());\n}\n<span class=\"pl-en\">isValidDate</span>(<span class=\"pl-k\">new</span> <span class=\"pl-c1\">Date</span>()); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">isValidDate</span>(<span class=\"pl-k\">new</span> <span class=\"pl-c1\">Date</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>invalid<span class=\"pl-pds\">'</span></span>)); <span class=\"pl-c\">// -> false</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/type.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/type.ts","line":335,"character":22,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/type.ts#L335"}],"parentId":740}],"is":{"declaration":true},"location":{"query":"Type.Function.isDate","hash":""},"text":{},"parentId":710}
