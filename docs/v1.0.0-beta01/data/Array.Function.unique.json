{"id":272,"name":"unique","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/array.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/array.ts","line":781,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/array.ts#L781"}],"signatures":[{"id":273,"name":"unique","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"unique"}]},{"tag":"@description","content":[{"kind":"text","text":"从数组中删除重复值，仅保留唯一元素。Removes duplicate values from an array, keeping only unique elements"}]},{"tag":"@returns","content":[{"kind":"text","text":"删除重复值的新数组。New array with duplicate values removed"}]},{"tag":"@throws","content":[{"kind":"text","text":"当arr不是数组时抛出错误。When arr is not an array"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic usage\nunique([1, 2, 2, 3, 4, 4, 5]); // -> [1, 2, 3, 4, 5]\nunique(['a', 'b', 'a', 'c', 'b']); // -> ['a', 'b', 'c']\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Mixed types\nunique([1, '1', 2, '2', 1]); // -> [1, '1', 2, '2']\nunique([true, false, 1, 0, true]); // -> [true, false, 1, 0]\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Edge cases\nunique([]); // -> []\nunique([1]); // -> [1]\nunique([null, undefined, null, undefined]); // -> [null, undefined]\nunique([NaN, NaN, 1]); // -> [NaN, 1] (NaN is treated as unique)\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Object arrays (by reference)\nconst obj1 = { id: 1 };\nconst obj2 = { id: 2 };\nunique([obj1, obj2, obj1]); // -> [obj1, obj2]\n```"}]}]},"parameters":[{"id":274,"name":"arr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要从中删除重复项的数组。Array to remove duplicates from"}]},"type":{"type":"reference","id":300,"name":"AnyArr"},"text":{"comment":"<p>要从中删除重复项的数组。Array to remove duplicates from</p>\n"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}},"is":{"declaration":false},"location":{"query":"Array.Function.unique","hash":"unique"},"text":{"comment":"<h5>Function:</h5><p>unique</p>\n<h5>Description:</h5><p>从数组中删除重复值，仅保留唯一元素。Removes duplicate values from an array, keeping only unique elements</p>\n<h5>Returns:</h5><p>删除重复值的新数组。New array with duplicate values removed</p>\n<h5>Throws:</h5><p>当arr不是数组时抛出错误。When arr is not an array</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic usage</span>\n<span class=\"pl-en\">unique</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>]); <span class=\"pl-c\">// -> [1, 2, 3, 4, 5]</span>\n<span class=\"pl-en\">unique</span>([<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>c<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>]); <span class=\"pl-c\">// -> ['a', 'b', 'c']</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Mixed types</span>\n<span class=\"pl-en\">unique</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>1<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>2<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">1</span>]); <span class=\"pl-c\">// -> [1, '1', 2, '2']</span>\n<span class=\"pl-en\">unique</span>([<span class=\"pl-c1\">true</span>, <span class=\"pl-c1\">false</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">true</span>]); <span class=\"pl-c\">// -> [true, false, 1, 0]</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Edge cases</span>\n<span class=\"pl-en\">unique</span>([]); <span class=\"pl-c\">// -> []</span>\n<span class=\"pl-en\">unique</span>([<span class=\"pl-c1\">1</span>]); <span class=\"pl-c\">// -> [1]</span>\n<span class=\"pl-en\">unique</span>([<span class=\"pl-c1\">null</span>, <span class=\"pl-c1\">undefined</span>, <span class=\"pl-c1\">null</span>, <span class=\"pl-c1\">undefined</span>]); <span class=\"pl-c\">// -> [null, undefined]</span>\n<span class=\"pl-en\">unique</span>([<span class=\"pl-c1\">NaN</span>, <span class=\"pl-c1\">NaN</span>, <span class=\"pl-c1\">1</span>]); <span class=\"pl-c\">// -> [NaN, 1] (NaN is treated as unique)</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Object arrays (by reference)</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">obj1</span> <span class=\"pl-k\">=</span> { id: <span class=\"pl-c1\">1</span> };\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">obj2</span> <span class=\"pl-k\">=</span> { id: <span class=\"pl-c1\">2</span> };\n<span class=\"pl-en\">unique</span>([<span class=\"pl-smi\">obj1</span>, <span class=\"pl-smi\">obj2</span>, <span class=\"pl-smi\">obj1</span>]); <span class=\"pl-c\">// -> [obj1, obj2]</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/array.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/array.ts","line":781,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/array.ts#L781"}],"parentId":272}],"is":{"declaration":true},"location":{"query":"Array.Function.unique","hash":""},"text":{},"parentId":154}
