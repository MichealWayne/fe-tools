{"id":1473,"name":"platform","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/node-utils/src/system/os.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/system/os.ts","line":41,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/system/os.ts#L41"}],"signatures":[{"id":1474,"name":"platform","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"platform"}]},{"tag":"@description","content":[{"kind":"text","text":"获取当前主机平台标识符。Gets the current host platform identifier for cross-platform compatibility checks."}]},{"tag":"@returns","content":[{"kind":"text","text":"平台标识符（'aix', 'darwin', 'freebsd', 'linux', 'openbsd', 'sunos', 'win32'）。The platform identifier ('aix', 'darwin', 'freebsd', 'linux', 'openbsd', 'sunos', 'win32')"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Check platform for conditional logic\nconst currentPlatform = platform();\nif (currentPlatform === 'win32') {\n  console.log('Running on Windows');\n} else if (currentPlatform === 'darwin') {\n  console.log('Running on macOS');\n} else {\n  console.log('Running on Unix-like system');\n}\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Platform-specific file paths\nconst configPath = platform() === 'win32'\n  ? 'C:\\\\Users\\\\config.json'\n  : '/home/user/config.json';\n```"}]},{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"https://nodejs.org/api/process.html#process_process_platform","target":"https://nodejs.org/api/process.html#process_process_platform"},{"kind":"text","text":" - Node.js process.platform documentation"}]}]},"type":{"type":"reference","name":"Platform","qualifiedName":"global.NodeJS.Platform","package":"@types/node"},"is":{"declaration":false},"location":{"query":"NodeUtils.Function.platform","hash":"platform"},"text":{"comment":"<h5>Function:</h5><p>platform</p>\n<h5>Description:</h5><p>获取当前主机平台标识符。Gets the current host platform identifier for cross-platform compatibility checks.</p>\n<h5>Returns:</h5><p>平台标识符（&#39;aix&#39;, &#39;darwin&#39;, &#39;freebsd&#39;, &#39;linux&#39;, &#39;openbsd&#39;, &#39;sunos&#39;, &#39;win32&#39;）。The platform identifier (&#39;aix&#39;, &#39;darwin&#39;, &#39;freebsd&#39;, &#39;linux&#39;, &#39;openbsd&#39;, &#39;sunos&#39;, &#39;win32&#39;)</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Check platform for conditional logic</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">currentPlatform</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">platform</span>();\n<span class=\"pl-k\">if</span> (<span class=\"pl-smi\">currentPlatform</span> <span class=\"pl-k\">===</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>win32<span class=\"pl-pds\">'</span></span>) {\n  <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Running on Windows<span class=\"pl-pds\">'</span></span>);\n} <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">currentPlatform</span> <span class=\"pl-k\">===</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>darwin<span class=\"pl-pds\">'</span></span>) {\n  <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Running on macOS<span class=\"pl-pds\">'</span></span>);\n} <span class=\"pl-k\">else</span> {\n  <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Running on Unix-like system<span class=\"pl-pds\">'</span></span>);\n}\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Platform-specific file paths</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">configPath</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">platform</span>() <span class=\"pl-k\">===</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>win32<span class=\"pl-pds\">'</span></span>\n  <span class=\"pl-k\">?</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>C:<span class=\"pl-cce\">\\\\</span>Users<span class=\"pl-cce\">\\\\</span>config.json<span class=\"pl-pds\">'</span></span>\n  <span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>/home/user/config.json<span class=\"pl-pds\">'</span></span>;\n</code></pre>\n<h5>See:</h5><p><a href=\"https://nodejs.org/api/process.html#process_process_platform\">https://nodejs.org/api/process.html#process_process_platform</a> - Node.js process.platform documentation</p>\n"},"sources":[{"fileName":"packages/node-utils/src/system/os.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/system/os.ts","line":41,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/system/os.ts#L41"}],"parentId":1473}],"is":{"declaration":true},"location":{"query":"NodeUtils.Function.platform","hash":""},"text":{},"parentId":743}
