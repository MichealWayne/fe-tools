{"id":840,"name":"disableCopy","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/web-utils/src/dom.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/web-utils/src/dom.ts","line":961,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/web-utils/src/dom.ts#L961"}],"signatures":[{"id":841,"name":"disableCopy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@description","content":[{"kind":"text","text":"Disables copy and paste functionality on the webpage (use with caution for accessibility)"}]},{"tag":"@returns","content":[{"kind":"text","text":"Cleanup function to restore original copy/paste behavior"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Temporarily disable copy/paste for sensitive content\r\nconst restoreCopyPaste = disableCopy();\r\n\r\n// Later, restore functionality\r\nsetTimeout(() => {\r\n  restoreCopyPaste();\r\n}, 5000);\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Disable copy/paste during exam or secure content viewing\r\nlet copyPasteDisabled = false;\r\nconst toggleCopyPaste = document.getElementById('toggle-security');\r\n\r\ntoggleCopyPaste.addEventListener('click', () => {\r\n  if (copyPasteDisabled) {\r\n    restoreFunction();\r\n    copyPasteDisabled = false;\r\n    toggleCopyPaste.textContent = 'Disable Copy/Paste';\r\n  } else {\r\n    restoreFunction = disableCopy();\r\n    copyPasteDisabled = true;\r\n    toggleCopyPaste.textContent = 'Enable Copy/Paste';\r\n  }\r\n});\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Provide alternative for accessibility when disabling copy\r\nconst restoreCopy = disableCopy();\r\n\r\n// Add accessible alternative\r\nconst copyButton = document.createElement('button');\r\ncopyButton.textContent = 'Copy Content';\r\ncopyButton.setAttribute('aria-label', 'Copy page content to clipboard');\r\ncopyButton.addEventListener('click', () => {\r\n  navigator.clipboard.writeText(document.body.textContent);\r\n});\r\ndocument.body.appendChild(copyButton);\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"https://developer.mozilla.org/en-US/docs/Web/API/Navigator/clipboard","target":"https://developer.mozilla.org/en-US/docs/Web/API/Navigator/clipboard"},{"kind":"text","text":" - Modern clipboard API"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html","target":"https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html"},{"kind":"text","text":" - WCAG: Keyboard accessibility considerations"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"https://webaim.org/articles/usability/","target":"https://webaim.org/articles/usability/"},{"kind":"text","text":" - Web accessibility and usability guidelines"},{"kind":"text","text":"\n"}]},{"tag":"@deprecated","content":[{"kind":"text","text":"Consider accessibility implications before disabling copy/paste functionality"}]}]},"type":{"type":"reflection","declaration":{"id":842,"name":"disableCopy","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/web-utils/src/dom.ts","line":964,"character":11,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/web-utils/src/dom.ts#L964"}],"signatures":[{"id":843,"name":"disableCopy","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"DOM.Function.disableCopy","hash":"disableCopy.__type"},"text":{},"sources":[{"fileName":"packages/web-utils/src/dom.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/web-utils/src/dom.ts","line":964,"character":11,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/web-utils/src/dom.ts#L964"}],"parentId":840}],"location":{"query":"DOM.Function.disableCopy","hash":"disableCopy"}}},"is":{"declaration":false},"location":{"query":"DOM.Function.disableCopy","hash":"disableCopy"},"text":{"comment":"<h5>Description:</h5><p>Disables copy and paste functionality on the webpage (use with caution for accessibility)</p>\n<h5>Returns:</h5><p>Cleanup function to restore original copy/paste behavior</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Temporarily disable copy/paste for sensitive content</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">restoreCopyPaste</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">disableCopy</span>();\n\n<span class=\"pl-c\">// Later, restore functionality</span>\n<span class=\"pl-c1\">setTimeout</span>(() <span class=\"pl-k\">=></span> {\n  <span class=\"pl-en\">restoreCopyPaste</span>();\n}, <span class=\"pl-c1\">5000</span>);\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Disable copy/paste during exam or secure content viewing</span>\n<span class=\"pl-k\">let</span> <span class=\"pl-smi\">copyPasteDisabled</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>;\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">toggleCopyPaste</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">getElementById</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>toggle-security<span class=\"pl-pds\">'</span></span>);\n\n<span class=\"pl-smi\">toggleCopyPaste</span>.<span class=\"pl-c1\">addEventListener</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>click<span class=\"pl-pds\">'</span></span>, () <span class=\"pl-k\">=></span> {\n  <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">copyPasteDisabled</span>) {\n    <span class=\"pl-en\">restoreFunction</span>();\n    <span class=\"pl-smi\">copyPasteDisabled</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>;\n    <span class=\"pl-smi\">toggleCopyPaste</span>.<span class=\"pl-smi\">textContent</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Disable Copy/Paste<span class=\"pl-pds\">'</span></span>;\n  } <span class=\"pl-k\">else</span> {\n    <span class=\"pl-smi\">restoreFunction</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">disableCopy</span>();\n    <span class=\"pl-smi\">copyPasteDisabled</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>;\n    <span class=\"pl-smi\">toggleCopyPaste</span>.<span class=\"pl-smi\">textContent</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Enable Copy/Paste<span class=\"pl-pds\">'</span></span>;\n  }\n});\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Provide alternative for accessibility when disabling copy</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">restoreCopy</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">disableCopy</span>();\n\n<span class=\"pl-c\">// Add accessible alternative</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">copyButton</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">createElement</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>button<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-smi\">copyButton</span>.<span class=\"pl-smi\">textContent</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Copy Content<span class=\"pl-pds\">'</span></span>;\n<span class=\"pl-smi\">copyButton</span>.<span class=\"pl-c1\">setAttribute</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>aria-label<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Copy page content to clipboard<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-smi\">copyButton</span>.<span class=\"pl-c1\">addEventListener</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>click<span class=\"pl-pds\">'</span></span>, () <span class=\"pl-k\">=></span> {\n  <span class=\"pl-c1\">navigator</span>.<span class=\"pl-smi\">clipboard</span>.<span class=\"pl-en\">writeText</span>(<span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">body</span>.<span class=\"pl-smi\">textContent</span>);\n});\n<span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">body</span>.<span class=\"pl-c1\">appendChild</span>(<span class=\"pl-smi\">copyButton</span>);\n</code></pre>\n<h5>Since:</h5><p>1.0.0</p>\n<h5>See:</h5><ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Navigator/clipboard\">https://developer.mozilla.org/en-US/docs/Web/API/Navigator/clipboard</a> - Modern clipboard API</li>\n<li><a href=\"https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html\">https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html</a> - WCAG: Keyboard accessibility considerations</li>\n<li><a href=\"https://webaim.org/articles/usability/\">https://webaim.org/articles/usability/</a> - Web accessibility and usability guidelines</li>\n</ul>\n<h5>Deprecated:</h5><p>Consider accessibility implications before disabling copy/paste functionality</p>\n"},"sources":[{"fileName":"packages/web-utils/src/dom.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/web-utils/src/dom.ts","line":961,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/web-utils/src/dom.ts#L961"}],"parentId":840}],"is":{"declaration":true},"location":{"query":"DOM.Function.disableCopy","hash":""},"text":{},"parentId":775}
