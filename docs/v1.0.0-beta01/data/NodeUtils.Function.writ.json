{"id":1400,"name":"writeJson","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/node-utils/src/fs/fsFuncs.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/fs/fsFuncs.ts","line":289,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/fs/fsFuncs.ts#L289"}],"signatures":[{"id":1401,"name":"writeJson","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"writeJson"}]},{"tag":"@description","content":[{"kind":"text","text":"将JavaScript对象写入JSON文件并格式化。Writes a JavaScript object to a JSON file with customizable formatting and automatic serialization."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Write formatted JSON configuration\nconst config = { port: 3000, host: 'localhost' };\nwriteJson('./config.json', config);\n// Creates: {\"port\": 3000, \"host\": \"localhost\"}\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Write compact JSON (no indentation)\nwriteJson('./data.json', { users: ['alice', 'bob'] }, 0);\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Write deeply nested object\nconst appState = {\n  user: { id: 1, name: 'John' },\n  settings: { theme: 'dark', notifications: true }\n};\nwriteJson('./state.json', appState, 4); // 4-space indentation\n```"}]},{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"writeFile","target":1395},{"kind":"text","text":" - Underlying file write function"}]}]},"parameters":[{"id":1402,"name":"filePath","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要写入JSON的文件路径。The file path to write the JSON to"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>要写入JSON的文件路径。The file path to write the JSON to</p>\n"}},{"id":1403,"name":"obj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要序列化为JSON的对象。The object to serialize as JSON"}]},"type":{"type":"reflection","declaration":{"id":1404,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/node-utils/src/fs/fsFuncs.ts","line":289,"character":49,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/fs/fsFuncs.ts#L289"}],"indexSignature":{"id":1405,"name":"__index","kind":8192,"kindString":"Index signature","flags":{},"parameters":[{"id":1406,"name":"key","kind":32768,"flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"unknown"}}}},"text":{"comment":"<p>要序列化为JSON的对象。The object to serialize as JSON</p>\n"}},{"id":1407,"name":"spaceLen","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"JSON缩进的空格数。Number of spaces for JSON indentation"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"2","text":{"comment":"<p>JSON缩进的空格数。Number of spaces for JSON indentation</p>\n"}}],"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"NodeUtils.Function.writeJson","hash":"writeJson"},"text":{"comment":"<h5>Function:</h5><p>writeJson</p>\n<h5>Description:</h5><p>将JavaScript对象写入JSON文件并格式化。Writes a JavaScript object to a JSON file with customizable formatting and automatic serialization.</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Write formatted JSON configuration</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">config</span> <span class=\"pl-k\">=</span> { port: <span class=\"pl-c1\">3000</span>, host: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>localhost<span class=\"pl-pds\">'</span></span> };\n<span class=\"pl-en\">writeJson</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>./config.json<span class=\"pl-pds\">'</span></span>, <span class=\"pl-smi\">config</span>);\n<span class=\"pl-c\">// Creates: {\"port\": 3000, \"host\": \"localhost\"}</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Write compact JSON (no indentation)</span>\n<span class=\"pl-en\">writeJson</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>./data.json<span class=\"pl-pds\">'</span></span>, { users: [<span class=\"pl-s\"><span class=\"pl-pds\">'</span>alice<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>bob<span class=\"pl-pds\">'</span></span>] }, <span class=\"pl-c1\">0</span>);\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Write deeply nested object</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">appState</span> <span class=\"pl-k\">=</span> {\n  user: { id: <span class=\"pl-c1\">1</span>, name: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>John<span class=\"pl-pds\">'</span></span> },\n  settings: { theme: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>dark<span class=\"pl-pds\">'</span></span>, notifications: <span class=\"pl-c1\">true</span> }\n};\n<span class=\"pl-en\">writeJson</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>./state.json<span class=\"pl-pds\">'</span></span>, <span class=\"pl-smi\">appState</span>, <span class=\"pl-c1\">4</span>); <span class=\"pl-c\">// 4-space indentation</span>\n</code></pre>\n<h5>See:</h5><p><a href=\"1395\">writeFile</a> - Underlying file write function</p>\n"},"sources":[{"fileName":"packages/node-utils/src/fs/fsFuncs.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/node-utils/src/fs/fsFuncs.ts","line":289,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/node-utils/src/fs/fsFuncs.ts#L289"}],"parentId":1400}],"is":{"declaration":true},"location":{"query":"NodeUtils.Function.writeJson","hash":""},"text":{},"parentId":743}
