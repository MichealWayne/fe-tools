{"id":747,"name":"copyToClipboard","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/web-utils/src/clipboard.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/web-utils/src/clipboard.ts","line":139,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/web-utils/src/clipboard.ts#L139"}],"signatures":[{"id":748,"name":"copyToClipboard","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"copyToClipboard"}]},{"tag":"@description","content":[{"kind":"text","text":"将文本复制到系统剪贴板，为旧版浏览器提供回退方案。Copies text to the system clipboard with fallback for older browsers"}]},{"tag":"@returns","content":[{"kind":"text","text":"如果复制成功则解析为true，否则为false的Promise。Promise that resolves to true if copy succeeded, false otherwise"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic text copying\ncopyToClipboard('Hello, World!')\n  .then(success => {\n    if (success) {\n      showNotification('Text copied to clipboard!');\n    } else {\n      showNotification('Failed to copy text');\n    }\n  });\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Copy button implementation\nconst copyButton = document.getElementById('copy-btn');\ncopyButton.addEventListener('click', async () => {\n  const textToCopy = document.getElementById('content').textContent;\n  const success = await copyToClipboard(textToCopy);\n\n  // Update button state for accessibility\n  copyButton.textContent = success ? 'Copied!' : 'Copy Failed';\n  copyButton.setAttribute('aria-label',\n    success ? 'Text copied to clipboard' : 'Failed to copy text'\n  );\n\n  // Reset button after delay\n  setTimeout(() => {\n    copyButton.textContent = 'Copy';\n    copyButton.setAttribute('aria-label', 'Copy text to clipboard');\n  }, 2000);\n});\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Copy with user feedback and error handling\nasync function copyWithFeedback(text) {\n  try {\n    const success = await copyToClipboard(text);\n    if (success) {\n      // Announce to screen readers\n      const announcement = document.createElement('div');\n      announcement.setAttribute('aria-live', 'polite');\n      announcement.textContent = 'Content copied to clipboard';\n      document.body.appendChild(announcement);\n      setTimeout(() => document.body.removeChild(announcement), 1000);\n    }\n    return success;\n  } catch (error) {\n    console.error('Copy operation failed:', error);\n    return false;\n  }\n}\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"readClipboardText","target":745},{"kind":"text","text":" - Read text from clipboard"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/writeText","target":"https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/writeText"},{"kind":"text","text":" - Modern Clipboard API"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"https://caniuse.com/async-clipboard","target":"https://caniuse.com/async-clipboard"},{"kind":"text","text":" - Browser support: Chrome 66+, Firefox 125+, Safari 13.1+"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand","target":"https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand"},{"kind":"text","text":" - Legacy execCommand (deprecated)"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"https://www.w3.org/WAI/WCAG21/Understanding/status-messages.html","target":"https://www.w3.org/WAI/WCAG21/Understanding/status-messages.html"},{"kind":"text","text":" - WCAG: Providing feedback for user actions"},{"kind":"text","text":"\n"}]}]},"parameters":[{"id":749,"name":"text","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要复制到剪贴板的文本内容。The text content to copy to clipboard"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>要复制到剪贴板的文本内容。The text content to copy to clipboard</p>\n"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"is":{"declaration":false},"location":{"query":"web-utils/src/clipboard.Function.copyToClipboard","hash":"copyToClipboard"},"text":{"comment":"<h5>Function:</h5><p>copyToClipboard</p>\n<h5>Description:</h5><p>将文本复制到系统剪贴板，为旧版浏览器提供回退方案。Copies text to the system clipboard with fallback for older browsers</p>\n<h5>Returns:</h5><p>如果复制成功则解析为true，否则为false的Promise。Promise that resolves to true if copy succeeded, false otherwise</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic text copying</span>\n<span class=\"pl-en\">copyToClipboard</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Hello, World!<span class=\"pl-pds\">'</span></span>)\n  .<span class=\"pl-c1\">then</span>(<span class=\"pl-v\">success</span> <span class=\"pl-k\">=></span> {\n    <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">success</span>) {\n      <span class=\"pl-en\">showNotification</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Text copied to clipboard!<span class=\"pl-pds\">'</span></span>);\n    } <span class=\"pl-k\">else</span> {\n      <span class=\"pl-en\">showNotification</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Failed to copy text<span class=\"pl-pds\">'</span></span>);\n    }\n  });\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Copy button implementation</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">copyButton</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">getElementById</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>copy-btn<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-smi\">copyButton</span>.<span class=\"pl-c1\">addEventListener</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>click<span class=\"pl-pds\">'</span></span>, <span class=\"pl-k\">async</span> () <span class=\"pl-k\">=></span> {\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">textToCopy</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">getElementById</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>content<span class=\"pl-pds\">'</span></span>).<span class=\"pl-smi\">textContent</span>;\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">success</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">copyToClipboard</span>(<span class=\"pl-smi\">textToCopy</span>);\n\n  <span class=\"pl-c\">// Update button state for accessibility</span>\n  <span class=\"pl-smi\">copyButton</span>.<span class=\"pl-smi\">textContent</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">success</span> <span class=\"pl-k\">?</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Copied!<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Copy Failed<span class=\"pl-pds\">'</span></span>;\n  <span class=\"pl-smi\">copyButton</span>.<span class=\"pl-c1\">setAttribute</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>aria-label<span class=\"pl-pds\">'</span></span>,\n    <span class=\"pl-smi\">success</span> <span class=\"pl-k\">?</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Text copied to clipboard<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Failed to copy text<span class=\"pl-pds\">'</span></span>\n  );\n\n  <span class=\"pl-c\">// Reset button after delay</span>\n  <span class=\"pl-c1\">setTimeout</span>(() <span class=\"pl-k\">=></span> {\n    <span class=\"pl-smi\">copyButton</span>.<span class=\"pl-smi\">textContent</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Copy<span class=\"pl-pds\">'</span></span>;\n    <span class=\"pl-smi\">copyButton</span>.<span class=\"pl-c1\">setAttribute</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>aria-label<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Copy text to clipboard<span class=\"pl-pds\">'</span></span>);\n  }, <span class=\"pl-c1\">2000</span>);\n});\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Copy with user feedback and error handling</span>\n<span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-en\">copyWithFeedback</span>(<span class=\"pl-v\">text</span>) {\n  <span class=\"pl-k\">try</span> {\n    <span class=\"pl-k\">const</span> <span class=\"pl-c1\">success</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">copyToClipboard</span>(<span class=\"pl-smi\">text</span>);\n    <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">success</span>) {\n      <span class=\"pl-c\">// Announce to screen readers</span>\n      <span class=\"pl-k\">const</span> <span class=\"pl-c1\">announcement</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">createElement</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>div<span class=\"pl-pds\">'</span></span>);\n      <span class=\"pl-smi\">announcement</span>.<span class=\"pl-c1\">setAttribute</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>aria-live<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>polite<span class=\"pl-pds\">'</span></span>);\n      <span class=\"pl-smi\">announcement</span>.<span class=\"pl-smi\">textContent</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Content copied to clipboard<span class=\"pl-pds\">'</span></span>;\n      <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">body</span>.<span class=\"pl-c1\">appendChild</span>(<span class=\"pl-smi\">announcement</span>);\n      <span class=\"pl-c1\">setTimeout</span>(() <span class=\"pl-k\">=></span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">body</span>.<span class=\"pl-c1\">removeChild</span>(<span class=\"pl-smi\">announcement</span>), <span class=\"pl-c1\">1000</span>);\n    }\n    <span class=\"pl-k\">return</span> <span class=\"pl-smi\">success</span>;\n  } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">error</span>) {\n    <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">error</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Copy operation failed:<span class=\"pl-pds\">'</span></span>, <span class=\"pl-smi\">error</span>);\n    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>;\n  }\n}\n</code></pre>\n<h5>Since:</h5><p>1.0.0</p>\n<h5>See:</h5><ul>\n<li><a href=\"745\">readClipboardText</a> - Read text from clipboard</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/writeText\">https://developer.mozilla.org/en-US/docs/Web/API/Clipboard/writeText</a> - Modern Clipboard API</li>\n<li><a href=\"https://caniuse.com/async-clipboard\">https://caniuse.com/async-clipboard</a> - Browser support: Chrome 66+, Firefox 125+, Safari 13.1+</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand\">https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand</a> - Legacy execCommand (deprecated)</li>\n<li><a href=\"https://www.w3.org/WAI/WCAG21/Understanding/status-messages.html\">https://www.w3.org/WAI/WCAG21/Understanding/status-messages.html</a> - WCAG: Providing feedback for user actions</li>\n</ul>\n"},"sources":[{"fileName":"packages/web-utils/src/clipboard.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/web-utils/src/clipboard.ts","line":139,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/web-utils/src/clipboard.ts#L139"}],"parentId":747}],"is":{"declaration":true},"location":{"query":"web-utils/src/clipboard.Function.copyToClipboard","hash":""},"text":{},"parentId":744}
