{"id":446,"name":"compose","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/function.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/function.ts","line":384,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/function.ts#L384"}],"signatures":[{"id":447,"name":"compose","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"compose"}]},{"tag":"@description","content":[{"kind":"text","text":"从右到左组合函数（数学组合）。Composes functions from right to left (mathematical composition)"}]},{"tag":"@returns","content":[{"kind":"text","text":"从右到左应用函数的组合函数。Composed function that applies functions from right to left"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic composition\nconst add5 = x => x + 5;\nconst multiply2 = x => x * 2;\nconst subtract1 = x => x - 1;\n\nconst composed = compose(add5, multiply2, subtract1);\ncomposed(10); // -> subtract1(10) -> multiply2(9) -> add5(18) -> 23\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// String transformations\nconst toUpperCase = str => str.toUpperCase();\nconst addExclamation = str => str + '!';\nconst trim = str => str.trim();\n\nconst transform = compose(toUpperCase, addExclamation, trim);\ntransform('  hello world  '); // -> 'HELLO WORLD!'\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Mathematical operations\nconst square = x => x * x;\nconst double = x => x * 2;\nconst addOne = x => x + 1;\n\nconst calculate = compose(square, double, addOne);\ncalculate(3); // -> addOne(3) -> double(4) -> square(8) -> 64\n```"}]}]},"typeParameter":[{"id":448,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":449,"name":"fns","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"要组合的函数。Functions to compose"}]},"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":450,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/function.ts","line":384,"character":41,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/function.ts#L384"}],"signatures":[{"id":451,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":452,"name":"arg","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":448,"name":"T"}}}],"type":{"type":"reference","id":448,"name":"T"}}]}}},"text":{"comment":"<p>要组合的函数。Functions to compose</p>\n"}}],"type":{"type":"reflection","declaration":{"id":453,"name":"compose","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/function.ts","line":384,"character":63,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/function.ts#L384"}],"signatures":[{"id":454,"name":"compose","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":455,"name":"arg","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":448,"name":"T"},"text":{}}],"type":{"type":"reference","id":448,"name":"T"},"is":{"declaration":false},"location":{"query":"Function.Function.compose","hash":"compose.__type"},"text":{},"parentId":446}],"location":{"query":"Function.Function.compose","hash":"compose"}}},"is":{"declaration":false},"location":{"query":"Function.Function.compose","hash":"compose"},"text":{"comment":"<h5>Function:</h5><p>compose</p>\n<h5>Description:</h5><p>从右到左组合函数（数学组合）。Composes functions from right to left (mathematical composition)</p>\n<h5>Returns:</h5><p>从右到左应用函数的组合函数。Composed function that applies functions from right to left</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic composition</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">add5</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">x</span> <span class=\"pl-k\">=></span> <span class=\"pl-smi\">x</span> <span class=\"pl-k\">+</span> <span class=\"pl-c1\">5</span>;\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">multiply2</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">x</span> <span class=\"pl-k\">=></span> <span class=\"pl-smi\">x</span> <span class=\"pl-k\">*</span> <span class=\"pl-c1\">2</span>;\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">subtract1</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">x</span> <span class=\"pl-k\">=></span> <span class=\"pl-smi\">x</span> <span class=\"pl-k\">-</span> <span class=\"pl-c1\">1</span>;\n\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">composed</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">compose</span>(<span class=\"pl-smi\">add5</span>, <span class=\"pl-smi\">multiply2</span>, <span class=\"pl-smi\">subtract1</span>);\n<span class=\"pl-en\">composed</span>(<span class=\"pl-c1\">10</span>); <span class=\"pl-c\">// -> subtract1(10) -> multiply2(9) -> add5(18) -> 23</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// String transformations</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">toUpperCase</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">str</span> <span class=\"pl-k\">=></span> <span class=\"pl-smi\">str</span>.<span class=\"pl-c1\">toUpperCase</span>();\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">addExclamation</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">str</span> <span class=\"pl-k\">=></span> <span class=\"pl-smi\">str</span> <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>!<span class=\"pl-pds\">'</span></span>;\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">trim</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">str</span> <span class=\"pl-k\">=></span> <span class=\"pl-smi\">str</span>.<span class=\"pl-en\">trim</span>();\n\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">transform</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">compose</span>(<span class=\"pl-smi\">toUpperCase</span>, <span class=\"pl-smi\">addExclamation</span>, <span class=\"pl-smi\">trim</span>);\n<span class=\"pl-en\">transform</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>  hello world  <span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> 'HELLO WORLD!'</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Mathematical operations</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">square</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">x</span> <span class=\"pl-k\">=></span> <span class=\"pl-smi\">x</span> <span class=\"pl-k\">*</span> <span class=\"pl-smi\">x</span>;\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">double</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">x</span> <span class=\"pl-k\">=></span> <span class=\"pl-smi\">x</span> <span class=\"pl-k\">*</span> <span class=\"pl-c1\">2</span>;\n<span class=\"pl-k\">const</span> <span class=\"pl-en\">addOne</span> <span class=\"pl-k\">=</span> <span class=\"pl-v\">x</span> <span class=\"pl-k\">=></span> <span class=\"pl-smi\">x</span> <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>;\n\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">calculate</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">compose</span>(<span class=\"pl-smi\">square</span>, <span class=\"pl-smi\">double</span>, <span class=\"pl-smi\">addOne</span>);\n<span class=\"pl-en\">calculate</span>(<span class=\"pl-c1\">3</span>); <span class=\"pl-c\">// -> addOne(3) -> double(4) -> square(8) -> 64</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/function.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/function.ts","line":384,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/function.ts#L384"}],"parentId":446}],"is":{"declaration":true},"location":{"query":"Function.Function.compose","hash":""},"text":{},"parentId":391}
