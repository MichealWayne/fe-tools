{"id":689,"name":"maskString","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/string.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/string.ts","line":437,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/string.ts#L437"}],"signatures":[{"id":690,"name":"maskString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"maskString"}]},{"tag":"@description","content":[{"kind":"text","text":"遮盖字符串的一部分，同时保持开头和结尾的指定字符可见。Masks part of a string while keeping specified characters visible at start and end"}]},{"tag":"@returns","content":[{"kind":"text","text":"遮盖后的字符串，开头和结尾部分可见。Masked string with visible start and end portions"}]},{"tag":"@throws","content":[{"kind":"text","text":"当参数类型不符合预期时。When parameters are not of expected types"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Phone number masking\nmaskString('13812345678'); // -> '138****5678'\nmaskString('1234567890', 2, 2); // -> '12******90'\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Email masking\nmaskString('user@example.com', 2, 8); // -> 'us****ample.com'\nmaskString('john.doe@company.com', 4, 12); // -> 'john********company.com'\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Custom mask character\nmaskString('123456789', 2, 2, '#'); // -> '12#####89'\nmaskString('password123', 1, 1, 'X'); // -> 'pXXXXXXXXX3'\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Unicode strings\nmaskString('张三李四王五', 1, 1); // -> '张***五'\nmaskString('用户名@邮箱.com', 2, 4); // -> '用户****箱.com'\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Edge cases\nmaskString(''); // -> ''\nmaskString('abc'); // -> 'abc' (too short to mask)\nmaskString('1234567', 3, 4); // -> '1234567' (startVisible + endVisible >= length)\nmaskString('12345', 10, 10); // -> '12345' (visible chars exceed string length)\n```"}]}]},"parameters":[{"id":691,"name":"str","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要遮盖的字符串。String to mask"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>要遮盖的字符串。String to mask</p>\n"}},{"id":692,"name":"startVisible","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"在开头保持可见的字符数（默认：3）。Number of characters to keep visible at the start (default: 3)"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"3","text":{"comment":"<p>在开头保持可见的字符数（默认：3）。Number of characters to keep visible at the start (default: 3)</p>\n"}},{"id":693,"name":"endVisible","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"在结尾保持可见的字符数（默认：4）。Number of characters to keep visible at the end (default: 4)"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"4","text":{"comment":"<p>在结尾保持可见的字符数（默认：4）。Number of characters to keep visible at the end (default: 4)</p>\n"}},{"id":694,"name":"maskChar","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"用于遮盖的字符（默认：'*'）。Character to use for masking (default: '*')"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"'*'","text":{"comment":"<p>用于遮盖的字符（默认：&#39;<em>&#39;）。Character to use for masking (default: &#39;</em>&#39;)</p>\n"}}],"type":{"type":"intrinsic","name":"string"},"is":{"declaration":false},"location":{"query":"String.Function.maskString","hash":"maskString"},"text":{"comment":"<h5>Function:</h5><p>maskString</p>\n<h5>Description:</h5><p>遮盖字符串的一部分，同时保持开头和结尾的指定字符可见。Masks part of a string while keeping specified characters visible at start and end</p>\n<h5>Returns:</h5><p>遮盖后的字符串，开头和结尾部分可见。Masked string with visible start and end portions</p>\n<h5>Throws:</h5><p>当参数类型不符合预期时。When parameters are not of expected types</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Phone number masking</span>\n<span class=\"pl-en\">maskString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>13812345678<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> '138****5678'</span>\n<span class=\"pl-en\">maskString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>1234567890<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>); <span class=\"pl-c\">// -> '12******90'</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Email masking</span>\n<span class=\"pl-en\">maskString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>user@example.com<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">8</span>); <span class=\"pl-c\">// -> 'us****ample.com'</span>\n<span class=\"pl-en\">maskString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>john.doe@company.com<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">12</span>); <span class=\"pl-c\">// -> 'john********company.com'</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Custom mask character</span>\n<span class=\"pl-en\">maskString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>123456789<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> '12#####89'</span>\n<span class=\"pl-en\">maskString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>password123<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>X<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> 'pXXXXXXXXX3'</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Unicode strings</span>\n<span class=\"pl-en\">maskString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>张三李四王五<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>); <span class=\"pl-c\">// -> '张***五'</span>\n<span class=\"pl-en\">maskString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>用户名@邮箱.com<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">4</span>); <span class=\"pl-c\">// -> '用户****箱.com'</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Edge cases</span>\n<span class=\"pl-en\">maskString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">''</span></span>); <span class=\"pl-c\">// -> ''</span>\n<span class=\"pl-en\">maskString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>abc<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> 'abc' (too short to mask)</span>\n<span class=\"pl-en\">maskString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>1234567<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>); <span class=\"pl-c\">// -> '1234567' (startVisible + endVisible >= length)</span>\n<span class=\"pl-en\">maskString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>12345<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">10</span>); <span class=\"pl-c\">// -> '12345' (visible chars exceed string length)</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/string.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/string.ts","line":437,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/string.ts#L437"}],"parentId":689}],"is":{"declaration":true},"location":{"query":"String.Function.maskString","hash":""},"text":{},"parentId":651}
