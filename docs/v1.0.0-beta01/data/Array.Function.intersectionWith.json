{"id":240,"name":"intersectionWith","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/array.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/array.ts","line":602,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/array.ts#L602"}],"signatures":[{"id":241,"name":"intersectionWith","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"intersectionWith"}]},{"tag":"@description","content":[{"kind":"text","text":"使用自定义比较函数返回两个数组中存在的元素。Returns elements that exist in both arrays using a custom comparison function"}]},{"tag":"@returns","content":[{"kind":"text","text":"包含arr1中根据比较函数与arr2中的元素匹配的元素的数组。Array containing elements from arr1 that match elements in arr2 according to the comparison function"}]},{"tag":"@throws","content":[{"kind":"text","text":"当arr1或arr2不是数组，或fn不是函数时抛出错误。When arr1 or arr2 is not an array, or fn is not a function"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic usage with custom comparison\nintersectionWith([1, 1.2, 1.5, 3, 0], [1.9, 3, 0], (a, b) => Math.round(a) === Math.round(b)); // -> [1.5, 3, 0]\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Object comparison\nconst arr1 = [{ x: 1, y: 2 }, { x: 2, y: 1 }];\nconst arr2 = [{ x: 1, y: 1 }, { x: 1, y: 2 }];\nintersectionWith(arr1, arr2, (a, b) => a.x === b.x && a.y === b.y); // -> [{ x: 1, y: 2 }]\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// String comparison (case insensitive)\nintersectionWith(['Apple', 'Banana'], ['apple', 'cherry'], (a, b) => a.toLowerCase() === b.toLowerCase()); // -> ['Apple']\n```"}]}]},"parameters":[{"id":242,"name":"arr1","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"第一个数组。First array"}]},"type":{"type":"reference","id":300,"name":"AnyArr"},"text":{"comment":"<p>第一个数组。First array</p>\n"}},{"id":243,"name":"arr2","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"第二个数组。Second array"}]},"type":{"type":"reference","id":300,"name":"AnyArr"},"text":{"comment":"<p>第二个数组。Second array</p>\n"}},{"id":244,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"比较两个数组中元素的函数。Function to compare elements from both arrays"}]},"type":{"type":"reflection","declaration":{"id":245,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/utils/src/array.ts","line":605,"character":6,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/array.ts#L605"}],"signatures":[{"id":246,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":247,"name":"v","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}},{"id":248,"name":"k","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"intrinsic","name":"unknown"}}]}},"text":{"comment":"<p>比较两个数组中元素的函数。Function to compare elements from both arrays</p>\n"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}},"is":{"declaration":false},"location":{"query":"Array.Function.intersectionWith","hash":"intersectionWith"},"text":{"comment":"<h5>Function:</h5><p>intersectionWith</p>\n<h5>Description:</h5><p>使用自定义比较函数返回两个数组中存在的元素。Returns elements that exist in both arrays using a custom comparison function</p>\n<h5>Returns:</h5><p>包含arr1中根据比较函数与arr2中的元素匹配的元素的数组。Array containing elements from arr1 that match elements in arr2 according to the comparison function</p>\n<h5>Throws:</h5><p>当arr1或arr2不是数组，或fn不是函数时抛出错误。When arr1 or arr2 is not an array, or fn is not a function</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic usage with custom comparison</span>\n<span class=\"pl-en\">intersectionWith</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1.2</span>, <span class=\"pl-c1\">1.5</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">0</span>], [<span class=\"pl-c1\">1.9</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">0</span>], (<span class=\"pl-v\">a</span>, <span class=\"pl-v\">b</span>) <span class=\"pl-k\">=></span> <span class=\"pl-c1\">Math</span>.<span class=\"pl-c1\">round</span>(<span class=\"pl-smi\">a</span>) <span class=\"pl-k\">===</span> <span class=\"pl-c1\">Math</span>.<span class=\"pl-c1\">round</span>(<span class=\"pl-smi\">b</span>)); <span class=\"pl-c\">// -> [1.5, 3, 0]</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Object comparison</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">arr1</span> <span class=\"pl-k\">=</span> [{ x: <span class=\"pl-c1\">1</span>, y: <span class=\"pl-c1\">2</span> }, { x: <span class=\"pl-c1\">2</span>, y: <span class=\"pl-c1\">1</span> }];\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">arr2</span> <span class=\"pl-k\">=</span> [{ x: <span class=\"pl-c1\">1</span>, y: <span class=\"pl-c1\">1</span> }, { x: <span class=\"pl-c1\">1</span>, y: <span class=\"pl-c1\">2</span> }];\n<span class=\"pl-en\">intersectionWith</span>(<span class=\"pl-smi\">arr1</span>, <span class=\"pl-smi\">arr2</span>, (<span class=\"pl-v\">a</span>, <span class=\"pl-v\">b</span>) <span class=\"pl-k\">=></span> <span class=\"pl-smi\">a</span>.<span class=\"pl-c1\">x</span> <span class=\"pl-k\">===</span> <span class=\"pl-smi\">b</span>.<span class=\"pl-c1\">x</span> <span class=\"pl-k\">&#x26;&#x26;</span> <span class=\"pl-smi\">a</span>.<span class=\"pl-c1\">y</span> <span class=\"pl-k\">===</span> <span class=\"pl-smi\">b</span>.<span class=\"pl-c1\">y</span>); <span class=\"pl-c\">// -> [{ x: 1, y: 2 }]</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// String comparison (case insensitive)</span>\n<span class=\"pl-en\">intersectionWith</span>([<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Apple<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Banana<span class=\"pl-pds\">'</span></span>], [<span class=\"pl-s\"><span class=\"pl-pds\">'</span>apple<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>cherry<span class=\"pl-pds\">'</span></span>], (<span class=\"pl-v\">a</span>, <span class=\"pl-v\">b</span>) <span class=\"pl-k\">=></span> <span class=\"pl-smi\">a</span>.<span class=\"pl-c1\">toLowerCase</span>() <span class=\"pl-k\">===</span> <span class=\"pl-smi\">b</span>.<span class=\"pl-c1\">toLowerCase</span>()); <span class=\"pl-c\">// -> ['Apple']</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/array.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/array.ts","line":602,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/array.ts#L602"}],"parentId":240}],"is":{"declaration":true},"location":{"query":"Array.Function.intersectionWith","hash":""},"text":{},"parentId":154}
