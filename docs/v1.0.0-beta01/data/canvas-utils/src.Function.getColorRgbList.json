{"id":1671,"name":"getColorRgbList","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/canvas-utils/src/utils/colors.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/canvas-utils/src/utils/colors.ts","line":50,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/canvas-utils/src/utils/colors.ts#L50"}],"signatures":[{"id":1672,"name":"getColorRgbList","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"getColorRgbList"}]},{"tag":"@description","content":[{"kind":"text","text":"hex色值转rgb数组。Converts hexadecimal color strings to RGB number arrays. Supports both standard (#RRGGBB) and shorthand (#RGB) formats. Invalid color formats return an empty array."}]},{"tag":"@returns","content":[{"kind":"text","text":"Array of RGB values [red, green, blue] where each value is 0-255, or empty array if invalid"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Standard hex format\nconst red = getColorRgbList('#ff0000');     // Returns [255, 0, 0]\nconst blue = getColorRgbList('#0000FF');    // Returns [0, 0, 255]\nconst custom = getColorRgbList('#aaBB99');  // Returns [170, 187, 153]\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Shorthand hex format\nconst red = getColorRgbList('#f00');        // Returns [255, 0, 0]\nconst green = getColorRgbList('#0f0');      // Returns [0, 255, 0]\nconst gray = getColorRgbList('#abc');       // Returns [170, 187, 204]\n```"}]},{"tag":"@example","content":[{"kind":"text","text":"// Canvas color application\nfunction setCanvasColor(ctx, hexColor) {\n  const [r, g, b] = getColorRgbList(hexColor);\n  if (r !== undefined) {\n    ctx.fillStyle = "},{"kind":"code","text":"`rgb(${r}, ${g}, ${b})`"},{"kind":"text","text":";\n    ctx.fillRect(0, 0, 100, 100);\n  } else {\n    console.error('Invalid color format');\n  }\n}"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Error handling\nconst invalid = getColorRgbList('invalid');  // Returns []\nconst missing = getColorRgbList('#gg0000'); // Returns []\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]},{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"getColorRgba","target":1674},{"kind":"text","text":" - For converting to RGBA format"}]}]},"parameters":[{"id":1673,"name":"color","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Hexadecimal color string (e.g., '#ff0000', '#f00')"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>Hexadecimal color string (e.g., &#39;#ff0000&#39;, &#39;#f00&#39;)</p>\n"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"number"}},"is":{"declaration":false},"location":{"query":"canvas-utils/src.Function.getColorRgbList","hash":"getColorRgbList"},"text":{"comment":"<h5>Function:</h5><p>getColorRgbList</p>\n<h5>Description:</h5><p>hex色值转rgb数组。Converts hexadecimal color strings to RGB number arrays. Supports both standard (#RRGGBB) and shorthand (#RGB) formats. Invalid color formats return an empty array.</p>\n<h5>Returns:</h5><p>Array of RGB values [red, green, blue] where each value is 0-255, or empty array if invalid</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Standard hex format</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">red</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getColorRgbList</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#ff0000<span class=\"pl-pds\">'</span></span>);     <span class=\"pl-c\">// Returns [255, 0, 0]</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">blue</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getColorRgbList</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#0000FF<span class=\"pl-pds\">'</span></span>);    <span class=\"pl-c\">// Returns [0, 0, 255]</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">custom</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getColorRgbList</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#aaBB99<span class=\"pl-pds\">'</span></span>);  <span class=\"pl-c\">// Returns [170, 187, 153]</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Shorthand hex format</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">red</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getColorRgbList</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#f00<span class=\"pl-pds\">'</span></span>);        <span class=\"pl-c\">// Returns [255, 0, 0]</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">green</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getColorRgbList</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#0f0<span class=\"pl-pds\">'</span></span>);      <span class=\"pl-c\">// Returns [0, 255, 0]</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">gray</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getColorRgbList</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#abc<span class=\"pl-pds\">'</span></span>);       <span class=\"pl-c\">// Returns [170, 187, 204]</span>\n</code></pre>\n<h5>Example:</h5><p>// Canvas color application\nfunction setCanvasColor(ctx, hexColor) {\n  const [r, g, b] = getColorRgbList(hexColor);\n  if (r !== undefined) {\n    ctx.fillStyle = <code>rgb(${r}, ${g}, ${b})</code>;\n    ctx.fillRect(0, 0, 100, 100);\n  } else {\n    console.error(&#39;Invalid color format&#39;);\n  }\n}</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Error handling</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">invalid</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getColorRgbList</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>invalid<span class=\"pl-pds\">'</span></span>);  <span class=\"pl-c\">// Returns []</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">missing</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getColorRgbList</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#gg0000<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// Returns []</span>\n</code></pre>\n<h5>Since:</h5><p>1.0.0</p>\n<h5>See:</h5><p><a href=\"1674\">getColorRgba</a> - For converting to RGBA format</p>\n"},"sources":[{"fileName":"packages/canvas-utils/src/utils/colors.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/canvas-utils/src/utils/colors.ts","line":50,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/canvas-utils/src/utils/colors.ts#L50"}],"parentId":1671}],"is":{"declaration":true},"location":{"query":"canvas-utils/src.Function.getColorRgbList","hash":""},"text":{},"parentId":1168}
