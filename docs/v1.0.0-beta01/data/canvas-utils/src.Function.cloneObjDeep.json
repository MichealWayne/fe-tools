{"id":1635,"name":"cloneObjDeep","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/canvas-utils/src/utils/base.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/canvas-utils/src/utils/base.ts","line":139,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/canvas-utils/src/utils/base.ts#L139"}],"signatures":[{"id":1636,"name":"cloneObjDeep","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"cloneObjDeep"}]},{"tag":"@description","content":[{"kind":"text","text":"简单的深拷贝（没考虑特殊类型和循环依赖）。Performs a deep merge of two objects, copying properties from the source object to the target object. Existing properties in the target object take precedence over source properties. Nested objects are recursively merged."}]},{"tag":"@returns","content":[{"kind":"text","text":"The modified target object with merged properties"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic object merging\r\nconst defaults = {\r\n  width: 400,\r\n  height: 300,\r\n  style: {\r\n    color: '#000000',\r\n    lineWidth: 1\r\n  }\r\n};\r\n\r\nconst userOptions = {\r\n  width: 800,\r\n  style: {\r\n    color: '#ff0000'\r\n  }\r\n};\r\n\r\nconst config = cloneObjDeep(defaults, userOptions);\r\n// Result: {\r\n//   width: 800,           // User value takes precedence\r\n//   height: 300,          // Default value used\r\n//   style: {\r\n//     color: '#ff0000',   // User value takes precedence\r\n//     lineWidth: 1        // Default value used\r\n//   }\r\n// }\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Canvas configuration merging\r\nconst defaultCanvasConfig = {\r\n  dimensions: { width: 500, height: 400 },\r\n  rendering: { antialias: true, alpha: false },\r\n  animation: { duration: 1000, easing: 'ease-in-out' }\r\n};\r\n\r\nconst customConfig = {\r\n  dimensions: { width: 800 },\r\n  animation: { duration: 2000 }\r\n};\r\n\r\nconst finalConfig = cloneObjDeep(defaultCanvasConfig, customConfig);\r\n// Preserves all default values while applying custom overrides\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"parameters":[{"id":1637,"name":"fromObj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"源对象。The source object to copy properties from"}]},"type":{"type":"reference","id":1755,"name":"SimpleObj"},"text":{"comment":"<p>源对象。The source object to copy properties from</p>\n"}},{"id":1638,"name":"toObj","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"拷贝覆盖的对象。The target object to copy properties to (modified in place)"}]},"type":{"type":"reference","id":1755,"name":"SimpleObj"},"text":{"comment":"<p>拷贝覆盖的对象。The target object to copy properties to (modified in place)</p>\n"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","qualifiedName":"Record","package":"typescript"},"is":{"declaration":false},"location":{"query":"canvas-utils/src.Function.cloneObjDeep","hash":"cloneObjDeep"},"text":{"comment":"<h5>Function:</h5><p>cloneObjDeep</p>\n<h5>Description:</h5><p>简单的深拷贝（没考虑特殊类型和循环依赖）。Performs a deep merge of two objects, copying properties from the source object to the target object. Existing properties in the target object take precedence over source properties. Nested objects are recursively merged.</p>\n<h5>Returns:</h5><p>The modified target object with merged properties</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic object merging</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">defaults</span> <span class=\"pl-k\">=</span> {\n  width: <span class=\"pl-c1\">400</span>,\n  height: <span class=\"pl-c1\">300</span>,\n  style: {\n    color: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#000000<span class=\"pl-pds\">'</span></span>,\n    lineWidth: <span class=\"pl-c1\">1</span>\n  }\n};\n\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">userOptions</span> <span class=\"pl-k\">=</span> {\n  width: <span class=\"pl-c1\">800</span>,\n  style: {\n    color: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#ff0000<span class=\"pl-pds\">'</span></span>\n  }\n};\n\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">config</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">cloneObjDeep</span>(<span class=\"pl-smi\">defaults</span>, <span class=\"pl-smi\">userOptions</span>);\n<span class=\"pl-c\">// Result: {</span>\n<span class=\"pl-c\">//   width: 800,           // User value takes precedence</span>\n<span class=\"pl-c\">//   height: 300,          // Default value used</span>\n<span class=\"pl-c\">//   style: {</span>\n<span class=\"pl-c\">//     color: '#ff0000',   // User value takes precedence</span>\n<span class=\"pl-c\">//     lineWidth: 1        // Default value used</span>\n<span class=\"pl-c\">//   }</span>\n<span class=\"pl-c\">// }</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Canvas configuration merging</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">defaultCanvasConfig</span> <span class=\"pl-k\">=</span> {\n  dimensions: { width: <span class=\"pl-c1\">500</span>, height: <span class=\"pl-c1\">400</span> },\n  rendering: { antialias: <span class=\"pl-c1\">true</span>, alpha: <span class=\"pl-c1\">false</span> },\n  animation: { duration: <span class=\"pl-c1\">1000</span>, easing: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>ease-in-out<span class=\"pl-pds\">'</span></span> }\n};\n\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">customConfig</span> <span class=\"pl-k\">=</span> {\n  dimensions: { width: <span class=\"pl-c1\">800</span> },\n  animation: { duration: <span class=\"pl-c1\">2000</span> }\n};\n\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">finalConfig</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">cloneObjDeep</span>(<span class=\"pl-smi\">defaultCanvasConfig</span>, <span class=\"pl-smi\">customConfig</span>);\n<span class=\"pl-c\">// Preserves all default values while applying custom overrides</span>\n</code></pre>\n<h5>Since:</h5><p>1.0.0</p>\n"},"sources":[{"fileName":"packages/canvas-utils/src/utils/base.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/canvas-utils/src/utils/base.ts","line":139,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/canvas-utils/src/utils/base.ts#L139"}],"parentId":1635}],"is":{"declaration":true},"location":{"query":"canvas-utils/src.Function.cloneObjDeep","hash":""},"text":{},"parentId":1168}
