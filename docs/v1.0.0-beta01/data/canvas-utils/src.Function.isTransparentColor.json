{"id":1678,"name":"isTransparentColor","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/canvas-utils/src/utils/colors.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/canvas-utils/src/utils/colors.ts","line":175,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/canvas-utils/src/utils/colors.ts#L175"}],"signatures":[{"id":1679,"name":"isTransparentColor","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"isTransparentColor"}]},{"tag":"@description","content":[{"kind":"text","text":"是否为透明色。Determines if a color string represents a transparent color by checking if the alpha value is 0. Works with RGBA color strings and handles various formatting."}]},{"tag":"@returns","content":[{"kind":"text","text":"返回当前颜色是否为透明色。True if the color is transparent (alpha = 0), false otherwise"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Transparent colors\nconst transparent1 = isTransparentColor('rgba(255,0,0,0)');      // Returns true\nconst transparent2 = isTransparentColor('rgba(0, 255, 0, 0)');   // Returns true (with spaces)\nconst transparent3 = isTransparentColor('rgba(100,100,100,0)');  // Returns true\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Opaque colors\nconst opaque1 = isTransparentColor('rgba(255,0,0,1)');           // Returns false\nconst opaque2 = isTransparentColor('rgba(0,0,255,0.5)');         // Returns false\nconst opaque3 = isTransparentColor(getColorRgba('#f00'));        // Returns false\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Invalid or empty strings\nconst empty = isTransparentColor('');                            // Returns false\nconst invalid = isTransparentColor('not-a-color');              // Returns false\nconst rgb = isTransparentColor('rgb(255,0,0)');                 // Returns false (no alpha)\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Canvas rendering optimization\nfunction drawElement(ctx, color, x, y, width, height) {\n  if (isTransparentColor(color)) {\n    console.log('Skipping transparent element');\n    return; // Skip rendering transparent elements for performance\n  }\n\n  ctx.fillStyle = color;\n  ctx.fillRect(x, y, width, height);\n}\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Layer visibility check\nconst layers = [\n  { color: 'rgba(255,0,0,1)', visible: true },\n  { color: 'rgba(0,255,0,0)', visible: true },\n  { color: 'rgba(0,0,255,0.5)', visible: true }\n];\n\nconst visibleLayers = layers.filter(layer =>\n  layer.visible && !isTransparentColor(layer.color)\n);\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]},{"tag":"@see","content":[{"kind":"inline-tag","tag":"@link","text":"getColorRgba","target":1674},{"kind":"text","text":" - For creating RGBA color strings"}]}]},"parameters":[{"id":1680,"name":"colorStr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"颜色字符串。Color string to check (typically RGBA format)"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>颜色字符串。Color string to check (typically RGBA format)</p>\n"}}],"type":{"type":"intrinsic","name":"boolean"},"is":{"declaration":false},"location":{"query":"canvas-utils/src.Function.isTransparentColor","hash":"isTransparentColor"},"text":{"comment":"<h5>Function:</h5><p>isTransparentColor</p>\n<h5>Description:</h5><p>是否为透明色。Determines if a color string represents a transparent color by checking if the alpha value is 0. Works with RGBA color strings and handles various formatting.</p>\n<h5>Returns:</h5><p>返回当前颜色是否为透明色。True if the color is transparent (alpha = 0), false otherwise</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Transparent colors</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">transparent1</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">isTransparentColor</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>rgba(255,0,0,0)<span class=\"pl-pds\">'</span></span>);      <span class=\"pl-c\">// Returns true</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">transparent2</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">isTransparentColor</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>rgba(0, 255, 0, 0)<span class=\"pl-pds\">'</span></span>);   <span class=\"pl-c\">// Returns true (with spaces)</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">transparent3</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">isTransparentColor</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>rgba(100,100,100,0)<span class=\"pl-pds\">'</span></span>);  <span class=\"pl-c\">// Returns true</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Opaque colors</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">opaque1</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">isTransparentColor</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>rgba(255,0,0,1)<span class=\"pl-pds\">'</span></span>);           <span class=\"pl-c\">// Returns false</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">opaque2</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">isTransparentColor</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>rgba(0,0,255,0.5)<span class=\"pl-pds\">'</span></span>);         <span class=\"pl-c\">// Returns false</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">opaque3</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">isTransparentColor</span>(<span class=\"pl-en\">getColorRgba</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#f00<span class=\"pl-pds\">'</span></span>));        <span class=\"pl-c\">// Returns false</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Invalid or empty strings</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">empty</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">isTransparentColor</span>(<span class=\"pl-s\"><span class=\"pl-pds\">''</span></span>);                            <span class=\"pl-c\">// Returns false</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">invalid</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">isTransparentColor</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>not-a-color<span class=\"pl-pds\">'</span></span>);              <span class=\"pl-c\">// Returns false</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">rgb</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">isTransparentColor</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>rgb(255,0,0)<span class=\"pl-pds\">'</span></span>);                 <span class=\"pl-c\">// Returns false (no alpha)</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Canvas rendering optimization</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">drawElement</span>(<span class=\"pl-v\">ctx</span>, <span class=\"pl-v\">color</span>, <span class=\"pl-v\">x</span>, <span class=\"pl-v\">y</span>, <span class=\"pl-v\">width</span>, <span class=\"pl-v\">height</span>) {\n  <span class=\"pl-k\">if</span> (<span class=\"pl-en\">isTransparentColor</span>(<span class=\"pl-smi\">color</span>)) {\n    <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Skipping transparent element<span class=\"pl-pds\">'</span></span>);\n    <span class=\"pl-k\">return</span>; <span class=\"pl-c\">// Skip rendering transparent elements for performance</span>\n  }\n\n  <span class=\"pl-smi\">ctx</span>.<span class=\"pl-smi\">fillStyle</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">color</span>;\n  <span class=\"pl-smi\">ctx</span>.<span class=\"pl-en\">fillRect</span>(<span class=\"pl-smi\">x</span>, <span class=\"pl-smi\">y</span>, <span class=\"pl-smi\">width</span>, <span class=\"pl-smi\">height</span>);\n}\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Layer visibility check</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">layers</span> <span class=\"pl-k\">=</span> [\n  { color: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>rgba(255,0,0,1)<span class=\"pl-pds\">'</span></span>, visible: <span class=\"pl-c1\">true</span> },\n  { color: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>rgba(0,255,0,0)<span class=\"pl-pds\">'</span></span>, visible: <span class=\"pl-c1\">true</span> },\n  { color: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>rgba(0,0,255,0.5)<span class=\"pl-pds\">'</span></span>, visible: <span class=\"pl-c1\">true</span> }\n];\n\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">visibleLayers</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">layers</span>.<span class=\"pl-en\">filter</span>(<span class=\"pl-v\">layer</span> <span class=\"pl-k\">=></span>\n  <span class=\"pl-smi\">layer</span>.<span class=\"pl-smi\">visible</span> <span class=\"pl-k\">&#x26;&#x26;</span> <span class=\"pl-k\">!</span><span class=\"pl-en\">isTransparentColor</span>(<span class=\"pl-smi\">layer</span>.<span class=\"pl-c1\">color</span>)\n);\n</code></pre>\n<h5>Since:</h5><p>1.0.0</p>\n<h5>See:</h5><p><a href=\"1674\">getColorRgba</a> - For creating RGBA color strings</p>\n"},"sources":[{"fileName":"packages/canvas-utils/src/utils/colors.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/canvas-utils/src/utils/colors.ts","line":175,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/canvas-utils/src/utils/colors.ts#L175"}],"parentId":1678}],"is":{"declaration":true},"location":{"query":"canvas-utils/src.Function.isTransparentColor","hash":""},"text":{},"parentId":1168}
