{"id":1639,"name":"throwError","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/canvas-utils/src/utils/base.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/canvas-utils/src/utils/base.ts","line":242,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/canvas-utils/src/utils/base.ts#L242"}],"signatures":[{"id":1640,"name":"throwError","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"throwError"}]},{"tag":"@description","content":[{"kind":"text","text":"Throws a standardized error with formatted message including error information, component part, and additional details. This function never returns as it always throws an exception."}]},{"tag":"@returns","content":[{"kind":"text","text":"This function never returns as it always throws an Error"}]},{"tag":"@throws","content":[{"kind":"text","text":"Always throws an Error with formatted message"}]},{"tag":"@example","content":[{"kind":"text","text":"// Basic error throwing\r\nfunction validateCanvasSize(width, height) {\r\n  if (width <= 0 || height <= 0) {\r\n    throwError('Invalid canvas dimensions', 'validateCanvasSize', "},{"kind":"code","text":"`width: ${width}, height: ${height}`"},{"kind":"text","text":");\r\n  }\r\n}"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Canvas context validation\r\nfunction initializeCanvas(canvas) {\r\n  const ctx = canvas.getContext('2d');\r\n  if (!ctx) {\r\n    throwError('Failed to get 2D context', 'initializeCanvas', 'Canvas may not support 2D rendering');\r\n  }\r\n  return ctx;\r\n}\n```"}]},{"tag":"@example","content":[{"kind":"text","text":"// Animation parameter validation\r\nfunction startAnimation(options) {\r\n  if (!options.duration || options.duration <= 0) {\r\n    throwError(\r\n      'Invalid animation duration',\r\n      'startAnimation',\r\n      "},{"kind":"code","text":"`Expected positive number, got: ${options.duration}`"},{"kind":"text","text":"\r\n    );\r\n  }\r\n}"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"parameters":[{"id":1641,"name":"info","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"错误信息。 The main error information or message"}]},"type":{"type":"intrinsic","name":"unknown"},"text":{"comment":"<p>错误信息。 The main error information or message</p>\n"}},{"id":1642,"name":"part","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"错误单元。The component or module part where the error occurred"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"''","text":{"comment":"<p>错误单元。The component or module part where the error occurred</p>\n"}},{"id":1643,"name":"detail","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"错误单元细节。Additional error details or context"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"''","text":{"comment":"<p>错误单元细节。Additional error details or context</p>\n"}}],"type":{"type":"intrinsic","name":"never"},"is":{"declaration":false},"location":{"query":"canvas-utils/src.Function.throwError","hash":"throwError"},"text":{"comment":"<h5>Function:</h5><p>throwError</p>\n<h5>Description:</h5><p>Throws a standardized error with formatted message including error information, component part, and additional details. This function never returns as it always throws an exception.</p>\n<h5>Returns:</h5><p>This function never returns as it always throws an Error</p>\n<h5>Throws:</h5><p>Always throws an Error with formatted message</p>\n<h5>Example:</h5><p>// Basic error throwing\nfunction validateCanvasSize(width, height) {\n  if (width &lt;= 0 || height &lt;= 0) {\n    throwError(&#39;Invalid canvas dimensions&#39;, &#39;validateCanvasSize&#39;, <code>width: ${width}, height: ${height}</code>);\n  }\n}</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Canvas context validation</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">initializeCanvas</span>(<span class=\"pl-v\">canvas</span>) {\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">ctx</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">canvas</span>.<span class=\"pl-c1\">getContext</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>2d<span class=\"pl-pds\">'</span></span>);\n  <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span><span class=\"pl-smi\">ctx</span>) {\n    <span class=\"pl-en\">throwError</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Failed to get 2D context<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>initializeCanvas<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>Canvas may not support 2D rendering<span class=\"pl-pds\">'</span></span>);\n  }\n  <span class=\"pl-k\">return</span> <span class=\"pl-smi\">ctx</span>;\n}\n</code></pre>\n<h5>Example:</h5><p>// Animation parameter validation\nfunction startAnimation(options) {\n  if (!options.duration || options.duration &lt;= 0) {\n    throwError(\n      &#39;Invalid animation duration&#39;,\n      &#39;startAnimation&#39;,\n      <code>Expected positive number, got: ${options.duration}</code>\n    );\n  }\n}</p>\n<h5>Since:</h5><p>1.0.0</p>\n"},"sources":[{"fileName":"packages/canvas-utils/src/utils/base.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/canvas-utils/src/utils/base.ts","line":242,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/canvas-utils/src/utils/base.ts#L242"}],"parentId":1639}],"is":{"declaration":true},"location":{"query":"canvas-utils/src.Function.throwError","hash":""},"text":{},"parentId":1168}
