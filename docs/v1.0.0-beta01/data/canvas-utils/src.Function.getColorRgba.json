{"id":1674,"name":"getColorRgba","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/canvas-utils/src/utils/colors.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/canvas-utils/src/utils/colors.ts","line":118,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/canvas-utils/src/utils/colors.ts#L118"}],"signatures":[{"id":1675,"name":"getColorRgba","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"getColorRgba"}]},{"tag":"@description","content":[{"kind":"text","text":"十六进制颜色转rgba。Converts hexadecimal color strings to RGBA format strings with customizable opacity. Handles both standard and shorthand hex formats, with fallback to transparent black for invalid colors."}]},{"tag":"@returns","content":[{"kind":"text","text":"RGBA color string in format 'rgba(r,g,b,a)' or 'rgba(0,0,0,0)' for invalid colors"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic RGBA conversion\nconst red = getColorRgba('#f00');           // Returns 'rgba(255,0,0,1)'\nconst blue = getColorRgba('#0000FF');       // Returns 'rgba(0,0,255,1)'\nconst green = getColorRgba('#00ff00');      // Returns 'rgba(0,255,0,1)'\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Custom opacity\nconst semiRed = getColorRgba('#f00', 0.5);     // Returns 'rgba(255,0,0,0.5)'\nconst faintBlue = getColorRgba('#0000FF', 0.1); // Returns 'rgba(0,0,255,0.1)'\nconst transparent = getColorRgba('#fff', 0);    // Returns 'rgba(255,255,255,0)'\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Canvas gradient creation\nfunction createGradient(ctx, startColor, endColor, opacity = 1) {\n  const gradient = ctx.createLinearGradient(0, 0, 200, 0);\n  gradient.addColorStop(0, getColorRgba(startColor, opacity));\n  gradient.addColorStop(1, getColorRgba(endColor, opacity));\n  return gradient;\n}\n\nconst gradient = createGradient(ctx, '#ff0000', '#0000ff', 0.8);\nctx.fillStyle = gradient;\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Animation color transitions\nfunction animateColorOpacity(hexColor, progress) {\n  const opacity = Math.sin(progress * Math.PI); // Fade in and out\n  return getColorRgba(hexColor, opacity);\n}\n\n// In animation loop\nctx.fillStyle = animateColorOpacity('#ff6600', animationProgress);\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Error handling\nconst invalid = getColorRgba('invalid');     // Returns 'rgba(0,0,0,0)'\nconst badHex = getColorRgba('#gggggg');      // Returns 'rgba(0,0,0,0)'\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"getColorRgbList","target":1671},{"kind":"text","text":" - For getting RGB array values"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"isTransparentColor","target":1678},{"kind":"text","text":" - For checking if a color is transparent"},{"kind":"text","text":"\n"}]}]},"parameters":[{"id":1676,"name":"str","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"hex格式颜色。Hexadecimal color string (e.g., '#ff0000', '#f00')"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>hex格式颜色。Hexadecimal color string (e.g., &#39;#ff0000&#39;, &#39;#f00&#39;)</p>\n"}},{"id":1677,"name":"opacity","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"透明度。Opacity value between 0 (transparent) and 1 (opaque)"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"1","text":{"comment":"<p>透明度。Opacity value between 0 (transparent) and 1 (opaque)</p>\n"}}],"type":{"type":"intrinsic","name":"string"},"is":{"declaration":false},"location":{"query":"canvas-utils/src.Function.getColorRgba","hash":"getColorRgba"},"text":{"comment":"<h5>Function:</h5><p>getColorRgba</p>\n<h5>Description:</h5><p>十六进制颜色转rgba。Converts hexadecimal color strings to RGBA format strings with customizable opacity. Handles both standard and shorthand hex formats, with fallback to transparent black for invalid colors.</p>\n<h5>Returns:</h5><p>RGBA color string in format &#39;rgba(r,g,b,a)&#39; or &#39;rgba(0,0,0,0)&#39; for invalid colors</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic RGBA conversion</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">red</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getColorRgba</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#f00<span class=\"pl-pds\">'</span></span>);           <span class=\"pl-c\">// Returns 'rgba(255,0,0,1)'</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">blue</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getColorRgba</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#0000FF<span class=\"pl-pds\">'</span></span>);       <span class=\"pl-c\">// Returns 'rgba(0,0,255,1)'</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">green</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getColorRgba</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#00ff00<span class=\"pl-pds\">'</span></span>);      <span class=\"pl-c\">// Returns 'rgba(0,255,0,1)'</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Custom opacity</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">semiRed</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getColorRgba</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#f00<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">0.5</span>);     <span class=\"pl-c\">// Returns 'rgba(255,0,0,0.5)'</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">faintBlue</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getColorRgba</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#0000FF<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">0.1</span>); <span class=\"pl-c\">// Returns 'rgba(0,0,255,0.1)'</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">transparent</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getColorRgba</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#fff<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">0</span>);    <span class=\"pl-c\">// Returns 'rgba(255,255,255,0)'</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Canvas gradient creation</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">createGradient</span>(<span class=\"pl-v\">ctx</span>, <span class=\"pl-v\">startColor</span>, <span class=\"pl-v\">endColor</span>, <span class=\"pl-v\">opacity</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>) {\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">gradient</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">ctx</span>.<span class=\"pl-en\">createLinearGradient</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">200</span>, <span class=\"pl-c1\">0</span>);\n  <span class=\"pl-smi\">gradient</span>.<span class=\"pl-en\">addColorStop</span>(<span class=\"pl-c1\">0</span>, <span class=\"pl-en\">getColorRgba</span>(<span class=\"pl-smi\">startColor</span>, <span class=\"pl-smi\">opacity</span>));\n  <span class=\"pl-smi\">gradient</span>.<span class=\"pl-en\">addColorStop</span>(<span class=\"pl-c1\">1</span>, <span class=\"pl-en\">getColorRgba</span>(<span class=\"pl-smi\">endColor</span>, <span class=\"pl-smi\">opacity</span>));\n  <span class=\"pl-k\">return</span> <span class=\"pl-smi\">gradient</span>;\n}\n\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">gradient</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">createGradient</span>(<span class=\"pl-smi\">ctx</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#ff0000<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#0000ff<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">0.8</span>);\n<span class=\"pl-smi\">ctx</span>.<span class=\"pl-smi\">fillStyle</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">gradient</span>;\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Animation color transitions</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">animateColorOpacity</span>(<span class=\"pl-v\">hexColor</span>, <span class=\"pl-v\">progress</span>) {\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">opacity</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Math</span>.<span class=\"pl-c1\">sin</span>(<span class=\"pl-smi\">progress</span> <span class=\"pl-k\">*</span> <span class=\"pl-c1\">Math</span>.<span class=\"pl-c1\">PI</span>); <span class=\"pl-c\">// Fade in and out</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-en\">getColorRgba</span>(<span class=\"pl-smi\">hexColor</span>, <span class=\"pl-smi\">opacity</span>);\n}\n\n<span class=\"pl-c\">// In animation loop</span>\n<span class=\"pl-smi\">ctx</span>.<span class=\"pl-smi\">fillStyle</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">animateColorOpacity</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#ff6600<span class=\"pl-pds\">'</span></span>, <span class=\"pl-smi\">animationProgress</span>);\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Error handling</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">invalid</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getColorRgba</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>invalid<span class=\"pl-pds\">'</span></span>);     <span class=\"pl-c\">// Returns 'rgba(0,0,0,0)'</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">badHex</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getColorRgba</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>#gggggg<span class=\"pl-pds\">'</span></span>);      <span class=\"pl-c\">// Returns 'rgba(0,0,0,0)'</span>\n</code></pre>\n<h5>Since:</h5><p>1.0.0</p>\n<h5>See:</h5><ul>\n<li><a href=\"1671\">getColorRgbList</a> - For getting RGB array values</li>\n<li><a href=\"1678\">isTransparentColor</a> - For checking if a color is transparent</li>\n</ul>\n"},"sources":[{"fileName":"packages/canvas-utils/src/utils/colors.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/canvas-utils/src/utils/colors.ts","line":118,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/canvas-utils/src/utils/colors.ts#L118"}],"parentId":1674}],"is":{"declaration":true},"location":{"query":"canvas-utils/src.Function.getColorRgba","hash":""},"text":{},"parentId":1168}
