{"id":1646,"name":"cloneArray","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/canvas-utils/src/utils/base.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/canvas-utils/src/utils/base.ts","line":194,"character":13,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/canvas-utils/src/utils/base.ts#L194"}],"signatures":[{"id":1647,"name":"cloneArray","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"cloneArray"}]},{"tag":"@description","content":[{"kind":"text","text":"简单的数组深拷贝（没考虑特殊类型和循环依赖）。Copies all elements from a source array to a target array, replacing the target array's contents. The target array is modified in place and returned."}]},{"tag":"@returns","content":[{"kind":"text","text":"The modified target array containing all elements from the source array"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic array copying\r\nconst sourceData = [1, 2, 3, 4, 5];\r\nconst targetArray = [99]; // Will be overwritten\r\n\r\nconst result = cloneArray(sourceData, targetArray);\r\nconsole.log(result); // [1, 2, 3, 4, 5]\r\nconsole.log(targetArray === result); // true (same reference)\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Copying canvas drawing commands\r\nconst defaultCommands = ['beginPath', 'moveTo', 'lineTo', 'stroke'];\r\nconst currentCommands = [];\r\n\r\ncloneArray(defaultCommands, currentCommands);\r\n// currentCommands now contains all default commands\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Updating animation keyframes\r\nconst newKeyframes = [\r\n  { time: 0, value: 0 },\r\n  { time: 0.5, value: 50 },\r\n  { time: 1, value: 100 }\r\n];\r\n\r\nlet animationFrames = [{ time: 0, value: 10 }];\r\ncloneArray(newKeyframes, animationFrames);\r\n// animationFrames now contains the new keyframe data\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"typeParameter":[{"id":1648,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1649,"name":"fromArr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"源数组。The source array to copy elements from"}]},"type":{"type":"array","elementType":{"type":"reference","id":1648,"name":"T"}},"text":{"comment":"<p>源数组。The source array to copy elements from</p>\n"}},{"id":1650,"name":"toArr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"拷贝覆盖的数组。The target array to copy elements to (modified in place)"}]},"type":{"type":"array","elementType":{"type":"reference","id":1648,"name":"T"}},"text":{"comment":"<p>拷贝覆盖的数组。The target array to copy elements to (modified in place)</p>\n"}}],"type":{"type":"array","elementType":{"type":"reference","id":1648,"name":"T"}},"is":{"declaration":false},"location":{"query":"canvas-utils/src.Function.cloneArray","hash":"cloneArray"},"text":{"comment":"<h5>Function:</h5><p>cloneArray</p>\n<h5>Description:</h5><p>简单的数组深拷贝（没考虑特殊类型和循环依赖）。Copies all elements from a source array to a target array, replacing the target array&#39;s contents. The target array is modified in place and returned.</p>\n<h5>Returns:</h5><p>The modified target array containing all elements from the source array</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic array copying</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">sourceData</span> <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>];\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">targetArray</span> <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">99</span>]; <span class=\"pl-c\">// Will be overwritten</span>\n\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">result</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">cloneArray</span>(<span class=\"pl-smi\">sourceData</span>, <span class=\"pl-smi\">targetArray</span>);\n<span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-smi\">result</span>); <span class=\"pl-c\">// [1, 2, 3, 4, 5]</span>\n<span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-smi\">targetArray</span> <span class=\"pl-k\">===</span> <span class=\"pl-smi\">result</span>); <span class=\"pl-c\">// true (same reference)</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Copying canvas drawing commands</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">defaultCommands</span> <span class=\"pl-k\">=</span> [<span class=\"pl-s\"><span class=\"pl-pds\">'</span>beginPath<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>moveTo<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>lineTo<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>stroke<span class=\"pl-pds\">'</span></span>];\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">currentCommands</span> <span class=\"pl-k\">=</span> [];\n\n<span class=\"pl-en\">cloneArray</span>(<span class=\"pl-smi\">defaultCommands</span>, <span class=\"pl-smi\">currentCommands</span>);\n<span class=\"pl-c\">// currentCommands now contains all default commands</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Updating animation keyframes</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">newKeyframes</span> <span class=\"pl-k\">=</span> [\n  { time: <span class=\"pl-c1\">0</span>, value: <span class=\"pl-c1\">0</span> },\n  { time: <span class=\"pl-c1\">0.5</span>, value: <span class=\"pl-c1\">50</span> },\n  { time: <span class=\"pl-c1\">1</span>, value: <span class=\"pl-c1\">100</span> }\n];\n\n<span class=\"pl-k\">let</span> <span class=\"pl-smi\">animationFrames</span> <span class=\"pl-k\">=</span> [{ time: <span class=\"pl-c1\">0</span>, value: <span class=\"pl-c1\">10</span> }];\n<span class=\"pl-en\">cloneArray</span>(<span class=\"pl-smi\">newKeyframes</span>, <span class=\"pl-smi\">animationFrames</span>);\n<span class=\"pl-c\">// animationFrames now contains the new keyframe data</span>\n</code></pre>\n<h5>Since:</h5><p>1.0.0</p>\n"},"sources":[{"fileName":"packages/canvas-utils/src/utils/base.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/canvas-utils/src/utils/base.ts","line":194,"character":26,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/canvas-utils/src/utils/base.ts#L194"}],"parentId":1646}],"is":{"declaration":true},"location":{"query":"canvas-utils/src.Function.cloneArray","hash":""},"text":{},"parentId":1168}
