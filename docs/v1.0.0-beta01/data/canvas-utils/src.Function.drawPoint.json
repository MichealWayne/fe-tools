{"id":1696,"name":"drawPoint","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/canvas-utils/src/canvas/drawer.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/canvas-utils/src/canvas/drawer.ts","line":162,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/canvas-utils/src/canvas/drawer.ts#L162"}],"signatures":[{"id":1697,"name":"drawPoint","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"drawPoint"}]},{"tag":"@description","content":[{"kind":"text","text":"画圆点。Draws a circular point (dot) with customizable fill color, stroke color, radius, and stroke width. Useful for creating data points, markers, or decorative elements."}]},{"tag":"@returns","content":[{"kind":"text","text":"This function does not return a value"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic filled circle without stroke\r\nconst canvas = document.getElementById('myCanvas');\r\nconst ctx = canvas.getContext('2d');\r\ndrawPoint(ctx, { x: 50, y: 50 }, '#ff0000', '#ffffff', 10, 0);\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Circle with both fill and stroke\r\ndrawPoint(ctx, { x: 100, y: 100 }, '#0066cc', '#ffffff', 15, 2);\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Creating data points for a scatter plot\r\nconst dataPoints = [\r\n  { x: 20, y: 30 },\r\n  { x: 40, y: 60 },\r\n  { x: 80, y: 45 }\r\n];\r\ndataPoints.forEach(point => {\r\n  drawPoint(ctx, point, '#ff6600', '#333333', 8, 1);\r\n});\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]}]},"parameters":[{"id":1698,"name":"ctx","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The 2D rendering context of the canvas element"}]},"type":{"type":"reference","name":"CanvasRenderingContext2D","qualifiedName":"CanvasRenderingContext2D","package":"typescript"},"text":{"comment":"<p>The 2D rendering context of the canvas element</p>\n"}},{"id":1699,"name":"centerPoint","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The center coordinates of the circle with x and y properties"}]},"type":{"type":"reference","id":1747,"name":"PointPosition"},"text":{"comment":"<p>The center coordinates of the circle with x and y properties</p>\n"}},{"id":1700,"name":"color","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The fill color of the circle (CSS color format: hex, rgb, rgba, named colors)"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>The fill color of the circle (CSS color format: hex, rgb, rgba, named colors)</p>\n"}},{"id":1701,"name":"strokeColor","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The stroke (border) color of the circle"}]},"type":{"type":"intrinsic","name":"string"},"defaultValue":"'#fff'","text":{"comment":"<p>The stroke (border) color of the circle</p>\n"}},{"id":1702,"name":"width","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The radius of the circle in pixels"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"0","text":{"comment":"<p>The radius of the circle in pixels</p>\n"}},{"id":1703,"name":"strokeWidth","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The width of the stroke (border) in pixels. Set to 0 to disable stroke"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"1","text":{"comment":"<p>The width of the stroke (border) in pixels. Set to 0 to disable stroke</p>\n"}}],"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"canvas-utils/src.Function.drawPoint","hash":"drawPoint"},"text":{"comment":"<h5>Function:</h5><p>drawPoint</p>\n<h5>Description:</h5><p>画圆点。Draws a circular point (dot) with customizable fill color, stroke color, radius, and stroke width. Useful for creating data points, markers, or decorative elements.</p>\n<h5>Returns:</h5><p>This function does not return a value</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic filled circle without stroke</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">canvas</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">getElementById</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>myCanvas<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">ctx</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">canvas</span>.<span class=\"pl-c1\">getContext</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>2d<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-en\">drawPoint</span>(<span class=\"pl-smi\">ctx</span>, { x: <span class=\"pl-c1\">50</span>, y: <span class=\"pl-c1\">50</span> }, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#ff0000<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#ffffff<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">0</span>);\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Circle with both fill and stroke</span>\n<span class=\"pl-en\">drawPoint</span>(<span class=\"pl-smi\">ctx</span>, { x: <span class=\"pl-c1\">100</span>, y: <span class=\"pl-c1\">100</span> }, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#0066cc<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#ffffff<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">15</span>, <span class=\"pl-c1\">2</span>);\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Creating data points for a scatter plot</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">dataPoints</span> <span class=\"pl-k\">=</span> [\n  { x: <span class=\"pl-c1\">20</span>, y: <span class=\"pl-c1\">30</span> },\n  { x: <span class=\"pl-c1\">40</span>, y: <span class=\"pl-c1\">60</span> },\n  { x: <span class=\"pl-c1\">80</span>, y: <span class=\"pl-c1\">45</span> }\n];\n<span class=\"pl-smi\">dataPoints</span>.<span class=\"pl-c1\">forEach</span>(<span class=\"pl-v\">point</span> <span class=\"pl-k\">=></span> {\n  <span class=\"pl-en\">drawPoint</span>(<span class=\"pl-smi\">ctx</span>, <span class=\"pl-smi\">point</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#ff6600<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>#333333<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">8</span>, <span class=\"pl-c1\">1</span>);\n});\n</code></pre>\n<h5>Since:</h5><p>1.0.0</p>\n"},"sources":[{"fileName":"packages/canvas-utils/src/canvas/drawer.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/canvas-utils/src/canvas/drawer.ts","line":162,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/canvas-utils/src/canvas/drawer.ts#L162"}],"parentId":1696}],"is":{"declaration":true},"location":{"query":"canvas-utils/src.Function.drawPoint","hash":""},"text":{},"parentId":1168}
