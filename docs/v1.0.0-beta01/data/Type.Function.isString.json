{"id":717,"name":"isString","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/type.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/type.ts","line":143,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/type.ts#L143"}],"signatures":[{"id":718,"name":"isString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"isString"}]},{"tag":"@description","content":[{"kind":"text","text":"检查值是否为字符串原始类型。Checks if a value is a string primitive"}]},{"tag":"@returns","content":[{"kind":"text","text":"如果值为字符串原始类型则返回true，否则返回false。True if the value is a string primitive, false otherwise"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic usage\nisString('abc'); // -> true\nisString([1, 2, 3]); // -> false\nisString(123); // -> false\n```"}]},{"tag":"@example","content":[{"kind":"text","text":"// Different string types\nisString(''); // -> true (empty string)\nisString('hello world'); // -> true\nisString("},{"kind":"code","text":"`template string`"},{"kind":"text","text":"); // -> true\nisString(String('converted')); // -> true"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// String objects vs primitives\nisString('primitive'); // -> true\nisString(new String('object')); // -> false (String object, not primitive)\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Other types\nisString(null); // -> false\nisString(undefined); // -> false\nisString(0); // -> false\nisString(false); // -> false\n```"}]}]},"parameters":[{"id":719,"name":"val","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"要检查的值。Value to check"}]},"type":{"type":"intrinsic","name":"unknown"},"text":{"comment":"<p>要检查的值。Value to check</p>\n"}}],"type":{"type":"predicate","name":"val","asserts":false,"targetType":{"type":"intrinsic","name":"string"}},"is":{"declaration":false},"location":{"query":"Type.Function.isString","hash":"isString"},"text":{"comment":"<h5>Function:</h5><p>isString</p>\n<h5>Description:</h5><p>检查值是否为字符串原始类型。Checks if a value is a string primitive</p>\n<h5>Returns:</h5><p>如果值为字符串原始类型则返回true，否则返回false。True if the value is a string primitive, false otherwise</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic usage</span>\n<span class=\"pl-en\">isString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>abc<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">isString</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>]); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isString</span>(<span class=\"pl-c1\">123</span>); <span class=\"pl-c\">// -> false</span>\n</code></pre>\n<h5>Example:</h5><p>// Different string types\nisString(&#39;&#39;); // -&gt; true (empty string)\nisString(&#39;hello world&#39;); // -&gt; true\nisString(<code>template string</code>); // -&gt; true\nisString(String(&#39;converted&#39;)); // -&gt; true</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// String objects vs primitives</span>\n<span class=\"pl-en\">isString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>primitive<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">isString</span>(<span class=\"pl-k\">new</span> <span class=\"pl-c1\">String</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>object<span class=\"pl-pds\">'</span></span>)); <span class=\"pl-c\">// -> false (String object, not primitive)</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Other types</span>\n<span class=\"pl-en\">isString</span>(<span class=\"pl-c1\">null</span>); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isString</span>(<span class=\"pl-c1\">undefined</span>); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isString</span>(<span class=\"pl-c1\">0</span>); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isString</span>(<span class=\"pl-c1\">false</span>); <span class=\"pl-c\">// -> false</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/type.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/type.ts","line":143,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/type.ts#L143"}],"parentId":717}],"is":{"declaration":true},"location":{"query":"Type.Function.isString","hash":""},"text":{},"parentId":710}
