{"id":178,"name":"chunk","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/array.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/array.ts","line":255,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/array.ts#L255"}],"signatures":[{"id":179,"name":"chunk","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"chunk"}]},{"tag":"@description","content":[{"kind":"text","text":"将数组拆分为指定大小的块。Splits an array into chunks of specified size"}]},{"tag":"@returns","content":[{"kind":"text","text":"块数组，其中每个块是指定大小的数组（最后一个块可能较小）。Array of chunks, where each chunk is an array of the specified size (last chunk may be smaller)"}]},{"tag":"@throws","content":[{"kind":"text","text":"当size小于1时抛出错误。When size is less than 1"}]},{"tag":"@throws","content":[{"kind":"text","text":"当arr不是数组或size不是数字时抛出错误。When arr is not an array or size is not a number"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic chunking\nchunk([1, 2, 3, 4, 5], 3); // -> [[1, 2, 3], [4, 5]]\nchunk([1, 2, 3, 4, 5], 2); // -> [[1, 2], [3, 4], [5]]\nchunk([1, 2, 3, 4, 5], 1); // -> [[1], [2], [3], [4], [5]]\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Edge cases\nchunk([], 2); // -> []\nchunk([1, 2, 3], 5); // -> [[1, 2, 3]]\nchunk(['a', 'b', 'c', 'd'], 2); // -> [['a', 'b'], ['c', 'd']]\n```"}]},{"tag":"@example","content":[{"kind":"text","text":"// Processing data in batches\nconst data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst batches = chunk(data, 3);\nbatches.forEach((batch, index) => {\n  console.log("},{"kind":"code","text":"`Batch ${index + 1}:`"},{"kind":"text","text":", batch);\n});\n// Batch 1: [1, 2, 3]\n// Batch 2: [4, 5, 6]\n// Batch 3: [7, 8, 9]\n// Batch 4: [10]"}]}]},"typeParameter":[{"id":180,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":181,"name":"arr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要拆分为块的数组。Array to split into chunks"}]},"type":{"type":"array","elementType":{"type":"reference","id":180,"name":"T"}},"text":{"comment":"<p>要拆分为块的数组。Array to split into chunks</p>\n"}},{"id":182,"name":"size","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"每个块的大小（必须是正整数）。Size of each chunk (must be positive integer)"}]},"type":{"type":"intrinsic","name":"number"},"text":{"comment":"<p>每个块的大小（必须是正整数）。Size of each chunk (must be positive integer)</p>\n"}}],"type":{"type":"array","elementType":{"type":"array","elementType":{"type":"reference","id":180,"name":"T"}}},"is":{"declaration":false},"location":{"query":"Array.Function.chunk","hash":"chunk"},"text":{"comment":"<h5>Function:</h5><p>chunk</p>\n<h5>Description:</h5><p>将数组拆分为指定大小的块。Splits an array into chunks of specified size</p>\n<h5>Returns:</h5><p>块数组，其中每个块是指定大小的数组（最后一个块可能较小）。Array of chunks, where each chunk is an array of the specified size (last chunk may be smaller)</p>\n<h5>Throws:</h5><p>当size小于1时抛出错误。When size is less than 1</p>\n<h5>Throws:</h5><p>当arr不是数组或size不是数字时抛出错误。When arr is not an array or size is not a number</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic chunking</span>\n<span class=\"pl-en\">chunk</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>], <span class=\"pl-c1\">3</span>); <span class=\"pl-c\">// -> [[1, 2, 3], [4, 5]]</span>\n<span class=\"pl-en\">chunk</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>], <span class=\"pl-c1\">2</span>); <span class=\"pl-c\">// -> [[1, 2], [3, 4], [5]]</span>\n<span class=\"pl-en\">chunk</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>], <span class=\"pl-c1\">1</span>); <span class=\"pl-c\">// -> [[1], [2], [3], [4], [5]]</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Edge cases</span>\n<span class=\"pl-en\">chunk</span>([], <span class=\"pl-c1\">2</span>); <span class=\"pl-c\">// -> []</span>\n<span class=\"pl-en\">chunk</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>], <span class=\"pl-c1\">5</span>); <span class=\"pl-c\">// -> [[1, 2, 3]]</span>\n<span class=\"pl-en\">chunk</span>([<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>c<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>d<span class=\"pl-pds\">'</span></span>], <span class=\"pl-c1\">2</span>); <span class=\"pl-c\">// -> [['a', 'b'], ['c', 'd']]</span>\n</code></pre>\n<h5>Example:</h5><p>// Processing data in batches\nconst data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst batches = chunk(data, 3);\nbatches.forEach((batch, index) =&gt; {\n  console.log(<code>Batch ${index + 1}:</code>, batch);\n});\n// Batch 1: [1, 2, 3]\n// Batch 2: [4, 5, 6]\n// Batch 3: [7, 8, 9]\n// Batch 4: [10]</p>\n"},"sources":[{"fileName":"packages/utils/src/array.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/array.ts","line":255,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/array.ts#L255"}],"parentId":178}],"is":{"declaration":true},"location":{"query":"Array.Function.chunk","hash":""},"text":{},"parentId":154}
