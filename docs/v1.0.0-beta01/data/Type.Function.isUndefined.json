{"id":714,"name":"isUndefined","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/type.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/type.ts","line":78,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/type.ts#L78"}],"signatures":[{"id":715,"name":"isUndefined","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"isUndefined"}]},{"tag":"@description","content":[{"kind":"text","text":"检查值是否为undefined。Checks if a value is undefined"}]},{"tag":"@returns","content":[{"kind":"text","text":"如果值为undefined则返回true，否则返回false。True if the value is undefined, false otherwise"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic usage\nlet test1 = [1, 2, 3];\nlet test2;\nisUndefined(test1); // -> false\nisUndefined(test2); // -> true\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Different undefined scenarios\nisUndefined(undefined); // -> true\nisUndefined(null); // -> false\nisUndefined(''); // -> false\nisUndefined(0); // -> false\nisUndefined(false); // -> false\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Object properties\nconst obj = { a: 1 };\nisUndefined(obj.a); // -> false\nisUndefined(obj.b); // -> true (property doesn't exist)\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Function parameters\nfunction test(param) {\n  return isUndefined(param);\n}\ntest(); // -> true (no argument passed)\ntest(null); // -> false\n```"}]}]},"parameters":[{"id":716,"name":"val","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"要检查的值。Value to check"}]},"type":{"type":"intrinsic","name":"unknown"},"text":{"comment":"<p>要检查的值。Value to check</p>\n"}}],"type":{"type":"predicate","name":"val","asserts":false,"targetType":{"type":"intrinsic","name":"undefined"}},"is":{"declaration":false},"location":{"query":"Type.Function.isUndefined","hash":"isUndefined"},"text":{"comment":"<h5>Function:</h5><p>isUndefined</p>\n<h5>Description:</h5><p>检查值是否为undefined。Checks if a value is undefined</p>\n<h5>Returns:</h5><p>如果值为undefined则返回true，否则返回false。True if the value is undefined, false otherwise</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic usage</span>\n<span class=\"pl-k\">let</span> <span class=\"pl-smi\">test1</span> <span class=\"pl-k\">=</span> [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>];\n<span class=\"pl-k\">let</span> <span class=\"pl-smi\">test2</span>;\n<span class=\"pl-en\">isUndefined</span>(<span class=\"pl-smi\">test1</span>); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isUndefined</span>(<span class=\"pl-smi\">test2</span>); <span class=\"pl-c\">// -> true</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Different undefined scenarios</span>\n<span class=\"pl-en\">isUndefined</span>(<span class=\"pl-c1\">undefined</span>); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">isUndefined</span>(<span class=\"pl-c1\">null</span>); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isUndefined</span>(<span class=\"pl-s\"><span class=\"pl-pds\">''</span></span>); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isUndefined</span>(<span class=\"pl-c1\">0</span>); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isUndefined</span>(<span class=\"pl-c1\">false</span>); <span class=\"pl-c\">// -> false</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Object properties</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">obj</span> <span class=\"pl-k\">=</span> { a: <span class=\"pl-c1\">1</span> };\n<span class=\"pl-en\">isUndefined</span>(<span class=\"pl-smi\">obj</span>.<span class=\"pl-smi\">a</span>); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isUndefined</span>(<span class=\"pl-smi\">obj</span>.<span class=\"pl-smi\">b</span>); <span class=\"pl-c\">// -> true (property doesn't exist)</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Function parameters</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">test</span>(<span class=\"pl-v\">param</span>) {\n  <span class=\"pl-k\">return</span> <span class=\"pl-en\">isUndefined</span>(<span class=\"pl-smi\">param</span>);\n}\n<span class=\"pl-en\">test</span>(); <span class=\"pl-c\">// -> true (no argument passed)</span>\n<span class=\"pl-en\">test</span>(<span class=\"pl-c1\">null</span>); <span class=\"pl-c\">// -> false</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/type.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/type.ts","line":78,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/type.ts#L78"}],"parentId":714}],"is":{"declaration":true},"location":{"query":"Type.Function.isUndefined","hash":""},"text":{},"parentId":710}
