{"id":822,"name":"getScrollTop","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/web-utils/src/dom.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/web-utils/src/dom.ts","line":593,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/web-utils/src/dom.ts#L593"}],"signatures":[{"id":823,"name":"getScrollTop","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@description","content":[{"kind":"text","text":"Gets the current vertical scroll position of the document"}]},{"tag":"@returns","content":[{"kind":"text","text":"The number of pixels scrolled from the top of the document"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Show/hide scroll-to-top button based on scroll position\r\nwindow.addEventListener('scroll', () => {\r\n  const scrollTop = getScrollTop();\r\n  const scrollButton = document.getElementById('scroll-to-top');\r\n\r\n  if (scrollTop > 300) {\r\n    scrollButton.style.display = 'block';\r\n    scrollButton.setAttribute('aria-hidden', 'false');\r\n  } else {\r\n    scrollButton.style.display = 'none';\r\n    scrollButton.setAttribute('aria-hidden', 'true');\r\n  }\r\n});\n```"}]},{"tag":"@example","content":[{"kind":"text","text":"// Implement scroll progress indicator\r\nfunction updateScrollProgress() {\r\n  const scrollTop = getScrollTop();\r\n  const docHeight = document.documentElement.scrollHeight - window.innerHeight;\r\n  const scrollPercent = (scrollTop / docHeight) * 100;\r\n\r\n  const progressBar = document.getElementById('scroll-progress');\r\n  progressBar.style.width = "},{"kind":"code","text":"`${scrollPercent}%`"},{"kind":"text","text":";\r\n  progressBar.setAttribute('aria-valuenow', scrollPercent.toString());\r\n}"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Lazy loading based on scroll position\r\nconst images = document.querySelectorAll('img[data-src]');\r\nwindow.addEventListener('scroll', () => {\r\n  const scrollTop = getScrollTop();\r\n  const viewportHeight = window.innerHeight;\r\n\r\n  images.forEach(img => {\r\n    const imgTop = getOffsetPos(img).top;\r\n    if (imgTop < scrollTop + viewportHeight + 100) {\r\n      img.src = img.dataset.src;\r\n      img.removeAttribute('data-src');\r\n    }\r\n  });\r\n});\n```"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"setScrollTop","target":830},{"kind":"text","text":" - Set scroll position"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"getScrollPosition","target":824},{"kind":"text","text":" - Get both X and Y scroll positions"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop","target":"https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop"},{"kind":"text","text":" - Browser support: All browsers"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"https://www.w3.org/WAI/WCAG21/Understanding/focus-order.html","target":"https://www.w3.org/WAI/WCAG21/Understanding/focus-order.html"},{"kind":"text","text":" - WCAG: Maintaining focus during scroll"},{"kind":"text","text":"\n"}]}]},"type":{"type":"intrinsic","name":"number"},"is":{"declaration":false},"location":{"query":"DOM.Function.getScrollTop","hash":"getScrollTop"},"text":{"comment":"<h5>Description:</h5><p>Gets the current vertical scroll position of the document</p>\n<h5>Returns:</h5><p>The number of pixels scrolled from the top of the document</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Show/hide scroll-to-top button based on scroll position</span>\n<span class=\"pl-c1\">window</span>.<span class=\"pl-c1\">addEventListener</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>scroll<span class=\"pl-pds\">'</span></span>, () <span class=\"pl-k\">=></span> {\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">scrollTop</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getScrollTop</span>();\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">scrollButton</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">getElementById</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>scroll-to-top<span class=\"pl-pds\">'</span></span>);\n\n  <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">scrollTop</span> <span class=\"pl-k\">></span> <span class=\"pl-c1\">300</span>) {\n    <span class=\"pl-smi\">scrollButton</span>.<span class=\"pl-c1\">style</span>.<span class=\"pl-c1\">display</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>block<span class=\"pl-pds\">'</span></span>;\n    <span class=\"pl-smi\">scrollButton</span>.<span class=\"pl-c1\">setAttribute</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>aria-hidden<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>false<span class=\"pl-pds\">'</span></span>);\n  } <span class=\"pl-k\">else</span> {\n    <span class=\"pl-smi\">scrollButton</span>.<span class=\"pl-c1\">style</span>.<span class=\"pl-c1\">display</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>none<span class=\"pl-pds\">'</span></span>;\n    <span class=\"pl-smi\">scrollButton</span>.<span class=\"pl-c1\">setAttribute</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>aria-hidden<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>true<span class=\"pl-pds\">'</span></span>);\n  }\n});\n</code></pre>\n<h5>Example:</h5><p>// Implement scroll progress indicator\nfunction updateScrollProgress() {\n  const scrollTop = getScrollTop();\n  const docHeight = document.documentElement.scrollHeight - window.innerHeight;\n  const scrollPercent = (scrollTop / docHeight) * 100;</p>\n<p>  const progressBar = document.getElementById(&#39;scroll-progress&#39;);\n  progressBar.style.width = <code>${scrollPercent}%</code>;\n  progressBar.setAttribute(&#39;aria-valuenow&#39;, scrollPercent.toString());\n}</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Lazy loading based on scroll position</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">images</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">querySelectorAll</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>img[data-src]<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-c1\">window</span>.<span class=\"pl-c1\">addEventListener</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>scroll<span class=\"pl-pds\">'</span></span>, () <span class=\"pl-k\">=></span> {\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">scrollTop</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getScrollTop</span>();\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">viewportHeight</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">window</span>.<span class=\"pl-c1\">innerHeight</span>;\n\n  <span class=\"pl-smi\">images</span>.<span class=\"pl-c1\">forEach</span>(<span class=\"pl-v\">img</span> <span class=\"pl-k\">=></span> {\n    <span class=\"pl-k\">const</span> <span class=\"pl-c1\">imgTop</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">getOffsetPos</span>(<span class=\"pl-smi\">img</span>).<span class=\"pl-c1\">top</span>;\n    <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">imgTop</span> <span class=\"pl-k\">&#x3C;</span> <span class=\"pl-smi\">scrollTop</span> <span class=\"pl-k\">+</span> <span class=\"pl-smi\">viewportHeight</span> <span class=\"pl-k\">+</span> <span class=\"pl-c1\">100</span>) {\n      <span class=\"pl-smi\">img</span>.<span class=\"pl-smi\">src</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">img</span>.<span class=\"pl-smi\">dataset</span>.<span class=\"pl-smi\">src</span>;\n      <span class=\"pl-smi\">img</span>.<span class=\"pl-c1\">removeAttribute</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>data-src<span class=\"pl-pds\">'</span></span>);\n    }\n  });\n});\n</code></pre>\n<h5>Since:</h5><p>1.0.0</p>\n<h5>See:</h5><ul>\n<li><a href=\"830\">setScrollTop</a> - Set scroll position</li>\n<li><a href=\"824\">getScrollPosition</a> - Get both X and Y scroll positions</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop\">https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop</a> - Browser support: All browsers</li>\n<li><a href=\"https://www.w3.org/WAI/WCAG21/Understanding/focus-order.html\">https://www.w3.org/WAI/WCAG21/Understanding/focus-order.html</a> - WCAG: Maintaining focus during scroll</li>\n</ul>\n"},"sources":[{"fileName":"packages/web-utils/src/dom.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/web-utils/src/dom.ts","line":593,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/web-utils/src/dom.ts#L593"}],"parentId":822}],"is":{"declaration":true},"location":{"query":"DOM.Function.getScrollTop","hash":""},"text":{},"parentId":775}
