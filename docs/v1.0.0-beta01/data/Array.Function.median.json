{"id":296,"name":"median","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/array.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/array.ts","line":976,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/array.ts#L976"}],"signatures":[{"id":297,"name":"median","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"median"}]},{"tag":"@description","content":[{"kind":"text","text":"查找数字数组的中位数值。Finds the median value of a numeric array"}]},{"tag":"@returns","content":[{"kind":"text","text":"中位数值。对于偶数长度的数组，返回两个中间值的平均值。The median value. For even-length arrays, returns the average of the two middle values"}]},{"tag":"@throws","content":[{"kind":"text","text":"当arr不是数组或包含非数字值时抛出错误。When arr is not an array or contains non-numeric values"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Odd length arrays\nmedian([1, 2, 3, 4, 5]); // -> 3\nmedian([7, 2, 10, 9]); // -> 8 (sorted: [2, 7, 9, 10], median of 7 and 9)\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Even length arrays\nmedian([1, 2, 3, 4, 5, 6]); // -> 3.5 (average of 3 and 4)\nmedian([1, 3]); // -> 2 (average of 1 and 3)\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Unsorted arrays\nmedian([1, 2, 10, 2, 20]); // -> 2 (sorted: [1, 2, 2, 10, 20])\nmedian([5, 1, 9, 3]); // -> 4 (sorted: [1, 3, 5, 9], average of 3 and 5)\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Edge cases\nmedian([]); // -> NaN\nmedian([42]); // -> 42\nmedian([1, 1, 1]); // -> 1\n```"}]}]},"parameters":[{"id":298,"name":"arr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要查找中位数的数字数组。Array of numbers to find median of"}]},"type":{"type":"reference","id":299,"name":"NumberArr"},"text":{"comment":"<p>要查找中位数的数字数组。Array of numbers to find median of</p>\n"}}],"type":{"type":"intrinsic","name":"number"},"is":{"declaration":false},"location":{"query":"Array.Function.median","hash":"median"},"text":{"comment":"<h5>Function:</h5><p>median</p>\n<h5>Description:</h5><p>查找数字数组的中位数值。Finds the median value of a numeric array</p>\n<h5>Returns:</h5><p>中位数值。对于偶数长度的数组，返回两个中间值的平均值。The median value. For even-length arrays, returns the average of the two middle values</p>\n<h5>Throws:</h5><p>当arr不是数组或包含非数字值时抛出错误。When arr is not an array or contains non-numeric values</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Odd length arrays</span>\n<span class=\"pl-en\">median</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>]); <span class=\"pl-c\">// -> 3</span>\n<span class=\"pl-en\">median</span>([<span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">9</span>]); <span class=\"pl-c\">// -> 8 (sorted: [2, 7, 9, 10], median of 7 and 9)</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Even length arrays</span>\n<span class=\"pl-en\">median</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">6</span>]); <span class=\"pl-c\">// -> 3.5 (average of 3 and 4)</span>\n<span class=\"pl-en\">median</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">3</span>]); <span class=\"pl-c\">// -> 2 (average of 1 and 3)</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Unsorted arrays</span>\n<span class=\"pl-en\">median</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">10</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">20</span>]); <span class=\"pl-c\">// -> 2 (sorted: [1, 2, 2, 10, 20])</span>\n<span class=\"pl-en\">median</span>([<span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">9</span>, <span class=\"pl-c1\">3</span>]); <span class=\"pl-c\">// -> 4 (sorted: [1, 3, 5, 9], average of 3 and 5)</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Edge cases</span>\n<span class=\"pl-en\">median</span>([]); <span class=\"pl-c\">// -> NaN</span>\n<span class=\"pl-en\">median</span>([<span class=\"pl-c1\">42</span>]); <span class=\"pl-c\">// -> 42</span>\n<span class=\"pl-en\">median</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">1</span>]); <span class=\"pl-c\">// -> 1</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/array.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/array.ts","line":976,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/array.ts#L976"}],"parentId":296}],"is":{"declaration":true},"location":{"query":"Array.Function.median","hash":""},"text":{},"parentId":154}
