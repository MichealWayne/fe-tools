{"id":680,"name":"truncateString","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/string.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/string.ts","line":353,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/string.ts#L353"}],"signatures":[{"id":681,"name":"truncateString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"truncateString"}]},{"tag":"@description","content":[{"kind":"text","text":"将字符串截断到指定长度，如果截断则添加省略号。Truncates a string to a specified length and adds ellipsis if truncated"}]},{"tag":"@returns","content":[{"kind":"text","text":"如果需要则带有省略号的截断字符串，或在限制内的原始字符串。Truncated string with ellipsis if needed, or original string if within limit"}]},{"tag":"@throws","content":[{"kind":"text","text":"当str不是字符串或num不是数字时。When str is not a string or num is not a number"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic truncation\ntruncateString('hello world', 5); // -> 'he...' (truncated to 5, minus 3 for ellipsis)\ntruncateString('hello world', 8); // -> 'hello...'\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Default length (10)\ntruncateString('hello world'); // -> 'hello w...'\ntruncateString('short'); // -> 'short' (no truncation needed)\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// No truncation needed\ntruncateString('hello world', 11); // -> 'hello world'\ntruncateString('hello world', 20); // -> 'hello world'\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Very short limits\ntruncateString('hello', 3); // -> '...' (when num <= 3, only ellipsis shown)\ntruncateString('hello', 2); // -> '..' (ellipsis truncated to fit)\ntruncateString('hello', 1); // -> '.' (single character ellipsis)\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Edge cases\ntruncateString('', 5); // -> ''\ntruncateString(null, 5); // -> null (handles null input)\ntruncateString(undefined, 5); // -> undefined (handles undefined input)\n```"}]}]},"parameters":[{"id":682,"name":"str","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要截断的字符串。String to truncate"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>要截断的字符串。String to truncate</p>\n"}},{"id":683,"name":"num","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"截断前的最大长度（默认：10）。Maximum length before truncation (default: 10)"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"10","text":{"comment":"<p>截断前的最大长度（默认：10）。Maximum length before truncation (default: 10)</p>\n"}}],"type":{"type":"intrinsic","name":"string"},"is":{"declaration":false},"location":{"query":"String.Function.truncateString","hash":"truncateString"},"text":{"comment":"<h5>Function:</h5><p>truncateString</p>\n<h5>Description:</h5><p>将字符串截断到指定长度，如果截断则添加省略号。Truncates a string to a specified length and adds ellipsis if truncated</p>\n<h5>Returns:</h5><p>如果需要则带有省略号的截断字符串，或在限制内的原始字符串。Truncated string with ellipsis if needed, or original string if within limit</p>\n<h5>Throws:</h5><p>当str不是字符串或num不是数字时。When str is not a string or num is not a number</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic truncation</span>\n<span class=\"pl-en\">truncateString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>hello world<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">5</span>); <span class=\"pl-c\">// -> 'he...' (truncated to 5, minus 3 for ellipsis)</span>\n<span class=\"pl-en\">truncateString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>hello world<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">8</span>); <span class=\"pl-c\">// -> 'hello...'</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Default length (10)</span>\n<span class=\"pl-en\">truncateString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>hello world<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> 'hello w...'</span>\n<span class=\"pl-en\">truncateString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>short<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> 'short' (no truncation needed)</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// No truncation needed</span>\n<span class=\"pl-en\">truncateString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>hello world<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">11</span>); <span class=\"pl-c\">// -> 'hello world'</span>\n<span class=\"pl-en\">truncateString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>hello world<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">20</span>); <span class=\"pl-c\">// -> 'hello world'</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Very short limits</span>\n<span class=\"pl-en\">truncateString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>hello<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">3</span>); <span class=\"pl-c\">// -> '...' (when num &#x3C;= 3, only ellipsis shown)</span>\n<span class=\"pl-en\">truncateString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>hello<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">2</span>); <span class=\"pl-c\">// -> '..' (ellipsis truncated to fit)</span>\n<span class=\"pl-en\">truncateString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>hello<span class=\"pl-pds\">'</span></span>, <span class=\"pl-c1\">1</span>); <span class=\"pl-c\">// -> '.' (single character ellipsis)</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Edge cases</span>\n<span class=\"pl-en\">truncateString</span>(<span class=\"pl-s\"><span class=\"pl-pds\">''</span></span>, <span class=\"pl-c1\">5</span>); <span class=\"pl-c\">// -> ''</span>\n<span class=\"pl-en\">truncateString</span>(<span class=\"pl-c1\">null</span>, <span class=\"pl-c1\">5</span>); <span class=\"pl-c\">// -> null (handles null input)</span>\n<span class=\"pl-en\">truncateString</span>(<span class=\"pl-c1\">undefined</span>, <span class=\"pl-c1\">5</span>); <span class=\"pl-c\">// -> undefined (handles undefined input)</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/string.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/string.ts","line":353,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/string.ts#L353"}],"parentId":680}],"is":{"declaration":true},"location":{"query":"String.Function.truncateString","hash":""},"text":{},"parentId":651}
