{"id":723,"name":"isObject","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/type.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/type.ts","line":214,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/type.ts#L214"}],"signatures":[{"id":724,"name":"isObject","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"isObject"}]},{"tag":"@description","content":[{"kind":"text","text":"检查值是否为普通对象（不是数组、函数、日期等）。Checks if a value is a plain object (not array, function, date, etc.)"}]},{"tag":"@returns","content":[{"kind":"text","text":"如果值为普通对象则返回true，否则返回false。True if the value is a plain object, false otherwise"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Plain objects\nisObject({ a: 1, b: '2' }); // -> true\nisObject({}); // -> true (empty object)\nisObject(Object.create(null)); // -> true\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Not plain objects\nisObject([1, 2, 3]); // -> false (array)\nisObject(null); // -> false\nisObject(new Date()); // -> false (Date object)\nisObject(() => {}); // -> false (function)\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Constructor objects\nisObject(new Object()); // -> true\nisObject(new String('test')); // -> false (String object)\nisObject(new Number(42)); // -> false (Number object)\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Built-in objects\nisObject(new Map()); // -> false\nisObject(new Set()); // -> false\nisObject(/regex/); // -> false\n```"}]}]},"parameters":[{"id":725,"name":"val","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"要检查的值。Value to check"}]},"type":{"type":"intrinsic","name":"unknown"},"text":{"comment":"<p>要检查的值。Value to check</p>\n"}}],"type":{"type":"predicate","name":"val","asserts":false,"targetType":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","qualifiedName":"Record","package":"typescript"}},"is":{"declaration":false},"location":{"query":"Type.Function.isObject","hash":"isObject"},"text":{"comment":"<h5>Function:</h5><p>isObject</p>\n<h5>Description:</h5><p>检查值是否为普通对象（不是数组、函数、日期等）。Checks if a value is a plain object (not array, function, date, etc.)</p>\n<h5>Returns:</h5><p>如果值为普通对象则返回true，否则返回false。True if the value is a plain object, false otherwise</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Plain objects</span>\n<span class=\"pl-en\">isObject</span>({ a: <span class=\"pl-c1\">1</span>, b: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>2<span class=\"pl-pds\">'</span></span> }); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">isObject</span>({}); <span class=\"pl-c\">// -> true (empty object)</span>\n<span class=\"pl-en\">isObject</span>(<span class=\"pl-c1\">Object</span>.<span class=\"pl-en\">create</span>(<span class=\"pl-c1\">null</span>)); <span class=\"pl-c\">// -> true</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Not plain objects</span>\n<span class=\"pl-en\">isObject</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>]); <span class=\"pl-c\">// -> false (array)</span>\n<span class=\"pl-en\">isObject</span>(<span class=\"pl-c1\">null</span>); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isObject</span>(<span class=\"pl-k\">new</span> <span class=\"pl-c1\">Date</span>()); <span class=\"pl-c\">// -> false (Date object)</span>\n<span class=\"pl-en\">isObject</span>(() <span class=\"pl-k\">=></span> {}); <span class=\"pl-c\">// -> false (function)</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Constructor objects</span>\n<span class=\"pl-en\">isObject</span>(<span class=\"pl-k\">new</span> <span class=\"pl-c1\">Object</span>()); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">isObject</span>(<span class=\"pl-k\">new</span> <span class=\"pl-c1\">String</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>test<span class=\"pl-pds\">'</span></span>)); <span class=\"pl-c\">// -> false (String object)</span>\n<span class=\"pl-en\">isObject</span>(<span class=\"pl-k\">new</span> <span class=\"pl-c1\">Number</span>(<span class=\"pl-c1\">42</span>)); <span class=\"pl-c\">// -> false (Number object)</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Built-in objects</span>\n<span class=\"pl-en\">isObject</span>(<span class=\"pl-k\">new</span> <span class=\"pl-c1\">Map</span>()); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isObject</span>(<span class=\"pl-k\">new</span> <span class=\"pl-c1\">Set</span>()); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isObject</span>(<span class=\"pl-s\"><span class=\"pl-sr\"><span class=\"pl-pds\">/</span>regex<span class=\"pl-pds\">/</span></span></span>); <span class=\"pl-c\">// -> false</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/type.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/type.ts","line":214,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/type.ts#L214"}],"parentId":723}],"is":{"declaration":true},"location":{"query":"Type.Function.isObject","hash":""},"text":{},"parentId":710}
