{"id":399,"name":"runPromisesInSeries","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"utils/src/function.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/function.ts","line":71,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/6f6235b/utils/packages/utils/src/function.ts#L71"}],"signatures":[{"id":400,"name":"runPromisesInSeries","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"runPromisesInSeries"}]},{"tag":"@description","content":[{"kind":"text","text":"队列执行promise"}]},{"tag":"@returns","content":[]},{"tag":"@example","content":[{"kind":"code","text":"```ts\nasync function fetchData(url: string) {\r\n const response = await fetch(url);\r\n const data = await response.json();\r\n return data;\r\n}\r\n\nconst urls = ['https://api.example.com/data1', 'https://api.example.com/data2', 'https://api.example.com/data3'];\r\n\nrunPromisesInSeries(urls.map(url => () => fetchData(url)))\r\n .then(results => console.log(results))\r\n .catch(error => console.error(error));\n```"}]}]},"parameters":[{"id":401,"name":"ps","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":402,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"utils/src/function.ts","line":71,"character":46,"url":"https://github.com/MichealWayne/fe-tools/blob/6f6235b/utils/packages/utils/src/function.ts#L71"}],"signatures":[{"id":403,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":404,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"}}]}}},"text":{}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","qualifiedName":"Promise","package":"typescript"},"is":{"declaration":false},"location":{"query":"Function.Function.runPromisesInSeries","hash":"runPromisesInSeries"},"text":{"comment":"<h5>Function:</h5><p>runPromisesInSeries</p>\n<h5>Description:</h5><p>队列执行promise</p>\n<h5>Returns:</h5><h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-en\">fetchData</span>(<span class=\"pl-v\">url</span><span class=\"pl-k\">:</span> <span class=\"pl-c1\">string</span>) {\n <span class=\"pl-k\">const</span> <span class=\"pl-c1\">response</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">fetch</span>(<span class=\"pl-smi\">url</span>);\n <span class=\"pl-k\">const</span> <span class=\"pl-c1\">data</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-smi\">response</span>.<span class=\"pl-en\">json</span>();\n <span class=\"pl-k\">return</span> <span class=\"pl-smi\">data</span>;\n}\n\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">urls</span> <span class=\"pl-k\">=</span> [<span class=\"pl-s\"><span class=\"pl-pds\">'</span>https://api.example.com/data1<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>https://api.example.com/data2<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>https://api.example.com/data3<span class=\"pl-pds\">'</span></span>];\n\n<span class=\"pl-en\">runPromisesInSeries</span>(<span class=\"pl-smi\">urls</span>.<span class=\"pl-en\">map</span>(<span class=\"pl-v\">url</span> <span class=\"pl-k\">=></span> () <span class=\"pl-k\">=></span> <span class=\"pl-en\">fetchData</span>(<span class=\"pl-smi\">url</span>)))\n .<span class=\"pl-c1\">then</span>(<span class=\"pl-v\">results</span> <span class=\"pl-k\">=></span> <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-smi\">results</span>))\n .<span class=\"pl-c1\">catch</span>(<span class=\"pl-v\">error</span> <span class=\"pl-k\">=></span> <span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">error</span>(<span class=\"pl-smi\">error</span>));\n</code></pre>\n"},"sources":[{"fileName":"utils/src/function.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/function.ts","line":71,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/6f6235b/utils/packages/utils/src/function.ts#L71"}],"parentId":399}],"is":{"declaration":true},"location":{"query":"Function.Function.runPromisesInSeries","hash":""},"text":{},"parentId":382}
