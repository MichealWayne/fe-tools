{"id":636,"name":"isEmptyObj","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/object.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/object.ts","line":308,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/object.ts#L308"}],"signatures":[{"id":637,"name":"isEmptyObj","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"isEmptyObj"}]},{"tag":"@description","content":[{"kind":"text","text":"检查值是否为空对象（没有自有可枚举属性的对象）。Checks if a value is an empty object (object with no own enumerable properties)"}]},{"tag":"@returns","content":[{"kind":"text","text":"如果值是没有任何自有可枚举属性的对象则返回true，否则返回false。True if the value is an object with no own enumerable properties, false otherwise"}]},{"tag":"@throws","content":[{"kind":"text","text":"当类型检查失败时。When type checking fails"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Empty objects\nisEmptyObj({}); // -> true\nisEmptyObj(new Object()); // -> true\nisEmptyObj(Object.create(null)); // -> true\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Non-empty objects\nisEmptyObj({ a: 1 }); // -> false\nisEmptyObj({ a: undefined }); // -> false (property exists)\nisEmptyObj({ 0: 'value' }); // -> false\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Non-objects return false\nisEmptyObj(null); // -> false\nisEmptyObj(undefined); // -> false\nisEmptyObj(''); // -> false (string, not object)\nisEmptyObj([]); // -> false (array, not plain object)\nisEmptyObj(0); // -> false\nisEmptyObj(false); // -> false\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Objects with inherited properties only\nconst obj = Object.create({ inherited: 'value' });\nisEmptyObj(obj); // -> true (no own properties)\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Objects with non-enumerable properties\nconst obj = {};\nObject.defineProperty(obj, 'hidden', { value: 'secret', enumerable: false });\nisEmptyObj(obj); // -> true (no enumerable own properties)\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Practical usage\nfunction processConfig(config) {\n  if (isEmptyObj(config)) {\n    return getDefaultConfig();\n  }\n  return { ...getDefaultConfig(), ...config };\n}\n```"}]}]},"parameters":[{"id":638,"name":"obj","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"要检查是否为空的值。Value to check for emptiness"}]},"type":{"type":"intrinsic","name":"unknown"},"text":{"comment":"<p>要检查是否为空的值。Value to check for emptiness</p>\n"}}],"type":{"type":"intrinsic","name":"boolean"},"is":{"declaration":false},"location":{"query":"Object.Function.isEmptyObj","hash":"isEmptyObj"},"text":{"comment":"<h5>Function:</h5><p>isEmptyObj</p>\n<h5>Description:</h5><p>检查值是否为空对象（没有自有可枚举属性的对象）。Checks if a value is an empty object (object with no own enumerable properties)</p>\n<h5>Returns:</h5><p>如果值是没有任何自有可枚举属性的对象则返回true，否则返回false。True if the value is an object with no own enumerable properties, false otherwise</p>\n<h5>Throws:</h5><p>当类型检查失败时。When type checking fails</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Empty objects</span>\n<span class=\"pl-en\">isEmptyObj</span>({}); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">isEmptyObj</span>(<span class=\"pl-k\">new</span> <span class=\"pl-c1\">Object</span>()); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">isEmptyObj</span>(<span class=\"pl-c1\">Object</span>.<span class=\"pl-en\">create</span>(<span class=\"pl-c1\">null</span>)); <span class=\"pl-c\">// -> true</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Non-empty objects</span>\n<span class=\"pl-en\">isEmptyObj</span>({ a: <span class=\"pl-c1\">1</span> }); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isEmptyObj</span>({ a: <span class=\"pl-c1\">undefined</span> }); <span class=\"pl-c\">// -> false (property exists)</span>\n<span class=\"pl-en\">isEmptyObj</span>({ <span class=\"pl-c1\">0</span>: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>value<span class=\"pl-pds\">'</span></span> }); <span class=\"pl-c\">// -> false</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Non-objects return false</span>\n<span class=\"pl-en\">isEmptyObj</span>(<span class=\"pl-c1\">null</span>); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isEmptyObj</span>(<span class=\"pl-c1\">undefined</span>); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isEmptyObj</span>(<span class=\"pl-s\"><span class=\"pl-pds\">''</span></span>); <span class=\"pl-c\">// -> false (string, not object)</span>\n<span class=\"pl-en\">isEmptyObj</span>([]); <span class=\"pl-c\">// -> false (array, not plain object)</span>\n<span class=\"pl-en\">isEmptyObj</span>(<span class=\"pl-c1\">0</span>); <span class=\"pl-c\">// -> false</span>\n<span class=\"pl-en\">isEmptyObj</span>(<span class=\"pl-c1\">false</span>); <span class=\"pl-c\">// -> false</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Objects with inherited properties only</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">obj</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">Object</span>.<span class=\"pl-en\">create</span>({ inherited: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>value<span class=\"pl-pds\">'</span></span> });\n<span class=\"pl-en\">isEmptyObj</span>(<span class=\"pl-smi\">obj</span>); <span class=\"pl-c\">// -> true (no own properties)</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Objects with non-enumerable properties</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">obj</span> <span class=\"pl-k\">=</span> {};\n<span class=\"pl-c1\">Object</span>.<span class=\"pl-en\">defineProperty</span>(<span class=\"pl-smi\">obj</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>hidden<span class=\"pl-pds\">'</span></span>, { value: <span class=\"pl-s\"><span class=\"pl-pds\">'</span>secret<span class=\"pl-pds\">'</span></span>, enumerable: <span class=\"pl-c1\">false</span> });\n<span class=\"pl-en\">isEmptyObj</span>(<span class=\"pl-smi\">obj</span>); <span class=\"pl-c\">// -> true (no enumerable own properties)</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Practical usage</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">processConfig</span>(<span class=\"pl-v\">config</span>) {\n  <span class=\"pl-k\">if</span> (<span class=\"pl-en\">isEmptyObj</span>(<span class=\"pl-smi\">config</span>)) {\n    <span class=\"pl-k\">return</span> <span class=\"pl-en\">getDefaultConfig</span>();\n  }\n  <span class=\"pl-k\">return</span> { <span class=\"pl-k\">...</span><span class=\"pl-en\">getDefaultConfig</span>(), <span class=\"pl-k\">...</span><span class=\"pl-smi\">config</span> };\n}\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/object.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/object.ts","line":308,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/object.ts#L308"}],"parentId":636}],"is":{"declaration":true},"location":{"query":"Object.Function.isEmptyObj","hash":""},"text":{},"parentId":603}
