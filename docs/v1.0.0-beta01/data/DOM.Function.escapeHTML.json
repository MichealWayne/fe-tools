{"id":813,"name":"escapeHTML","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/web-utils/src/dom.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/web-utils/src/dom.ts","line":468,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/web-utils/src/dom.ts#L468"}],"signatures":[{"id":814,"name":"escapeHTML","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@description","content":[{"kind":"text","text":"Escapes HTML special characters to prevent XSS attacks and ensure safe text display"}]},{"tag":"@returns","content":[{"kind":"text","text":"The escaped string with HTML entities, or original if null/undefined"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic XSS prevention\r\nconst userInput = '<script>alert(\"XSS\")</script>';\r\nconst safeText = escapeHTML(userInput);\r\nconsole.log(safeText); // '&lt;script&gt;alert(&quot;XSS&quot;)&lt;/script&gt;'\n```"}]},{"tag":"@example","content":[{"kind":"text","text":"// Safe display of user content\r\nconst commentText = escapeHTML(user.comment);\r\ndocument.getElementById('comment').innerHTML = "},{"kind":"code","text":"`<p>${commentText}</p>`"},{"kind":"text","text":";"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Real-time input sanitization\r\nconst inputBox = document.getElementById('input-box');\r\nconst outputBox = document.getElementById('output-box');\r\n\r\ninputBox.addEventListener('input', () => {\r\n  const escapedText = escapeHTML(inputBox.value);\r\n  outputBox.textContent = escapedText; // Use textContent for additional safety\r\n});\n```"}]},{"tag":"@example","content":[{"kind":"text","text":"// Escape quotes for HTML attributes\r\nconst title = "},{"kind":"code","text":"`User said: \"Hello & goodbye\"`"},{"kind":"text","text":";\r\nconst escapedTitle = escapeHTML(title);\r\nelement.setAttribute('title', escapedTitle);"}]},{"tag":"@since","content":[{"kind":"text","text":"1.0.0"}]},{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html","target":"https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html"},{"kind":"text","text":" - OWASP XSS Prevention"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"https://developer.mozilla.org/en-US/docs/Glossary/Entity","target":"https://developer.mozilla.org/en-US/docs/Glossary/Entity"},{"kind":"text","text":" - HTML entities reference"},{"kind":"text","text":"\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@link","text":"https://www.w3.org/International/questions/qa-escapes","target":"https://www.w3.org/International/questions/qa-escapes"},{"kind":"text","text":" - W3C character escaping guidelines"},{"kind":"text","text":"\n"}]}]},"parameters":[{"id":815,"name":"str","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The string to escape (handles null/undefined gracefully)"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>The string to escape (handles null/undefined gracefully)</p>\n"}}],"type":{"type":"intrinsic","name":"string"},"is":{"declaration":false},"location":{"query":"DOM.Function.escapeHTML","hash":"escapeHTML"},"text":{"comment":"<h5>Description:</h5><p>Escapes HTML special characters to prevent XSS attacks and ensure safe text display</p>\n<h5>Returns:</h5><p>The escaped string with HTML entities, or original if null/undefined</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic XSS prevention</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">userInput</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>&#x3C;script>alert(\"XSS\")&#x3C;/script><span class=\"pl-pds\">'</span></span>;\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">safeText</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">escapeHTML</span>(<span class=\"pl-smi\">userInput</span>);\n<span class=\"pl-c1\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-smi\">safeText</span>); <span class=\"pl-c\">// '&#x26;lt;script&#x26;gt;alert(&#x26;quot;XSS&#x26;quot;)&#x26;lt;/script&#x26;gt;'</span>\n</code></pre>\n<h5>Example:</h5><p>// Safe display of user content\nconst commentText = escapeHTML(user.comment);\ndocument.getElementById(&#39;comment&#39;).innerHTML = <code>&lt;p&gt;${commentText}&lt;/p&gt;</code>;</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Real-time input sanitization</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">inputBox</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">getElementById</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>input-box<span class=\"pl-pds\">'</span></span>);\n<span class=\"pl-k\">const</span> <span class=\"pl-c1\">outputBox</span> <span class=\"pl-k\">=</span> <span class=\"pl-c1\">document</span>.<span class=\"pl-c1\">getElementById</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>output-box<span class=\"pl-pds\">'</span></span>);\n\n<span class=\"pl-smi\">inputBox</span>.<span class=\"pl-c1\">addEventListener</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>input<span class=\"pl-pds\">'</span></span>, () <span class=\"pl-k\">=></span> {\n  <span class=\"pl-k\">const</span> <span class=\"pl-c1\">escapedText</span> <span class=\"pl-k\">=</span> <span class=\"pl-en\">escapeHTML</span>(<span class=\"pl-smi\">inputBox</span>.<span class=\"pl-c1\">value</span>);\n  <span class=\"pl-smi\">outputBox</span>.<span class=\"pl-smi\">textContent</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">escapedText</span>; <span class=\"pl-c\">// Use textContent for additional safety</span>\n});\n</code></pre>\n<h5>Example:</h5><p>// Escape quotes for HTML attributes\nconst title = <code>User said: &quot;Hello &amp; goodbye&quot;</code>;\nconst escapedTitle = escapeHTML(title);\nelement.setAttribute(&#39;title&#39;, escapedTitle);</p>\n<h5>Since:</h5><p>1.0.0</p>\n<h5>See:</h5><ul>\n<li><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html\">https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html</a> - OWASP XSS Prevention</li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Glossary/Entity\">https://developer.mozilla.org/en-US/docs/Glossary/Entity</a> - HTML entities reference</li>\n<li><a href=\"https://www.w3.org/International/questions/qa-escapes\">https://www.w3.org/International/questions/qa-escapes</a> - W3C character escaping guidelines</li>\n</ul>\n"},"sources":[{"fileName":"packages/web-utils/src/dom.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/web-utils/src/dom.ts","line":468,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/web-utils/src/dom.ts#L468"}],"parentId":813}],"is":{"declaration":true},"location":{"query":"DOM.Function.escapeHTML","hash":""},"text":{},"parentId":775}
