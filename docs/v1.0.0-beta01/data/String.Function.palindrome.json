{"id":670,"name":"palindrome","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/string.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/string.ts","line":242,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/string.ts#L242"}],"signatures":[{"id":671,"name":"palindrome","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"palindrome"}]},{"tag":"@description","content":[{"kind":"text","text":"检查字符串是否为回文（正读和反读相同）。Checks if a string is a palindrome (reads the same forwards and backwards)"}]},{"tag":"@returns","content":[{"kind":"text","text":"如果字符串是回文则返回true（忽略大小写、空格和标点），否则返回false。True if the string is a palindrome (ignoring case, spaces, and punctuation), false otherwise"}]},{"tag":"@throws","content":[{"kind":"text","text":"当str不是字符串时。When str is not a string"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Simple palindromes\npalindrome('racecar'); // -> true\npalindrome('level'); // -> true\npalindrome('hello'); // -> false\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Case insensitive\npalindrome('Racecar'); // -> true\npalindrome('MadAm'); // -> true\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Ignoring spaces and punctuation\npalindrome('A man, a plan, a canal: Panama'); // -> true\npalindrome('race a car'); // -> false\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Numbers\npalindrome('1001'); // -> true\npalindrome('12321'); // -> true\npalindrome('12345'); // -> false\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Edge cases\npalindrome(''); // -> true (empty string is considered palindrome)\npalindrome('a'); // -> true (single character)\npalindrome('!!'); // -> true (repeated punctuation)\n```"}]}]},"parameters":[{"id":672,"name":"str","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要检查回文属性的字符串。String to check for palindrome property"}]},"type":{"type":"intrinsic","name":"string"},"text":{"comment":"<p>要检查回文属性的字符串。String to check for palindrome property</p>\n"}}],"type":{"type":"intrinsic","name":"boolean"},"is":{"declaration":false},"location":{"query":"String.Function.palindrome","hash":"palindrome"},"text":{"comment":"<h5>Function:</h5><p>palindrome</p>\n<h5>Description:</h5><p>检查字符串是否为回文（正读和反读相同）。Checks if a string is a palindrome (reads the same forwards and backwards)</p>\n<h5>Returns:</h5><p>如果字符串是回文则返回true（忽略大小写、空格和标点），否则返回false。True if the string is a palindrome (ignoring case, spaces, and punctuation), false otherwise</p>\n<h5>Throws:</h5><p>当str不是字符串时。When str is not a string</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Simple palindromes</span>\n<span class=\"pl-en\">palindrome</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>racecar<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">palindrome</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>level<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">palindrome</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>hello<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> false</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Case insensitive</span>\n<span class=\"pl-en\">palindrome</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Racecar<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">palindrome</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>MadAm<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> true</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Ignoring spaces and punctuation</span>\n<span class=\"pl-en\">palindrome</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>A man, a plan, a canal: Panama<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">palindrome</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>race a car<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> false</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Numbers</span>\n<span class=\"pl-en\">palindrome</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>1001<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">palindrome</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>12321<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> true</span>\n<span class=\"pl-en\">palindrome</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>12345<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> false</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Edge cases</span>\n<span class=\"pl-en\">palindrome</span>(<span class=\"pl-s\"><span class=\"pl-pds\">''</span></span>); <span class=\"pl-c\">// -> true (empty string is considered palindrome)</span>\n<span class=\"pl-en\">palindrome</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> true (single character)</span>\n<span class=\"pl-en\">palindrome</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>!!<span class=\"pl-pds\">'</span></span>); <span class=\"pl-c\">// -> true (repeated punctuation)</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/string.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/string.ts","line":242,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/string.ts#L242"}],"parentId":670}],"is":{"declaration":true},"location":{"query":"String.Function.palindrome","hash":""},"text":{},"parentId":651}
