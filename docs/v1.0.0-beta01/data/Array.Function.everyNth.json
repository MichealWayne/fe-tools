{"id":268,"name":"everyNth","kind":64,"kindString":"Function","flags":{},"children":[],"sources":[{"fileName":"packages/utils/src/array.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/array.ts","line":749,"character":16,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/array.ts#L749"}],"signatures":[{"id":269,"name":"everyNth","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@function","content":[{"kind":"text","text":"everyNth"}]},{"tag":"@description","content":[{"kind":"text","text":"从数组中返回每个第n个元素，从索引0开始。Returns every nth element from an array, starting from index 0"}]},{"tag":"@returns","content":[{"kind":"text","text":"包含每个第n个元素的数组。Array containing every nth element"}]},{"tag":"@throws","content":[{"kind":"text","text":"当arr不是数组或nth不是数字时抛出错误。When arr is not an array or nth is not a number"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Basic usage\neveryNth([1, 2, 3, 4, 5, 6], 2); // -> [1, 3, 5]\neveryNth([1, 2, 3, 4, 5, 6, 7, 8], 3); // -> [1, 4, 7]\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// String arrays\neveryNth(['a', 'b', 'c', 'd', 'e', 'f'], 2); // -> ['a', 'c', 'e']\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\n// Edge cases\neveryNth([], 2); // -> []\neveryNth([1, 2, 3], 1); // -> [1, 2, 3] (every element)\neveryNth([1, 2, 3], 5); // -> [1] (only first element when nth > length)\n```"}]}]},"parameters":[{"id":270,"name":"arr","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"要从中采样的数组。Array to sample from"}]},"type":{"type":"reference","id":300,"name":"AnyArr"},"text":{"comment":"<p>要从中采样的数组。Array to sample from</p>\n"}},{"id":271,"name":"nth","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"采样的间隔（每个第n个元素）。Interval for sampling (every nth element)"}]},"type":{"type":"intrinsic","name":"number"},"text":{"comment":"<p>采样的间隔（每个第n个元素）。Interval for sampling (every nth element)</p>\n"}}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}},"is":{"declaration":false},"location":{"query":"Array.Function.everyNth","hash":"everyNth"},"text":{"comment":"<h5>Function:</h5><p>everyNth</p>\n<h5>Description:</h5><p>从数组中返回每个第n个元素，从索引0开始。Returns every nth element from an array, starting from index 0</p>\n<h5>Returns:</h5><p>包含每个第n个元素的数组。Array containing every nth element</p>\n<h5>Throws:</h5><p>当arr不是数组或nth不是数字时抛出错误。When arr is not an array or nth is not a number</p>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Basic usage</span>\n<span class=\"pl-en\">everyNth</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">6</span>], <span class=\"pl-c1\">2</span>); <span class=\"pl-c\">// -> [1, 3, 5]</span>\n<span class=\"pl-en\">everyNth</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>, <span class=\"pl-c1\">4</span>, <span class=\"pl-c1\">5</span>, <span class=\"pl-c1\">6</span>, <span class=\"pl-c1\">7</span>, <span class=\"pl-c1\">8</span>], <span class=\"pl-c1\">3</span>); <span class=\"pl-c\">// -> [1, 4, 7]</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// String arrays</span>\n<span class=\"pl-en\">everyNth</span>([<span class=\"pl-s\"><span class=\"pl-pds\">'</span>a<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>b<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>c<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>d<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>e<span class=\"pl-pds\">'</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>f<span class=\"pl-pds\">'</span></span>], <span class=\"pl-c1\">2</span>); <span class=\"pl-c\">// -> ['a', 'c', 'e']</span>\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-ts\"><span class=\"pl-c\">// Edge cases</span>\n<span class=\"pl-en\">everyNth</span>([], <span class=\"pl-c1\">2</span>); <span class=\"pl-c\">// -> []</span>\n<span class=\"pl-en\">everyNth</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>], <span class=\"pl-c1\">1</span>); <span class=\"pl-c\">// -> [1, 2, 3] (every element)</span>\n<span class=\"pl-en\">everyNth</span>([<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>], <span class=\"pl-c1\">5</span>); <span class=\"pl-c\">// -> [1] (only first element when nth > length)</span>\n</code></pre>\n"},"sources":[{"fileName":"packages/utils/src/array.ts","fullFileName":"/home/runner/work/fe-tools/fe-tools/utils/packages/utils/src/array.ts","line":749,"character":0,"url":"https://github.com/MichealWayne/fe-tools/blob/e75b369/utils/packages/utils/src/array.ts#L749"}],"parentId":268}],"is":{"declaration":true},"location":{"query":"Array.Function.everyNth","hash":""},"text":{},"parentId":154}
